

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Tue Oct 10 13:33:13 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 1.43
    44                           ; Generated 25/07/2017 GMT
    45                           ; 
    46                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008F                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  0105                     	;# 
   141  0107                     	;# 
   142  0108                     	;# 
   143  0109                     	;# 
   144  010C                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  010F                     	;# 
   149  0185                     	;# 
   150  0187                     	;# 
   151  0188                     	;# 
   152  0189                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155                           
   156                           	psect	idataCOMMON
   157  0B90                     __pidataCOMMON:	
   158                           
   159                           ;initializer for _randx
   160  0B90  3401               	retlw	1
   161  0B91  3400               	retlw	0
   162  0B92  3400               	retlw	0
   163  0B93  3400               	retlw	0
   164                           
   165                           	psect	idataBANK1
   166  0B8C                     __pidataBANK1:	
   167                           
   168                           ;initializer for _GATO
   169  0B8C  3401               	retlw	1
   170  0B8D  3400               	retlw	0
   171                           
   172                           ;initializer for _RATON
   173  0B8E  3404               	retlw	4
   174  0B8F  3400               	retlw	0
   175                           
   176                           	psect	strings
   177  0800                     __pstrings:	
   178  0800                     stringtab:	
   179  0800                     __stringtab:	
   180  0800                     stringcode:	
   181                           ;	String table - string pointers are 1 byte each
   182                           
   183  0800                     stringdir:	
   184  0800  3008               	movlw	high stringdir
   185  0801  008A               	movwf	10
   186  0802  0804               	movf	4,w
   187  0803  0A84               	incf	4,f
   188  0804  0782               	addwf	2,f
   189  0805                     __stringbase:	
   190  0805  3400               	retlw	0
   191  0806                     __end_of__stringtab:	
   192  0806                     exp@coeff:	
   193  0806  3400               	retlw	0
   194  0807  3480               	retlw	128
   195  0808  343F               	retlw	63
   196  0809  3472               	retlw	114
   197  080A  3431               	retlw	49
   198  080B  343F               	retlw	63
   199  080C  34FE               	retlw	254
   200  080D  3475               	retlw	117
   201  080E  343E               	retlw	62
   202  080F  3458               	retlw	88
   203  0810  3463               	retlw	99
   204  0811  343D               	retlw	61
   205  0812  3495               	retlw	149
   206  0813  341D               	retlw	29
   207  0814  343C               	retlw	60
   208  0815  34C5               	retlw	197
   209  0816  34AE               	retlw	174
   210  0817  343A               	retlw	58
   211  0818  3479               	retlw	121
   212  0819  3421               	retlw	33
   213  081A  3439               	retlw	57
   214  081B  3494               	retlw	148
   215  081C  3480               	retlw	128
   216  081D  3437               	retlw	55
   217  081E  3493               	retlw	147
   218  081F  34A7               	retlw	167
   219  0820  3435               	retlw	53
   220  0821  3456               	retlw	86
   221  0822  3415               	retlw	21
   222  0823  3434               	retlw	52
   223  0824                     __end_ofexp@coeff:	
   224  0824                     log@coeff:	
   225  0824  3400               	retlw	0
   226  0825  3400               	retlw	0
   227  0826  3400               	retlw	0
   228  0827  3400               	retlw	0
   229  0828  3480               	retlw	128
   230  0829  343F               	retlw	63
   231  082A  34F0               	retlw	240
   232  082B  34FF               	retlw	255
   233  082C  34BE               	retlw	190
   234  082D  34E2               	retlw	226
   235  082E  34A9               	retlw	169
   236  082F  343E               	retlw	62
   237  0830  3483               	retlw	131
   238  0831  3476               	retlw	118
   239  0832  34BE               	retlw	190
   240  0833  34AE               	retlw	174
   241  0834  342B               	retlw	43
   242  0835  343E               	retlw	62
   243  0836  343C               	retlw	60
   244  0837  34C3               	retlw	195
   245  0838  34BD               	retlw	189
   246  0839  34D2               	retlw	210
   247  083A  3413               	retlw	19
   248  083B  343D               	retlw	61
   249  083C  3478               	retlw	120
   250  083D  34D3               	retlw	211
   251  083E  34BB               	retlw	187
   252  083F                     __end_oflog@coeff:	
   253  0008                     _PORTD	set	8
   254  0006                     _PORTBbits	set	6
   255  0008                     _PORTDbits	set	8
   256  0007                     _PORTC	set	7
   257  000B                     _INTCONbits	set	11
   258  0088                     _TRISD	set	136
   259  0086                     _TRISB	set	134
   260  0087                     _TRISC	set	135
   261  0189                     _ANSELH	set	393
   262  0188                     _ANSEL	set	392
   263                           
   264                           ; #config settings
   265  0000                     
   266                           	psect	cinit
   267  0015                     start_initialization:	
   268  0015                     __initialization:	
   269                           
   270                           ; Initialize objects allocated to BANK1
   271  0015  1683               	bsf	3,5	;RP0=1, select bank1
   272  0016  1303               	bcf	3,6	;RP1=0, select bank1
   273  0017  120A  158A  238C  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   274  001C  00B2               	movwf	__pdataBANK1& (0+127)
   275  001D  120A  158A  238D  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   276  0022  00B3               	movwf	(__pdataBANK1+1)& (0+127)
   277  0023  120A  158A  238E  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   278  0028  00B4               	movwf	(__pdataBANK1+2)& (0+127)
   279  0029  120A  158A  238F  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   280  002E  00B5               	movwf	(__pdataBANK1+3)& (0+127)
   281                           
   282                           ; Initialize objects allocated to COMMON
   283  002F  120A  158A  2390  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   284  0034  00F6               	movwf	__pdataCOMMON& (0+127)
   285  0035  120A  158A  2391  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   286  003A  00F7               	movwf	(__pdataCOMMON+1)& (0+127)
   287  003B  120A  158A  2392  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   288  0040  00F8               	movwf	(__pdataCOMMON+2)& (0+127)
   289  0041  120A  158A  2393   	fcall	__pidataCOMMON+3	;fetch initializer
   290  0044  00F9               	movwf	(__pdataCOMMON+3)& (0+127)
   291                           
   292                           ; Clear objects allocated to COMMON
   293  0045  01FA               	clrf	__pbssCOMMON& (0+127)
   294  0046  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   295  0047                     end_of_initialization:	
   296                           ;End of C runtime variable initialization code
   297                           
   298  0047                     __end_of__initialization:	
   299  0047  0183               	clrf	3
   300  0048  120A  118A  2BD7   	ljmp	_main	;jump to C main() function
   301                           
   302                           	psect	bssCOMMON
   303  007A                     __pbssCOMMON:	
   304  007A                     _errno:	
   305  007A                     	ds	2
   306                           
   307                           	psect	dataCOMMON
   308  0076                     __pdataCOMMON:	
   309  0076                     _randx:	
   310  0076                     	ds	4
   311                           
   312                           	psect	dataBANK1
   313  00B2                     __pdataBANK1:	
   314  00B2                     _GATO:	
   315  00B2                     	ds	2
   316  00B4                     _RATON:	
   317  00B4                     	ds	2
   318                           
   319                           	psect	cstackBANK1
   320  00A0                     __pcstackBANK1:	
   321  00A0                     _pow$644:	
   322                           
   323                           ; 3 bytes @ 0x0
   324  00A0                     	ds	3
   325  00A3                     _pow$645:	
   326                           
   327                           ; 3 bytes @ 0x3
   328  00A3                     	ds	3
   329  00A6                     pow@sign:	
   330                           
   331                           ; 1 bytes @ 0x6
   332  00A6                     	ds	1
   333  00A7                     pow@yi:	
   334                           
   335                           ; 4 bytes @ 0x7
   336  00A7                     	ds	4
   337  00AB                     _main$643:	
   338                           
   339                           ; 3 bytes @ 0xB
   340  00AB                     	ds	3
   341  00AE                     main@aux:	
   342                           
   343                           ; 2 bytes @ 0xE
   344  00AE                     	ds	2
   345  00B0                     main@aux2:	
   346                           
   347                           ; 2 bytes @ 0x10
   348  00B0                     	ds	2
   349                           
   350                           	psect	cstackCOMMON
   351  0070                     __pcstackCOMMON:	
   352  0070                     ?_isr:	
   353  0070                     ??_isr:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_validar:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_main:	
   360                           ; 1 bytes @ 0x0
   361                           
   362                           
   363                           ; 1 bytes @ 0x0
   364  0070                     	ds	6
   365                           
   366                           	psect	cstackBANK0
   367  0020                     __pcstackBANK0:	
   368  0020                     ?___ftge:	
   369  0020                     ??_validar:	
   370                           ; 1 bit 
   371                           
   372  0020                     ?___bmul:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0020                     ?___ftpack:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0020                     ?_frexp:	
   379                           ; 3 bytes @ 0x0
   380                           
   381  0020                     ?___ftneg:	
   382                           ; 3 bytes @ 0x0
   383                           
   384  0020                     ?___lmul:	
   385                           ; 3 bytes @ 0x0
   386                           
   387  0020                     ___bmul@multiplicand:	
   388                           ; 4 bytes @ 0x0
   389                           
   390  0020                     ___ftpack@arg:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0020                     ___ftge@ff1:	
   394                           ; 3 bytes @ 0x0
   395                           
   396  0020                     ___ftneg@f1:	
   397                           ; 3 bytes @ 0x0
   398                           
   399  0020                     frexp@value:	
   400                           ; 3 bytes @ 0x0
   401                           
   402  0020                     ___lmul@multiplier:	
   403                           ; 3 bytes @ 0x0
   404                           
   405                           
   406                           ; 4 bytes @ 0x0
   407  0020                     	ds	1
   408  0021                     ??___bmul:	
   409                           
   410                           ; 1 bytes @ 0x1
   411  0021                     	ds	1
   412  0022                     ___bmul@product:	
   413                           
   414                           ; 1 bytes @ 0x2
   415  0022                     	ds	1
   416  0023                     ??___ftneg:	
   417  0023                     ___bmul@multiplier:	
   418                           ; 1 bytes @ 0x3
   419                           
   420  0023                     ___ftpack@exp:	
   421                           ; 1 bytes @ 0x3
   422                           
   423  0023                     frexp@eptr:	
   424                           ; 1 bytes @ 0x3
   425                           
   426  0023                     ___ftge@ff2:	
   427                           ; 1 bytes @ 0x3
   428                           
   429                           
   430                           ; 3 bytes @ 0x3
   431  0023                     	ds	1
   432  0024                     ??_frexp:	
   433  0024                     ___ftpack@sign:	
   434                           ; 1 bytes @ 0x4
   435                           
   436  0024                     ___lmul@multiplicand:	
   437                           ; 1 bytes @ 0x4
   438                           
   439                           
   440                           ; 4 bytes @ 0x4
   441  0024                     	ds	1
   442  0025                     ??___ftpack:	
   443                           
   444                           ; 1 bytes @ 0x5
   445  0025                     	ds	1
   446  0026                     ??___ftge:	
   447                           
   448                           ; 1 bytes @ 0x6
   449  0026                     	ds	2
   450  0028                     ??___lmul:	
   451  0028                     ?___awtoft:	
   452                           ; 1 bytes @ 0x8
   453                           
   454  0028                     ?___ftdiv:	
   455                           ; 3 bytes @ 0x8
   456                           
   457  0028                     ?___lltoft:	
   458                           ; 3 bytes @ 0x8
   459                           
   460  0028                     ?___lwtoft:	
   461                           ; 3 bytes @ 0x8
   462                           
   463  0028                     ___awtoft@c:	
   464                           ; 3 bytes @ 0x8
   465                           
   466  0028                     ___lwtoft@c:	
   467                           ; 2 bytes @ 0x8
   468                           
   469  0028                     ___ftdiv@f2:	
   470                           ; 2 bytes @ 0x8
   471                           
   472  0028                     ___lltoft@c:	
   473                           ; 3 bytes @ 0x8
   474                           
   475                           
   476                           ; 4 bytes @ 0x8
   477  0028                     	ds	1
   478  0029                     ___lmul@product:	
   479                           
   480                           ; 4 bytes @ 0x9
   481  0029                     	ds	2
   482  002B                     ??___awtoft:	
   483  002B                     ??___lwtoft:	
   484                           ; 1 bytes @ 0xB
   485                           
   486  002B                     ___ftdiv@f1:	
   487                           ; 1 bytes @ 0xB
   488                           
   489                           
   490                           ; 3 bytes @ 0xB
   491  002B                     	ds	1
   492  002C                     ??___lltoft:	
   493  002C                     ?___fttol:	
   494                           ; 1 bytes @ 0xC
   495                           
   496  002C                     ___fttol@f1:	
   497                           ; 4 bytes @ 0xC
   498                           
   499                           
   500                           ; 3 bytes @ 0xC
   501  002C                     	ds	1
   502  002D                     ?_rand:	
   503  002D                     ___awtoft@sign:	
   504                           ; 2 bytes @ 0xD
   505                           
   506  002D                     ___lltoft@exp:	
   507                           ; 1 bytes @ 0xD
   508                           
   509                           
   510                           ; 1 bytes @ 0xD
   511  002D                     	ds	1
   512  002E                     ??___ftdiv:	
   513  002E                     ?___ftmul:	
   514                           ; 1 bytes @ 0xE
   515                           
   516  002E                     ___ftmul@f1:	
   517                           ; 3 bytes @ 0xE
   518                           
   519                           
   520                           ; 3 bytes @ 0xE
   521  002E                     	ds	1
   522  002F                     ??_rand:	
   523                           
   524                           ; 1 bytes @ 0xF
   525  002F                     	ds	1
   526  0030                     ??___fttol:	
   527                           
   528                           ; 1 bytes @ 0x10
   529  0030                     	ds	1
   530  0031                     ___ftmul@f2:	
   531                           
   532                           ; 3 bytes @ 0x11
   533  0031                     	ds	1
   534  0032                     ___ftdiv@cntr:	
   535                           
   536                           ; 1 bytes @ 0x12
   537  0032                     	ds	1
   538  0033                     ___ftdiv@f3:	
   539                           
   540                           ; 3 bytes @ 0x13
   541  0033                     	ds	1
   542  0034                     ??___ftmul:	
   543  0034                     ?___awmod:	
   544                           ; 1 bytes @ 0x14
   545                           
   546  0034                     ___fttol@sign1:	
   547                           ; 2 bytes @ 0x14
   548                           
   549  0034                     ___awmod@divisor:	
   550                           ; 1 bytes @ 0x14
   551                           
   552                           
   553                           ; 2 bytes @ 0x14
   554  0034                     	ds	1
   555  0035                     ___fttol@lval:	
   556                           
   557                           ; 4 bytes @ 0x15
   558  0035                     	ds	1
   559  0036                     ___ftdiv@exp:	
   560  0036                     ___awmod@dividend:	
   561                           ; 1 bytes @ 0x16
   562                           
   563                           
   564                           ; 2 bytes @ 0x16
   565  0036                     	ds	1
   566  0037                     ___ftdiv@sign:	
   567                           
   568                           ; 1 bytes @ 0x17
   569  0037                     	ds	1
   570  0038                     ??___awmod:	
   571  0038                     ___ftmul@exp:	
   572                           ; 1 bytes @ 0x18
   573                           
   574                           
   575                           ; 1 bytes @ 0x18
   576  0038                     	ds	1
   577  0039                     ___awmod@counter:	
   578  0039                     ___fttol@exp1:	
   579                           ; 1 bytes @ 0x19
   580                           
   581  0039                     ___ftmul@f3_as_product:	
   582                           ; 1 bytes @ 0x19
   583                           
   584                           
   585                           ; 3 bytes @ 0x19
   586  0039                     	ds	1
   587  003A                     ?___altoft:	
   588  003A                     ___awmod@sign:	
   589                           ; 3 bytes @ 0x1A
   590                           
   591  003A                     ___altoft@c:	
   592                           ; 1 bytes @ 0x1A
   593                           
   594                           
   595                           ; 4 bytes @ 0x1A
   596  003A                     	ds	2
   597  003C                     ___ftmul@cntr:	
   598                           
   599                           ; 1 bytes @ 0x1C
   600  003C                     	ds	1
   601  003D                     ___ftmul@sign:	
   602                           
   603                           ; 1 bytes @ 0x1D
   604  003D                     	ds	1
   605  003E                     ??___altoft:	
   606  003E                     ?___ftadd:	
   607                           ; 1 bytes @ 0x1E
   608                           
   609  003E                     ___ftadd@f1:	
   610                           ; 3 bytes @ 0x1E
   611                           
   612                           
   613                           ; 3 bytes @ 0x1E
   614  003E                     	ds	2
   615  0040                     ___altoft@exp:	
   616                           
   617                           ; 1 bytes @ 0x20
   618  0040                     	ds	1
   619  0041                     ___altoft@sign:	
   620  0041                     ___ftadd@f2:	
   621                           ; 1 bytes @ 0x21
   622                           
   623                           
   624                           ; 3 bytes @ 0x21
   625  0041                     	ds	3
   626  0044                     ??___ftadd:	
   627                           
   628                           ; 1 bytes @ 0x24
   629  0044                     	ds	4
   630  0048                     ___ftadd@sign:	
   631                           
   632                           ; 1 bytes @ 0x28
   633  0048                     	ds	1
   634  0049                     ___ftadd@exp2:	
   635                           
   636                           ; 1 bytes @ 0x29
   637  0049                     	ds	1
   638  004A                     ___ftadd@exp1:	
   639                           
   640                           ; 1 bytes @ 0x2A
   641  004A                     	ds	1
   642  004B                     ?_floor:	
   643  004B                     ?_eval_poly:	
   644                           ; 3 bytes @ 0x2B
   645                           
   646  004B                     ?___ftsub:	
   647                           ; 3 bytes @ 0x2B
   648                           
   649  004B                     ___ftsub@f2:	
   650                           ; 3 bytes @ 0x2B
   651                           
   652  004B                     floor@x:	
   653                           ; 3 bytes @ 0x2B
   654                           
   655  004B                     eval_poly@x:	
   656                           ; 3 bytes @ 0x2B
   657                           
   658                           
   659                           ; 3 bytes @ 0x2B
   660  004B                     	ds	3
   661  004E                     ??_floor:	
   662  004E                     eval_poly@d:	
   663                           ; 1 bytes @ 0x2E
   664                           
   665  004E                     ___ftsub@f1:	
   666                           ; 1 bytes @ 0x2E
   667                           
   668                           
   669                           ; 3 bytes @ 0x2E
   670  004E                     	ds	1
   671  004F                     eval_poly@n:	
   672  004F                     floor@i:	
   673                           ; 2 bytes @ 0x2F
   674                           
   675                           
   676                           ; 3 bytes @ 0x2F
   677  004F                     	ds	2
   678  0051                     ??_eval_poly:	
   679  0051                     ??___ftsub:	
   680                           ; 1 bytes @ 0x31
   681                           
   682                           
   683                           ; 1 bytes @ 0x31
   684  0051                     	ds	1
   685  0052                     floor@expon:	
   686  0052                     eval_poly@res:	
   687                           ; 2 bytes @ 0x32
   688                           
   689                           
   690                           ; 3 bytes @ 0x32
   691  0052                     	ds	3
   692  0055                     ?_log:	
   693  0055                     ?_ldexp:	
   694                           ; 3 bytes @ 0x35
   695                           
   696  0055                     ldexp@value:	
   697                           ; 3 bytes @ 0x35
   698                           
   699  0055                     log@x:	
   700                           ; 3 bytes @ 0x35
   701                           
   702                           
   703                           ; 3 bytes @ 0x35
   704  0055                     	ds	3
   705  0058                     ??_log:	
   706  0058                     ldexp@newexp:	
   707                           ; 1 bytes @ 0x38
   708                           
   709                           
   710                           ; 2 bytes @ 0x38
   711  0058                     	ds	1
   712  0059                     log@exponent:	
   713                           
   714                           ; 2 bytes @ 0x39
   715  0059                     	ds	1
   716  005A                     ??_ldexp:	
   717                           
   718                           ; 1 bytes @ 0x3A
   719  005A                     	ds	2
   720  005C                     ?_exp:	
   721  005C                     exp@x:	
   722                           ; 3 bytes @ 0x3C
   723                           
   724                           
   725                           ; 3 bytes @ 0x3C
   726  005C                     	ds	3
   727  005F                     ??_exp:	
   728                           
   729                           ; 1 bytes @ 0x3F
   730  005F                     	ds	1
   731  0060                     _exp$646:	
   732                           
   733                           ; 3 bytes @ 0x40
   734  0060                     	ds	3
   735  0063                     exp@exponent:	
   736                           
   737                           ; 2 bytes @ 0x43
   738  0063                     	ds	2
   739  0065                     exp@sign:	
   740                           
   741                           ; 1 bytes @ 0x45
   742  0065                     	ds	1
   743  0066                     ?_pow:	
   744  0066                     pow@x:	
   745                           ; 3 bytes @ 0x46
   746                           
   747                           
   748                           ; 3 bytes @ 0x46
   749  0066                     	ds	3
   750  0069                     pow@y:	
   751                           
   752                           ; 3 bytes @ 0x49
   753  0069                     	ds	3
   754  006C                     ??_pow:	
   755                           
   756                           ; 1 bytes @ 0x4C
   757  006C                     	ds	1
   758  006D                     ??_main:	
   759                           
   760                           ; 1 bytes @ 0x4D
   761  006D                     	ds	2
   762                           
   763                           	psect	maintext
   764  03D7                     __pmaintext:	
   765 ;;
   766 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   767 ;;
   768 ;; *************** function _main *****************
   769 ;; Defined at:
   770 ;;		line 63 in file "jgatoraton1.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  aux2            2   16[BANK1 ] int 
   775 ;;  aux             2   14[BANK1 ] int 
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : B00/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         0       0       7       0       0
   787 ;;      Temps:          0       2       0       0       0
   788 ;;      Totals:         0       2       7       0       0
   789 ;;Total ram usage:        9 bytes
   790 ;; Hardware stack levels required when called:    6
   791 ;; This function calls:
   792 ;;		___awmod
   793 ;;		___fttol
   794 ;;		___lwtoft
   795 ;;		_pow
   796 ;;		_rand
   797 ;;		_validar
   798 ;; This function is called by:
   799 ;;		Startup code after reset
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           
   804                           ;psect for function _main
   805  03D7                     _main:	
   806                           
   807                           ;jgatoraton1.c: 64: TRISC = 0;
   808                           
   809                           ;incstack = 0
   810                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   811  03D7  1683               	bsf	3,5	;RP0=1, select bank1
   812  03D8  1303               	bcf	3,6	;RP1=0, select bank1
   813  03D9  0187               	clrf	7	;volatile
   814                           
   815                           ;jgatoraton1.c: 65: PORTC = 1;
   816  03DA  3001               	movlw	1
   817  03DB  1283               	bcf	3,5	;RP0=0, select bank0
   818  03DC  1303               	bcf	3,6	;RP1=0, select bank0
   819  03DD  0087               	movwf	7	;volatile
   820                           
   821                           ;jgatoraton1.c: 66: TRISB = 0xFF;
   822  03DE  30FF               	movlw	255
   823  03DF  1683               	bsf	3,5	;RP0=1, select bank1
   824  03E0  1303               	bcf	3,6	;RP1=0, select bank1
   825  03E1  0086               	movwf	6	;volatile
   826                           
   827                           ;jgatoraton1.c: 67: ANSEL = 0;
   828  03E2  1683               	bsf	3,5	;RP0=1, select bank3
   829  03E3  1703               	bsf	3,6	;RP1=1, select bank3
   830  03E4  0188               	clrf	8	;volatile
   831                           
   832                           ;jgatoraton1.c: 68: ANSELH = 0;
   833  03E5  0189               	clrf	9	;volatile
   834                           
   835                           ;jgatoraton1.c: 69: TRISD = 0;
   836  03E6  1683               	bsf	3,5	;RP0=1, select bank1
   837  03E7  1303               	bcf	3,6	;RP1=0, select bank1
   838  03E8  0188               	clrf	8	;volatile
   839                           
   840                           ;jgatoraton1.c: 70: PORTD = 0;
   841  03E9  1283               	bcf	3,5	;RP0=0, select bank0
   842  03EA  1303               	bcf	3,6	;RP1=0, select bank0
   843  03EB  0188               	clrf	8	;volatile
   844                           
   845                           ;jgatoraton1.c: 72: INTCONbits.GIE = 1;
   846  03EC  178B               	bsf	11,7	;volatile
   847                           
   848                           ;jgatoraton1.c: 74: INTCONbits.INTE = 1;
   849  03ED  160B               	bsf	11,4	;volatile
   850                           
   851                           ;jgatoraton1.c: 76: int aux;
   852                           ;jgatoraton1.c: 77: int aux2=0;
   853  03EE  1683               	bsf	3,5	;RP0=1, select bank1
   854  03EF  1303               	bcf	3,6	;RP1=0, select bank1
   855  03F0  01B0               	clrf	main@aux2^(0+128)
   856  03F1  01B1               	clrf	(main@aux2+1)^(0+128)
   857  03F2                     l2459:	
   858                           ;jgatoraton1.c: 80: do
   859                           
   860                           ;jgatoraton1.c: 78: while (1){
   861                           
   862                           
   863                           ;jgatoraton1.c: 81: {RATON = rand()%7;
   864  03F2  3007               	movlw	7
   865  03F3  1283               	bcf	3,5	;RP0=0, select bank0
   866  03F4  1303               	bcf	3,6	;RP1=0, select bank0
   867  03F5  00B4               	movwf	___awmod@divisor
   868  03F6  3000               	movlw	0
   869  03F7  00B5               	movwf	___awmod@divisor+1
   870  03F8  120A  158A  252C  120A  118A  	fcall	_rand
   871  03FD  1283               	bcf	3,5	;RP0=0, select bank0
   872  03FE  1303               	bcf	3,6	;RP1=0, select bank0
   873  03FF  082E               	movf	?_rand+1,w
   874  0400  00B7               	movwf	___awmod@dividend+1
   875  0401  082D               	movf	?_rand,w
   876  0402  00B6               	movwf	___awmod@dividend
   877  0403  120A  158A  25BC  120A  118A  	fcall	___awmod
   878  0408  1283               	bcf	3,5	;RP0=0, select bank0
   879  0409  1303               	bcf	3,6	;RP1=0, select bank0
   880  040A  0835               	movf	?___awmod+1,w
   881  040B  1683               	bsf	3,5	;RP0=1, select bank1
   882  040C  1303               	bcf	3,6	;RP1=0, select bank1
   883  040D  00B5               	movwf	(_RATON+1)^(0+128)
   884  040E  1283               	bcf	3,5	;RP0=0, select bank0
   885  040F  1303               	bcf	3,6	;RP1=0, select bank0
   886  0410  0834               	movf	?___awmod,w
   887  0411  1683               	bsf	3,5	;RP0=1, select bank1
   888  0412  1303               	bcf	3,6	;RP1=0, select bank1
   889  0413  00B4               	movwf	_RATON^(0+128)
   890                           
   891                           ;jgatoraton1.c: 82: RATON = pow(2, RATON);
   892  0414  0835               	movf	(_RATON+1)^(0+128),w
   893  0415  1283               	bcf	3,5	;RP0=0, select bank0
   894  0416  1303               	bcf	3,6	;RP1=0, select bank0
   895  0417  00A9               	movwf	___lwtoft@c+1
   896  0418  1683               	bsf	3,5	;RP0=1, select bank1
   897  0419  1303               	bcf	3,6	;RP1=0, select bank1
   898  041A  0834               	movf	_RATON^(0+128),w
   899  041B  1283               	bcf	3,5	;RP0=0, select bank0
   900  041C  1303               	bcf	3,6	;RP1=0, select bank0
   901  041D  00A8               	movwf	___lwtoft@c
   902  041E  120A  158A  23B1  120A  118A  	fcall	___lwtoft
   903  0423  1283               	bcf	3,5	;RP0=0, select bank0
   904  0424  1303               	bcf	3,6	;RP1=0, select bank0
   905  0425  0828               	movf	?___lwtoft,w
   906  0426  00E9               	movwf	pow@y
   907  0427  0829               	movf	?___lwtoft+1,w
   908  0428  00EA               	movwf	pow@y+1
   909  0429  082A               	movf	?___lwtoft+2,w
   910  042A  00EB               	movwf	pow@y+2
   911  042B  3000               	movlw	0
   912  042C  00E6               	movwf	pow@x
   913  042D  3000               	movlw	0
   914  042E  00E7               	movwf	pow@x+1
   915  042F  3040               	movlw	64
   916  0430  00E8               	movwf	pow@x+2
   917  0431  120A  118A  204B  120A  118A  	fcall	_pow
   918  0436  1283               	bcf	3,5	;RP0=0, select bank0
   919  0437  1303               	bcf	3,6	;RP1=0, select bank0
   920  0438  0866               	movf	?_pow,w
   921  0439  1683               	bsf	3,5	;RP0=1, select bank1
   922  043A  1303               	bcf	3,6	;RP1=0, select bank1
   923  043B  00AB               	movwf	_main$643^(0+128)
   924  043C  1283               	bcf	3,5	;RP0=0, select bank0
   925  043D  1303               	bcf	3,6	;RP1=0, select bank0
   926  043E  0867               	movf	?_pow+1,w
   927  043F  1683               	bsf	3,5	;RP0=1, select bank1
   928  0440  1303               	bcf	3,6	;RP1=0, select bank1
   929  0441  00AC               	movwf	(_main$643+1)^(0+128)
   930  0442  1283               	bcf	3,5	;RP0=0, select bank0
   931  0443  1303               	bcf	3,6	;RP1=0, select bank0
   932  0444  0868               	movf	?_pow+2,w
   933  0445  1683               	bsf	3,5	;RP0=1, select bank1
   934  0446  1303               	bcf	3,6	;RP1=0, select bank1
   935  0447  00AD               	movwf	(_main$643+2)^(0+128)
   936                           
   937                           ;jgatoraton1.c: 82: RATON = pow(2, RATON);
   938  0448  082B               	movf	_main$643^(0+128),w
   939  0449  1283               	bcf	3,5	;RP0=0, select bank0
   940  044A  1303               	bcf	3,6	;RP1=0, select bank0
   941  044B  00AC               	movwf	___fttol@f1
   942  044C  1683               	bsf	3,5	;RP0=1, select bank1
   943  044D  1303               	bcf	3,6	;RP1=0, select bank1
   944  044E  082C               	movf	(_main$643+1)^(0+128),w
   945  044F  1283               	bcf	3,5	;RP0=0, select bank0
   946  0450  1303               	bcf	3,6	;RP1=0, select bank0
   947  0451  00AD               	movwf	___fttol@f1+1
   948  0452  1683               	bsf	3,5	;RP0=1, select bank1
   949  0453  1303               	bcf	3,6	;RP1=0, select bank1
   950  0454  082D               	movf	(_main$643+2)^(0+128),w
   951  0455  1283               	bcf	3,5	;RP0=0, select bank0
   952  0456  1303               	bcf	3,6	;RP1=0, select bank0
   953  0457  00AE               	movwf	___fttol@f1+2
   954  0458  120A  158A  2772  120A  118A  	fcall	___fttol
   955  045D  1283               	bcf	3,5	;RP0=0, select bank0
   956  045E  1303               	bcf	3,6	;RP1=0, select bank0
   957  045F  082D               	movf	?___fttol+1,w
   958  0460  1683               	bsf	3,5	;RP0=1, select bank1
   959  0461  1303               	bcf	3,6	;RP1=0, select bank1
   960  0462  00B5               	movwf	(_RATON+1)^(0+128)
   961  0463  1283               	bcf	3,5	;RP0=0, select bank0
   962  0464  1303               	bcf	3,6	;RP1=0, select bank0
   963  0465  082C               	movf	?___fttol,w
   964  0466  1683               	bsf	3,5	;RP0=1, select bank1
   965  0467  1303               	bcf	3,6	;RP1=0, select bank1
   966  0468  00B4               	movwf	_RATON^(0+128)
   967                           
   968                           ;jgatoraton1.c: 83: }while(RATON == GATO);
   969  0469  0833               	movf	(_GATO+1)^(0+128),w
   970  046A  0635               	xorwf	(_RATON+1)^(0+128),w
   971  046B  1D03               	skipz
   972  046C  2C6F               	goto	u3705
   973  046D  0832               	movf	_GATO^(0+128),w
   974  046E  0634               	xorwf	_RATON^(0+128),w
   975  046F                     u3705:	
   976  046F  1903               	skipnz
   977  0470  2BF2               	goto	l2459
   978                           
   979                           ;jgatoraton1.c: 84: aux = 0;
   980  0471  01AE               	clrf	main@aux^(0+128)
   981  0472  01AF               	clrf	(main@aux+1)^(0+128)
   982  0473                     l2485:	
   983                           ;jgatoraton1.c: 85: while(aux<5){
   984                           
   985  0473  082F               	movf	(main@aux+1)^(0+128),w
   986  0474  3A80               	xorlw	128
   987  0475  00FF               	movwf	127
   988  0476  3080               	movlw	128
   989  0477  027F               	subwf	127,w
   990  0478  1D03               	skipz
   991  0479  2C7C               	goto	u3715
   992  047A  3005               	movlw	5
   993  047B  022E               	subwf	main@aux^(0+128),w
   994  047C                     u3715:	
   995  047C  1803               	btfsc	3,0
   996  047D  2BF2               	goto	l2459
   997                           
   998                           ;jgatoraton1.c: 86: validar();
   999  047E  120A  158A  2573  120A  118A  	fcall	_validar
  1000                           
  1001                           ;jgatoraton1.c: 87: _delay((unsigned long)((50)*(4000000/4000.0)));
  1002  0483  3041               	movlw	65
  1003  0484  1283               	bcf	3,5	;RP0=0, select bank0
  1004  0485  1303               	bcf	3,6	;RP1=0, select bank0
  1005  0486  00EE               	movwf	??_main+1
  1006  0487  30ED               	movlw	237
  1007  0488  00ED               	movwf	??_main
  1008  0489                     u3727:	
  1009  0489  0BED               	decfsz	??_main,f
  1010  048A  2C89               	goto	u3727
  1011  048B  0BEE               	decfsz	??_main+1,f
  1012  048C  2C89               	goto	u3727
  1013  048D  2C8E               	nop2
  1014                           
  1015                           ;jgatoraton1.c: 88: aux2 = RATON;
  1016  048E  1683               	bsf	3,5	;RP0=1, select bank1
  1017  048F  1303               	bcf	3,6	;RP1=0, select bank1
  1018  0490  0835               	movf	(_RATON+1)^(0+128),w
  1019  0491  00B1               	movwf	(main@aux2+1)^(0+128)
  1020  0492  0834               	movf	_RATON^(0+128),w
  1021  0493  00B0               	movwf	main@aux2^(0+128)
  1022                           
  1023                           ;jgatoraton1.c: 89: RATON = 0;
  1024  0494  01B4               	clrf	_RATON^(0+128)
  1025  0495  01B5               	clrf	(_RATON+1)^(0+128)
  1026                           
  1027                           ;jgatoraton1.c: 90: validar();
  1028  0496  120A  158A  2573  120A  118A  	fcall	_validar
  1029                           
  1030                           ;jgatoraton1.c: 91: _delay((unsigned long)((50)*(4000000/4000.0)));
  1031  049B  3041               	movlw	65
  1032  049C  1283               	bcf	3,5	;RP0=0, select bank0
  1033  049D  1303               	bcf	3,6	;RP1=0, select bank0
  1034  049E  00EE               	movwf	??_main+1
  1035  049F  30ED               	movlw	237
  1036  04A0  00ED               	movwf	??_main
  1037  04A1                     u3737:	
  1038  04A1  0BED               	decfsz	??_main,f
  1039  04A2  2CA1               	goto	u3737
  1040  04A3  0BEE               	decfsz	??_main+1,f
  1041  04A4  2CA1               	goto	u3737
  1042  04A5  2CA6               	nop2
  1043                           
  1044                           ;jgatoraton1.c: 92: RATON = aux2;
  1045  04A6  1683               	bsf	3,5	;RP0=1, select bank1
  1046  04A7  1303               	bcf	3,6	;RP1=0, select bank1
  1047  04A8  0831               	movf	(main@aux2+1)^(0+128),w
  1048  04A9  00B5               	movwf	(_RATON+1)^(0+128)
  1049  04AA  0830               	movf	main@aux2^(0+128),w
  1050  04AB  00B4               	movwf	_RATON^(0+128)
  1051                           
  1052                           ;jgatoraton1.c: 93: aux++;
  1053  04AC  3001               	movlw	1
  1054  04AD  07AE               	addwf	main@aux^(0+128),f
  1055  04AE  1803               	skipnc
  1056  04AF  0AAF               	incf	(main@aux+1)^(0+128),f
  1057  04B0  3000               	movlw	0
  1058  04B1  07AF               	addwf	(main@aux+1)^(0+128),f
  1059  04B2  2C73               	goto	l2485
  1060  04B3                     __end_of_main:	
  1061                           
  1062                           	psect	text1
  1063  0D73                     __ptext1:	
  1064 ;; *************** function _validar *****************
  1065 ;; Defined at:
  1066 ;;		line 42 in file "jgatoraton1.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;		None
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, status,2, status,0
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1080 ;;      Params:         0       0       0       0       0
  1081 ;;      Locals:         0       0       0       0       0
  1082 ;;      Temps:          0       3       0       0       0
  1083 ;;      Totals:         0       3       0       0       0
  1084 ;;Total ram usage:        3 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; Hardware stack levels required when called:    1
  1087 ;; This function calls:
  1088 ;;		Nothing
  1089 ;; This function is called by:
  1090 ;;		_main
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           
  1095                           ;psect for function _validar
  1096  0D73                     _validar:	
  1097                           
  1098                           ;jgatoraton1.c: 43: if(RATON==GATO){
  1099                           
  1100                           ;incstack = 0
  1101                           ; Regs used in _validar: [wreg+status,2+status,0]
  1102  0D73  1683               	bsf	3,5	;RP0=1, select bank1
  1103  0D74  1303               	bcf	3,6	;RP1=0, select bank1
  1104  0D75  0833               	movf	(_GATO+1)^(0+128),w
  1105  0D76  0635               	xorwf	(_RATON+1)^(0+128),w
  1106  0D77  1D03               	skipz
  1107  0D78  2D7B               	goto	u2415
  1108  0D79  0832               	movf	_GATO^(0+128),w
  1109  0D7A  0634               	xorwf	_RATON^(0+128),w
  1110  0D7B                     u2415:	
  1111  0D7B  1D03               	skipz
  1112  0D7C  2D94               	goto	l40
  1113                           
  1114                           ;jgatoraton1.c: 44: PORTC = RATON;
  1115  0D7D  0834               	movf	_RATON^(0+128),w
  1116  0D7E  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0D7F  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0D80  0087               	movwf	7	;volatile
  1119                           
  1120                           ;jgatoraton1.c: 45: PORTDbits.RD0 = 1;
  1121  0D81  1408               	bsf	8,0	;volatile
  1122                           
  1123                           ;jgatoraton1.c: 46: _delay((unsigned long)((3000)*(4000000/4000.0)));
  1124  0D82  3010               	movlw	16
  1125  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  1126  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  1127  0D85  00A2               	movwf	??_validar+2
  1128  0D86  3039               	movlw	57
  1129  0D87  00A1               	movwf	??_validar+1
  1130  0D88  300D               	movlw	13
  1131  0D89  00A0               	movwf	??_validar
  1132  0D8A                     u3747:	
  1133  0D8A  0BA0               	decfsz	??_validar,f
  1134  0D8B  2D8A               	goto	u3747
  1135  0D8C  0BA1               	decfsz	??_validar+1,f
  1136  0D8D  2D8A               	goto	u3747
  1137  0D8E  0BA2               	decfsz	??_validar+2,f
  1138  0D8F  2D8A               	goto	u3747
  1139                           
  1140                           ;jgatoraton1.c: 47: PORTDbits.RD0 = 0;
  1141  0D90  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0D91  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0D92  1008               	bcf	8,0	;volatile
  1144                           
  1145                           ;jgatoraton1.c: 48: }
  1146  0D93  0008               	return
  1147  0D94                     l40:	
  1148                           
  1149                           ;jgatoraton1.c: 49: else if(PORTBbits.RB7 == 1)
  1150  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0D95  1303               	bcf	3,6	;RP1=0, select bank0
  1152  0D96  1F86               	btfss	6,7	;volatile
  1153  0D97  2DB4               	goto	l1817
  1154                           
  1155                           ;jgatoraton1.c: 51: {_delay((unsigned long)((50)*(4000000/4000.0)));
  1156  0D98  3041               	movlw	65
  1157  0D99  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  1159  0D9B  00A1               	movwf	??_validar+1
  1160  0D9C  30ED               	movlw	237
  1161  0D9D  00A0               	movwf	??_validar
  1162  0D9E                     u3757:	
  1163  0D9E  0BA0               	decfsz	??_validar,f
  1164  0D9F  2D9E               	goto	u3757
  1165  0DA0  0BA1               	decfsz	??_validar+1,f
  1166  0DA1  2D9E               	goto	u3757
  1167  0DA2  2DA3               	nop2
  1168  0DA3                     l1811:	
  1169                           ;jgatoraton1.c: 52: do{}while(PORTBbits.RB7!=0);
  1170                           
  1171  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  1173  0DA5  1B86               	btfsc	6,7	;volatile
  1174  0DA6  2DA3               	goto	l1811
  1175                           
  1176                           ;jgatoraton1.c: 53: if(GATO!=128)
  1177  0DA7  3080               	movlw	128
  1178  0DA8  1683               	bsf	3,5	;RP0=1, select bank1
  1179  0DA9  1303               	bcf	3,6	;RP1=0, select bank1
  1180  0DAA  0632               	xorwf	_GATO^(0+128),w
  1181  0DAB  0433               	iorwf	(_GATO+1)^(0+128),w
  1182  0DAC  1903               	btfsc	3,2
  1183  0DAD  0008               	return
  1184                           
  1185                           ;jgatoraton1.c: 54: GATO = GATO*2;
  1186  0DAE  1003               	clrc
  1187  0DAF  0D32               	rlf	_GATO^(0+128),w
  1188  0DB0  00B2               	movwf	_GATO^(0+128)
  1189  0DB1  0D33               	rlf	(_GATO+1)^(0+128),w
  1190  0DB2  00B3               	movwf	(_GATO+1)^(0+128)
  1191                           
  1192                           ;jgatoraton1.c: 57: }
  1193  0DB3  0008               	return
  1194  0DB4                     l1817:	
  1195                           
  1196                           ;jgatoraton1.c: 58: else
  1197                           ;jgatoraton1.c: 59: PORTC = RATON + GATO;
  1198  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  1199  0DB5  1303               	bcf	3,6	;RP1=0, select bank1
  1200  0DB6  0832               	movf	_GATO^(0+128),w
  1201  0DB7  0734               	addwf	_RATON^(0+128),w
  1202  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  1203  0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  1204  0DBA  0087               	movwf	7	;volatile
  1205  0DBB  0008               	return
  1206  0DBC                     __end_of_validar:	
  1207                           
  1208                           	psect	text2
  1209  0D2C                     __ptext2:	
  1210 ;; *************** function _rand *****************
  1211 ;; Defined at:
  1212 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\rand.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  2   13[BANK0 ] int 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0, pclath, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       2       0       0       0
  1227 ;;      Locals:         0       0       0       0       0
  1228 ;;      Temps:          0       5       0       0       0
  1229 ;;      Totals:         0       7       0       0       0
  1230 ;;Total ram usage:        7 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    2
  1233 ;; This function calls:
  1234 ;;		___lmul
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _rand
  1242  0D2C                     _rand:	
  1243                           
  1244                           ;incstack = 0
  1245                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  1246  0D2C  0879               	movf	_randx+3,w
  1247  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0D2F  00A3               	movwf	___lmul@multiplier+3
  1250  0D30  0878               	movf	_randx+2,w
  1251  0D31  00A2               	movwf	___lmul@multiplier+2
  1252  0D32  0877               	movf	_randx+1,w
  1253  0D33  00A1               	movwf	___lmul@multiplier+1
  1254  0D34  0876               	movf	_randx,w
  1255  0D35  00A0               	movwf	___lmul@multiplier
  1256  0D36  3041               	movlw	65
  1257  0D37  00A7               	movwf	___lmul@multiplicand+3
  1258  0D38  30C6               	movlw	198
  1259  0D39  00A6               	movwf	___lmul@multiplicand+2
  1260  0D3A  304E               	movlw	78
  1261  0D3B  00A5               	movwf	___lmul@multiplicand+1
  1262  0D3C  306D               	movlw	109
  1263  0D3D  00A4               	movwf	___lmul@multiplicand
  1264  0D3E  120A  158A  2467  120A  158A  	fcall	___lmul
  1265  0D43  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0D44  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0D45  0823               	movf	?___lmul+3,w
  1268  0D46  00F9               	movwf	_randx+3
  1269  0D47  0822               	movf	?___lmul+2,w
  1270  0D48  00F8               	movwf	_randx+2
  1271  0D49  0821               	movf	?___lmul+1,w
  1272  0D4A  00F7               	movwf	_randx+1
  1273  0D4B  0820               	movf	?___lmul,w
  1274  0D4C  00F6               	movwf	_randx
  1275  0D4D  3039               	movlw	57
  1276  0D4E  07F6               	addwf	_randx,f
  1277  0D4F  3030               	movlw	48
  1278  0D50  1803               	skipnc
  1279  0D51  3031               	movlw	49
  1280  0D52  07F7               	addwf	_randx+1,f
  1281  0D53  3000               	movlw	0
  1282  0D54  1803               	skipnc
  1283  0D55  3001               	movlw	1
  1284  0D56  07F8               	addwf	_randx+2,f
  1285  0D57  3000               	movlw	0
  1286  0D58  1803               	skipnc
  1287  0D59  3001               	movlw	1
  1288  0D5A  07F9               	addwf	_randx+3,f
  1289  0D5B  0876               	movf	_randx,w
  1290  0D5C  00AF               	movwf	??_rand
  1291  0D5D  0877               	movf	_randx+1,w
  1292  0D5E  00B0               	movwf	??_rand+1
  1293  0D5F  0878               	movf	_randx+2,w
  1294  0D60  00B1               	movwf	??_rand+2
  1295  0D61  0879               	movf	_randx+3,w
  1296  0D62  00B2               	movwf	??_rand+3
  1297  0D63  3010               	movlw	16
  1298  0D64  00B3               	movwf	??_rand+4
  1299  0D65                     u3545:	
  1300  0D65  0D32               	rlf	??_rand+3,w
  1301  0D66  0CB2               	rrf	??_rand+3,f
  1302  0D67  0CB1               	rrf	??_rand+2,f
  1303  0D68  0CB0               	rrf	??_rand+1,f
  1304  0D69  0CAF               	rrf	??_rand,f
  1305  0D6A  0BB3               	decfsz	??_rand+4,f
  1306  0D6B  2D65               	goto	u3545
  1307  0D6C  30FF               	movlw	255
  1308  0D6D  052F               	andwf	??_rand,w
  1309  0D6E  00AD               	movwf	?_rand
  1310  0D6F  307F               	movlw	127
  1311  0D70  0530               	andwf	??_rand+1,w
  1312  0D71  00AE               	movwf	?_rand+1
  1313  0D72  0008               	return
  1314  0D73                     __end_of_rand:	
  1315                           
  1316                           	psect	text3
  1317  0C67                     __ptext3:	
  1318 ;; *************** function ___lmul *****************
  1319 ;; Defined at:
  1320 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul32.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1323 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  product         4    9[BANK0 ] unsigned long 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  4    0[BANK0 ] unsigned long 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         0       8       0       0       0
  1336 ;;      Locals:         0       4       0       0       0
  1337 ;;      Temps:          0       1       0       0       0
  1338 ;;      Totals:         0      13       0       0       0
  1339 ;;Total ram usage:       13 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    1
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_rand
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           
  1350                           ;psect for function ___lmul
  1351  0C67                     ___lmul:	
  1352                           
  1353                           ;incstack = 0
  1354                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1355  0C67  3000               	movlw	0
  1356  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0C69  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0C6A  00AC               	movwf	___lmul@product+3
  1359  0C6B  3000               	movlw	0
  1360  0C6C  00AB               	movwf	___lmul@product+2
  1361  0C6D  3000               	movlw	0
  1362  0C6E  00AA               	movwf	___lmul@product+1
  1363  0C6F  3000               	movlw	0
  1364  0C70  00A9               	movwf	___lmul@product
  1365  0C71                     l2269:	
  1366  0C71  1C20               	btfss	___lmul@multiplier,0
  1367  0C72  2C87               	goto	l2273
  1368  0C73  0824               	movf	___lmul@multiplicand,w
  1369  0C74  07A9               	addwf	___lmul@product,f
  1370  0C75  0825               	movf	___lmul@multiplicand+1,w
  1371  0C76  1103               	clrz
  1372  0C77  1803               	skipnc
  1373  0C78  3E01               	addlw	1
  1374  0C79  1D03               	btfss	3,2
  1375  0C7A  07AA               	addwf	___lmul@product+1,f
  1376  0C7B  0826               	movf	___lmul@multiplicand+2,w
  1377  0C7C  1103               	clrz
  1378  0C7D  1803               	skipnc
  1379  0C7E  3E01               	addlw	1
  1380  0C7F  1D03               	btfss	3,2
  1381  0C80  07AB               	addwf	___lmul@product+2,f
  1382  0C81  0827               	movf	___lmul@multiplicand+3,w
  1383  0C82  1103               	clrz
  1384  0C83  1803               	skipnc
  1385  0C84  3E01               	addlw	1
  1386  0C85  1D03               	btfss	3,2
  1387  0C86  07AC               	addwf	___lmul@product+3,f
  1388  0C87                     l2273:	
  1389  0C87  3001               	movlw	1
  1390  0C88  00A8               	movwf	??___lmul
  1391  0C89                     u3395:	
  1392  0C89  1003               	clrc
  1393  0C8A  0DA4               	rlf	___lmul@multiplicand,f
  1394  0C8B  0DA5               	rlf	___lmul@multiplicand+1,f
  1395  0C8C  0DA6               	rlf	___lmul@multiplicand+2,f
  1396  0C8D  0DA7               	rlf	___lmul@multiplicand+3,f
  1397  0C8E  0BA8               	decfsz	??___lmul,f
  1398  0C8F  2C89               	goto	u3395
  1399  0C90  3001               	movlw	1
  1400  0C91                     u3405:	
  1401  0C91  1003               	clrc
  1402  0C92  0CA3               	rrf	___lmul@multiplier+3,f
  1403  0C93  0CA2               	rrf	___lmul@multiplier+2,f
  1404  0C94  0CA1               	rrf	___lmul@multiplier+1,f
  1405  0C95  0CA0               	rrf	___lmul@multiplier,f
  1406  0C96  3EFF               	addlw	-1
  1407  0C97  1D03               	skipz
  1408  0C98  2C91               	goto	u3405
  1409  0C99  0823               	movf	___lmul@multiplier+3,w
  1410  0C9A  0422               	iorwf	___lmul@multiplier+2,w
  1411  0C9B  0421               	iorwf	___lmul@multiplier+1,w
  1412  0C9C  0420               	iorwf	___lmul@multiplier,w
  1413  0C9D  1D03               	skipz
  1414  0C9E  2C71               	goto	l2269
  1415  0C9F  082C               	movf	___lmul@product+3,w
  1416  0CA0  00A3               	movwf	?___lmul+3
  1417  0CA1  082B               	movf	___lmul@product+2,w
  1418  0CA2  00A2               	movwf	?___lmul+2
  1419  0CA3  082A               	movf	___lmul@product+1,w
  1420  0CA4  00A1               	movwf	?___lmul+1
  1421  0CA5  0829               	movf	___lmul@product,w
  1422  0CA6  00A0               	movwf	?___lmul
  1423  0CA7  0008               	return
  1424  0CA8                     __end_of___lmul:	
  1425                           
  1426                           	psect	text4
  1427  004B                     __ptext4:	
  1428 ;; *************** function _pow *****************
  1429 ;; Defined at:
  1430 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\pow.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  x               3   70[BANK0 ] unsigned long 
  1433 ;;  y               3   73[BANK0 ] unsigned long 
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  yi              4    7[BANK1 ] unsigned long 
  1436 ;;  sign            1    6[BANK1 ] unsigned char 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  3   70[BANK0 ] unsigned char 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1446 ;;      Params:         0       6       0       0       0
  1447 ;;      Locals:         0       0      11       0       0
  1448 ;;      Temps:          0       1       0       0       0
  1449 ;;      Totals:         0       7      11       0       0
  1450 ;;Total ram usage:       18 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    5
  1453 ;; This function calls:
  1454 ;;		___ftge
  1455 ;;		___ftmul
  1456 ;;		___ftneg
  1457 ;;		___fttol
  1458 ;;		___lltoft
  1459 ;;		_exp
  1460 ;;		_log
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           
  1467                           ;psect for function _pow
  1468  004B                     _pow:	
  1469                           
  1470                           ;incstack = 0
  1471                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1472  004B  1683               	bsf	3,5	;RP0=1, select bank1
  1473  004C  1303               	bcf	3,6	;RP1=0, select bank1
  1474  004D  01A6               	clrf	pow@sign^(0+128)
  1475  004E  1283               	bcf	3,5	;RP0=0, select bank0
  1476  004F  1303               	bcf	3,6	;RP1=0, select bank0
  1477  0050  0868               	movf	pow@x+2,w
  1478  0051  0467               	iorwf	pow@x+1,w
  1479  0052  0466               	iorwf	pow@x,w
  1480  0053  1D03               	skipz
  1481  0054  2875               	goto	l2377
  1482  0055  3000               	movlw	0
  1483  0056  00A0               	movwf	___ftge@ff1
  1484  0057  3000               	movlw	0
  1485  0058  00A1               	movwf	___ftge@ff1+1
  1486  0059  3000               	movlw	0
  1487  005A  00A2               	movwf	___ftge@ff1+2
  1488  005B  0869               	movf	pow@y,w
  1489  005C  00A3               	movwf	___ftge@ff2
  1490  005D  086A               	movf	pow@y+1,w
  1491  005E  00A4               	movwf	___ftge@ff2+1
  1492  005F  086B               	movf	pow@y+2,w
  1493  0060  00A5               	movwf	___ftge@ff2+2
  1494  0061  120A  118A  279F  120A  118A  	fcall	___ftge
  1495  0066  1C03               	btfss	3,0
  1496  0067  286C               	goto	l508
  1497  0068  3021               	movlw	33
  1498  0069  00FA               	movwf	_errno
  1499  006A  3000               	movlw	0
  1500  006B  00FB               	movwf	_errno+1
  1501  006C                     l508:	
  1502  006C  3000               	movlw	0
  1503  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1504  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1505  006F  00E6               	movwf	?_pow
  1506  0070  3000               	movlw	0
  1507  0071  00E7               	movwf	?_pow+1
  1508  0072  3000               	movlw	0
  1509  0073  00E8               	movwf	?_pow+2
  1510  0074  0008               	return
  1511  0075                     l2377:	
  1512  0075  086B               	movf	pow@y+2,w
  1513  0076  046A               	iorwf	pow@y+1,w
  1514  0077  0469               	iorwf	pow@y,w
  1515  0078  1D03               	skipz
  1516  0079  2881               	goto	l2383
  1517  007A  3000               	movlw	0
  1518  007B  00E6               	movwf	?_pow
  1519  007C  3080               	movlw	128
  1520  007D  00E7               	movwf	?_pow+1
  1521  007E  303F               	movlw	63
  1522  007F  00E8               	movwf	?_pow+2
  1523  0080  0008               	return
  1524  0081                     l2383:	
  1525  0081  0866               	movf	pow@x,w
  1526  0082  00A0               	movwf	___ftge@ff1
  1527  0083  0867               	movf	pow@x+1,w
  1528  0084  00A1               	movwf	___ftge@ff1+1
  1529  0085  0868               	movf	pow@x+2,w
  1530  0086  00A2               	movwf	___ftge@ff1+2
  1531  0087  3000               	movlw	0
  1532  0088  00A3               	movwf	___ftge@ff2
  1533  0089  3000               	movlw	0
  1534  008A  00A4               	movwf	___ftge@ff2+1
  1535  008B  3000               	movlw	0
  1536  008C  00A5               	movwf	___ftge@ff2+2
  1537  008D  120A  118A  279F  120A  118A  	fcall	___ftge
  1538  0092  1803               	btfsc	3,0
  1539  0093  290D               	goto	l2395
  1540  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1541  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1542  0096  0869               	movf	pow@y,w
  1543  0097  00AC               	movwf	___fttol@f1
  1544  0098  086A               	movf	pow@y+1,w
  1545  0099  00AD               	movwf	___fttol@f1+1
  1546  009A  086B               	movf	pow@y+2,w
  1547  009B  00AE               	movwf	___fttol@f1+2
  1548  009C  120A  158A  2772  120A  118A  	fcall	___fttol
  1549  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1550  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1551  00A3  082F               	movf	?___fttol+3,w
  1552  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  1553  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  1554  00A6  00AA               	movwf	(pow@yi+3)^(0+128)
  1555  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1556  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1557  00A9  082E               	movf	?___fttol+2,w
  1558  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  1559  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  1560  00AC  00A9               	movwf	(pow@yi+2)^(0+128)
  1561  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1562  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1563  00AF  082D               	movf	?___fttol+1,w
  1564  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  1565  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  1566  00B2  00A8               	movwf	(pow@yi+1)^(0+128)
  1567  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1568  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1569  00B5  082C               	movf	?___fttol,w
  1570  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  1571  00B7  1303               	bcf	3,6	;RP1=0, select bank1
  1572  00B8  00A7               	movwf	pow@yi^(0+128)
  1573  00B9  082A               	movf	(pow@yi+3)^(0+128),w
  1574  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1575  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1576  00BC  00AB               	movwf	___lltoft@c+3
  1577  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  1578  00BE  1303               	bcf	3,6	;RP1=0, select bank1
  1579  00BF  0829               	movf	(pow@yi+2)^(0+128),w
  1580  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1581  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1582  00C2  00AA               	movwf	___lltoft@c+2
  1583  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1584  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  1585  00C5  0828               	movf	(pow@yi+1)^(0+128),w
  1586  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1587  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1588  00C8  00A9               	movwf	___lltoft@c+1
  1589  00C9  1683               	bsf	3,5	;RP0=1, select bank1
  1590  00CA  1303               	bcf	3,6	;RP1=0, select bank1
  1591  00CB  0827               	movf	pow@yi^(0+128),w
  1592  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1593  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1594  00CE  00A8               	movwf	___lltoft@c
  1595  00CF  120A  158A  2438  120A  118A  	fcall	___lltoft
  1596  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1597  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1598  00D6  086B               	movf	pow@y+2,w
  1599  00D7  062A               	xorwf	?___lltoft+2,w
  1600  00D8  1D03               	skipz
  1601  00D9  28E0               	goto	u3595
  1602  00DA  086A               	movf	pow@y+1,w
  1603  00DB  0629               	xorwf	?___lltoft+1,w
  1604  00DC  1D03               	skipz
  1605  00DD  28E0               	goto	u3595
  1606  00DE  0869               	movf	pow@y,w
  1607  00DF  0628               	xorwf	?___lltoft,w
  1608  00E0                     u3595:	
  1609  00E0  1903               	skipnz
  1610  00E1  28ED               	goto	l2391
  1611  00E2  3021               	movlw	33
  1612  00E3  00FA               	movwf	_errno
  1613  00E4  3000               	movlw	0
  1614  00E5  00FB               	movwf	_errno+1
  1615  00E6  3000               	movlw	0
  1616  00E7  00E6               	movwf	?_pow
  1617  00E8  3000               	movlw	0
  1618  00E9  00E7               	movwf	?_pow+1
  1619  00EA  3000               	movlw	0
  1620  00EB  00E8               	movwf	?_pow+2
  1621  00EC  0008               	return
  1622  00ED                     l2391:	
  1623  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  1624  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  1625  00EF  0827               	movf	pow@yi^(0+128),w
  1626  00F0  3901               	andlw	1
  1627  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1628  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1629  00F3  00EC               	movwf	??_pow
  1630  00F4  086C               	movf	??_pow,w
  1631  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  1632  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  1633  00F7  00A6               	movwf	pow@sign^(0+128)
  1634  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1635  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1636  00FA  0866               	movf	pow@x,w
  1637  00FB  00A0               	movwf	___ftneg@f1
  1638  00FC  0867               	movf	pow@x+1,w
  1639  00FD  00A1               	movwf	___ftneg@f1+1
  1640  00FE  0868               	movf	pow@x+2,w
  1641  00FF  00A2               	movwf	___ftneg@f1+2
  1642  0100  120A  158A  2394  120A  118A  	fcall	___ftneg
  1643  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0107  0820               	movf	?___ftneg,w
  1646  0108  00E6               	movwf	pow@x
  1647  0109  0821               	movf	?___ftneg+1,w
  1648  010A  00E7               	movwf	pow@x+1
  1649  010B  0822               	movf	?___ftneg+2,w
  1650  010C  00E8               	movwf	pow@x+2
  1651  010D                     l2395:	
  1652  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1653  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1654  010F  0866               	movf	pow@x,w
  1655  0110  00D5               	movwf	log@x
  1656  0111  0867               	movf	pow@x+1,w
  1657  0112  00D6               	movwf	log@x+1
  1658  0113  0868               	movf	pow@x+2,w
  1659  0114  00D7               	movwf	log@x+2
  1660  0115  120A  118A  2586  120A  118A  	fcall	_log
  1661  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1662  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1663  011C  0855               	movf	?_log,w
  1664  011D  1683               	bsf	3,5	;RP0=1, select bank1
  1665  011E  1303               	bcf	3,6	;RP1=0, select bank1
  1666  011F  00A0               	movwf	_pow$644^(0+128)
  1667  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1668  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1669  0122  0856               	movf	?_log+1,w
  1670  0123  1683               	bsf	3,5	;RP0=1, select bank1
  1671  0124  1303               	bcf	3,6	;RP1=0, select bank1
  1672  0125  00A1               	movwf	(_pow$644+1)^(0+128)
  1673  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1674  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1675  0128  0857               	movf	?_log+2,w
  1676  0129  1683               	bsf	3,5	;RP0=1, select bank1
  1677  012A  1303               	bcf	3,6	;RP1=0, select bank1
  1678  012B  00A2               	movwf	(_pow$644+2)^(0+128)
  1679  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1680  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1681  012E  0869               	movf	pow@y,w
  1682  012F  00AE               	movwf	___ftmul@f1
  1683  0130  086A               	movf	pow@y+1,w
  1684  0131  00AF               	movwf	___ftmul@f1+1
  1685  0132  086B               	movf	pow@y+2,w
  1686  0133  00B0               	movwf	___ftmul@f1+2
  1687  0134  1683               	bsf	3,5	;RP0=1, select bank1
  1688  0135  1303               	bcf	3,6	;RP1=0, select bank1
  1689  0136  0820               	movf	_pow$644^(0+128),w
  1690  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1691  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1692  0139  00B1               	movwf	___ftmul@f2
  1693  013A  1683               	bsf	3,5	;RP0=1, select bank1
  1694  013B  1303               	bcf	3,6	;RP1=0, select bank1
  1695  013C  0821               	movf	(_pow$644+1)^(0+128),w
  1696  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1697  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1698  013F  00B2               	movwf	___ftmul@f2+1
  1699  0140  1683               	bsf	3,5	;RP0=1, select bank1
  1700  0141  1303               	bcf	3,6	;RP1=0, select bank1
  1701  0142  0822               	movf	(_pow$644+2)^(0+128),w
  1702  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1703  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1704  0145  00B3               	movwf	___ftmul@f2+2
  1705  0146  120A  118A  24B3  120A  118A  	fcall	___ftmul
  1706  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1707  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1708  014D  082E               	movf	?___ftmul,w
  1709  014E  1683               	bsf	3,5	;RP0=1, select bank1
  1710  014F  1303               	bcf	3,6	;RP1=0, select bank1
  1711  0150  00A3               	movwf	_pow$645^(0+128)
  1712  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0153  082F               	movf	?___ftmul+1,w
  1715  0154  1683               	bsf	3,5	;RP0=1, select bank1
  1716  0155  1303               	bcf	3,6	;RP1=0, select bank1
  1717  0156  00A4               	movwf	(_pow$645+1)^(0+128)
  1718  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0159  0830               	movf	?___ftmul+2,w
  1721  015A  1683               	bsf	3,5	;RP0=1, select bank1
  1722  015B  1303               	bcf	3,6	;RP1=0, select bank1
  1723  015C  00A5               	movwf	(_pow$645+2)^(0+128)
  1724  015D  0823               	movf	_pow$645^(0+128),w
  1725  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1726  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1727  0160  00DC               	movwf	exp@x
  1728  0161  1683               	bsf	3,5	;RP0=1, select bank1
  1729  0162  1303               	bcf	3,6	;RP1=0, select bank1
  1730  0163  0824               	movf	(_pow$645+1)^(0+128),w
  1731  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0165  1303               	bcf	3,6	;RP1=0, select bank0
  1733  0166  00DD               	movwf	exp@x+1
  1734  0167  1683               	bsf	3,5	;RP0=1, select bank1
  1735  0168  1303               	bcf	3,6	;RP1=0, select bank1
  1736  0169  0825               	movf	(_pow$645+2)^(0+128),w
  1737  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1738  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1739  016C  00DE               	movwf	exp@x+2
  1740  016D  120A  118A  2193  120A  118A  	fcall	_exp
  1741  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1742  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1743  0174  085C               	movf	?_exp,w
  1744  0175  00E6               	movwf	pow@x
  1745  0176  085D               	movf	?_exp+1,w
  1746  0177  00E7               	movwf	pow@x+1
  1747  0178  085E               	movf	?_exp+2,w
  1748  0179  00E8               	movwf	pow@x+2
  1749  017A  1683               	bsf	3,5	;RP0=1, select bank1
  1750  017B  1303               	bcf	3,6	;RP1=0, select bank1
  1751  017C  0826               	movf	pow@sign^(0+128),w
  1752  017D  1903               	btfsc	3,2
  1753  017E  0008               	return
  1754  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1756  0181  0866               	movf	pow@x,w
  1757  0182  00A0               	movwf	___ftneg@f1
  1758  0183  0867               	movf	pow@x+1,w
  1759  0184  00A1               	movwf	___ftneg@f1+1
  1760  0185  0868               	movf	pow@x+2,w
  1761  0186  00A2               	movwf	___ftneg@f1+2
  1762  0187  120A  158A  2394   	fcall	___ftneg
  1763  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1764  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1765  018C  0820               	movf	?___ftneg,w
  1766  018D  00E6               	movwf	?_pow
  1767  018E  0821               	movf	?___ftneg+1,w
  1768  018F  00E7               	movwf	?_pow+1
  1769  0190  0822               	movf	?___ftneg+2,w
  1770  0191  00E8               	movwf	?_pow+2
  1771  0192  0008               	return
  1772  0193                     __end_of_pow:	
  1773                           
  1774                           	psect	text5
  1775  0586                     __ptext5:	
  1776 ;; *************** function _log *****************
  1777 ;; Defined at:
  1778 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\log.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  x               3   53[BANK0 ] unsigned char 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  exponent        2   57[BANK0 ] int 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  3   53[BANK0 ] int 
  1785 ;; Registers used:
  1786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1792 ;;      Params:         0       3       0       0       0
  1793 ;;      Locals:         0       2       0       0       0
  1794 ;;      Temps:          0       1       0       0       0
  1795 ;;      Totals:         0       6       0       0       0
  1796 ;;Total ram usage:        6 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:    4
  1799 ;; This function calls:
  1800 ;;		___awtoft
  1801 ;;		___ftadd
  1802 ;;		___ftge
  1803 ;;		___ftmul
  1804 ;;		_eval_poly
  1805 ;;		_frexp
  1806 ;; This function is called by:
  1807 ;;		_pow
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           
  1812                           ;psect for function _log
  1813  0586                     _log:	
  1814                           
  1815                           ;incstack = 0
  1816                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1817  0586  1283               	bcf	3,5	;RP0=0, select bank0
  1818  0587  1303               	bcf	3,6	;RP1=0, select bank0
  1819  0588  0855               	movf	log@x,w
  1820  0589  00A0               	movwf	___ftge@ff1
  1821  058A  0856               	movf	log@x+1,w
  1822  058B  00A1               	movwf	___ftge@ff1+1
  1823  058C  0857               	movf	log@x+2,w
  1824  058D  00A2               	movwf	___ftge@ff1+2
  1825  058E  3000               	movlw	0
  1826  058F  00A3               	movwf	___ftge@ff2
  1827  0590  3000               	movlw	0
  1828  0591  00A4               	movwf	___ftge@ff2+1
  1829  0592  3000               	movlw	0
  1830  0593  00A5               	movwf	___ftge@ff2+2
  1831  0594  120A  118A  279F  120A  118A  	fcall	___ftge
  1832  0599  1803               	btfsc	3,0
  1833  059A  2DA8               	goto	l2297
  1834  059B  3021               	movlw	33
  1835  059C  00FA               	movwf	_errno
  1836  059D  3000               	movlw	0
  1837  059E  00FB               	movwf	_errno+1
  1838  059F  3000               	movlw	0
  1839  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  1840  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  1841  05A2  00D5               	movwf	?_log
  1842  05A3  3000               	movlw	0
  1843  05A4  00D6               	movwf	?_log+1
  1844  05A5  3000               	movlw	0
  1845  05A6  00D7               	movwf	?_log+2
  1846  05A7  0008               	return
  1847  05A8                     l2297:	
  1848  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  1849  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  1850  05AA  0857               	movf	log@x+2,w
  1851  05AB  0456               	iorwf	log@x+1,w
  1852  05AC  0455               	iorwf	log@x,w
  1853  05AD  1D03               	skipz
  1854  05AE  2DBA               	goto	l2303
  1855  05AF  3022               	movlw	34
  1856  05B0  00FA               	movwf	_errno
  1857  05B1  3000               	movlw	0
  1858  05B2  00FB               	movwf	_errno+1
  1859  05B3  3000               	movlw	0
  1860  05B4  00D5               	movwf	?_log
  1861  05B5  3000               	movlw	0
  1862  05B6  00D6               	movwf	?_log+1
  1863  05B7  3000               	movlw	0
  1864  05B8  00D7               	movwf	?_log+2
  1865  05B9  0008               	return
  1866  05BA                     l2303:	
  1867  05BA  3000               	movlw	0
  1868  05BB  00BE               	movwf	___ftadd@f1
  1869  05BC  3080               	movlw	128
  1870  05BD  00BF               	movwf	___ftadd@f1+1
  1871  05BE  30BF               	movlw	191
  1872  05BF  00C0               	movwf	___ftadd@f1+2
  1873  05C0  3000               	movlw	0
  1874  05C1  00AE               	movwf	___ftmul@f1
  1875  05C2  3000               	movlw	0
  1876  05C3  00AF               	movwf	___ftmul@f1+1
  1877  05C4  3040               	movlw	64
  1878  05C5  00B0               	movwf	___ftmul@f1+2
  1879  05C6  3059               	movlw	(low (log@exponent| 0))& (0+255)
  1880  05C7  00D8               	movwf	??_log
  1881  05C8  0858               	movf	??_log,w
  1882  05C9  00A3               	movwf	frexp@eptr
  1883  05CA  0855               	movf	log@x,w
  1884  05CB  00A0               	movwf	frexp@value
  1885  05CC  0856               	movf	log@x+1,w
  1886  05CD  00A1               	movwf	frexp@value+1
  1887  05CE  0857               	movf	log@x+2,w
  1888  05CF  00A2               	movwf	frexp@value+2
  1889  05D0  120A  158A  24EA  120A  118A  	fcall	_frexp
  1890  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1891  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1892  05D7  0820               	movf	?_frexp,w
  1893  05D8  00B1               	movwf	___ftmul@f2
  1894  05D9  0821               	movf	?_frexp+1,w
  1895  05DA  00B2               	movwf	___ftmul@f2+1
  1896  05DB  0822               	movf	?_frexp+2,w
  1897  05DC  00B3               	movwf	___ftmul@f2+2
  1898  05DD  120A  118A  24B3  120A  118A  	fcall	___ftmul
  1899  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  1900  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  1901  05E4  082E               	movf	?___ftmul,w
  1902  05E5  00C1               	movwf	___ftadd@f2
  1903  05E6  082F               	movf	?___ftmul+1,w
  1904  05E7  00C2               	movwf	___ftadd@f2+1
  1905  05E8  0830               	movf	?___ftmul+2,w
  1906  05E9  00C3               	movwf	___ftadd@f2+2
  1907  05EA  120A  118A  22CE  120A  118A  	fcall	___ftadd
  1908  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  1909  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  1910  05F1  083E               	movf	?___ftadd,w
  1911  05F2  00D5               	movwf	log@x
  1912  05F3  083F               	movf	?___ftadd+1,w
  1913  05F4  00D6               	movwf	log@x+1
  1914  05F5  0840               	movf	?___ftadd+2,w
  1915  05F6  00D7               	movwf	log@x+2
  1916  05F7  30FF               	movlw	255
  1917  05F8  07D9               	addwf	log@exponent,f
  1918  05F9  1803               	skipnc
  1919  05FA  0ADA               	incf	log@exponent+1,f
  1920  05FB  30FF               	movlw	255
  1921  05FC  07DA               	addwf	log@exponent+1,f
  1922  05FD  0855               	movf	log@x,w
  1923  05FE  00CB               	movwf	eval_poly@x
  1924  05FF  0856               	movf	log@x+1,w
  1925  0600  00CC               	movwf	eval_poly@x+1
  1926  0601  0857               	movf	log@x+2,w
  1927  0602  00CD               	movwf	eval_poly@x+2
  1928  0603  301F               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  1929  0604  00D8               	movwf	??_log
  1930  0605  0858               	movf	??_log,w
  1931  0606  00CE               	movwf	eval_poly@d
  1932  0607  3008               	movlw	8
  1933  0608  00CF               	movwf	eval_poly@n
  1934  0609  3000               	movlw	0
  1935  060A  00D0               	movwf	eval_poly@n+1
  1936  060B  120A  158A  2677  120A  118A  	fcall	_eval_poly
  1937  0610  1283               	bcf	3,5	;RP0=0, select bank0
  1938  0611  1303               	bcf	3,6	;RP1=0, select bank0
  1939  0612  084B               	movf	?_eval_poly,w
  1940  0613  00D5               	movwf	log@x
  1941  0614  084C               	movf	?_eval_poly+1,w
  1942  0615  00D6               	movwf	log@x+1
  1943  0616  084D               	movf	?_eval_poly+2,w
  1944  0617  00D7               	movwf	log@x+2
  1945  0618  0855               	movf	log@x,w
  1946  0619  00BE               	movwf	___ftadd@f1
  1947  061A  0856               	movf	log@x+1,w
  1948  061B  00BF               	movwf	___ftadd@f1+1
  1949  061C  0857               	movf	log@x+2,w
  1950  061D  00C0               	movwf	___ftadd@f1+2
  1951  061E  3072               	movlw	114
  1952  061F  00AE               	movwf	___ftmul@f1
  1953  0620  3031               	movlw	49
  1954  0621  00AF               	movwf	___ftmul@f1+1
  1955  0622  303F               	movlw	63
  1956  0623  00B0               	movwf	___ftmul@f1+2
  1957  0624  085A               	movf	log@exponent+1,w
  1958  0625  00A9               	movwf	___awtoft@c+1
  1959  0626  0859               	movf	log@exponent,w
  1960  0627  00A8               	movwf	___awtoft@c
  1961  0628  120A  158A  23EA  120A  118A  	fcall	___awtoft
  1962  062D  1283               	bcf	3,5	;RP0=0, select bank0
  1963  062E  1303               	bcf	3,6	;RP1=0, select bank0
  1964  062F  0828               	movf	?___awtoft,w
  1965  0630  00B1               	movwf	___ftmul@f2
  1966  0631  0829               	movf	?___awtoft+1,w
  1967  0632  00B2               	movwf	___ftmul@f2+1
  1968  0633  082A               	movf	?___awtoft+2,w
  1969  0634  00B3               	movwf	___ftmul@f2+2
  1970  0635  120A  118A  24B3  120A  118A  	fcall	___ftmul
  1971  063A  1283               	bcf	3,5	;RP0=0, select bank0
  1972  063B  1303               	bcf	3,6	;RP1=0, select bank0
  1973  063C  082E               	movf	?___ftmul,w
  1974  063D  00C1               	movwf	___ftadd@f2
  1975  063E  082F               	movf	?___ftmul+1,w
  1976  063F  00C2               	movwf	___ftadd@f2+1
  1977  0640  0830               	movf	?___ftmul+2,w
  1978  0641  00C3               	movwf	___ftadd@f2+2
  1979  0642  120A  118A  22CE   	fcall	___ftadd
  1980  0645  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0646  1303               	bcf	3,6	;RP1=0, select bank0
  1982  0647  083E               	movf	?___ftadd,w
  1983  0648  00D5               	movwf	?_log
  1984  0649  083F               	movf	?___ftadd+1,w
  1985  064A  00D6               	movwf	?_log+1
  1986  064B  0840               	movf	?___ftadd+2,w
  1987  064C  00D7               	movwf	?_log+2
  1988  064D  0008               	return
  1989  064E                     __end_of_log:	
  1990                           
  1991                           	psect	text6
  1992  0193                     __ptext6:	
  1993 ;; *************** function _exp *****************
  1994 ;; Defined at:
  1995 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\exp.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  x               3   60[BANK0 ] int 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  exponent        2   67[BANK0 ] int 
  2000 ;;  sign            1   69[BANK0 ] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  3   60[BANK0 ] unsigned char 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2010 ;;      Params:         0       3       0       0       0
  2011 ;;      Locals:         0       6       0       0       0
  2012 ;;      Temps:          0       1       0       0       0
  2013 ;;      Totals:         0      10       0       0       0
  2014 ;;Total ram usage:       10 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    4
  2017 ;; This function calls:
  2018 ;;		___awtoft
  2019 ;;		___ftdiv
  2020 ;;		___ftge
  2021 ;;		___ftmul
  2022 ;;		___ftneg
  2023 ;;		___ftsub
  2024 ;;		___fttol
  2025 ;;		_eval_poly
  2026 ;;		_floor
  2027 ;;		_ldexp
  2028 ;; This function is called by:
  2029 ;;		_pow
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           
  2034                           ;psect for function _exp
  2035  0193                     _exp:	
  2036                           
  2037                           ;incstack = 0
  2038                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2039  0193  1283               	bcf	3,5	;RP0=0, select bank0
  2040  0194  1303               	bcf	3,6	;RP1=0, select bank0
  2041  0195  085E               	movf	exp@x+2,w
  2042  0196  045D               	iorwf	exp@x+1,w
  2043  0197  045C               	iorwf	exp@x,w
  2044  0198  1D03               	skipz
  2045  0199  29A1               	goto	l2319
  2046  019A  3000               	movlw	0
  2047  019B  00DC               	movwf	?_exp
  2048  019C  3080               	movlw	128
  2049  019D  00DD               	movwf	?_exp+1
  2050  019E  303F               	movlw	63
  2051  019F  00DE               	movwf	?_exp+2
  2052  01A0  0008               	return
  2053  01A1                     l2319:	
  2054  01A1  3072               	movlw	114
  2055  01A2  00A0               	movwf	___ftge@ff1
  2056  01A3  3031               	movlw	49
  2057  01A4  00A1               	movwf	___ftge@ff1+1
  2058  01A5  3044               	movlw	68
  2059  01A6  00A2               	movwf	___ftge@ff1+2
  2060  01A7  085C               	movf	exp@x,w
  2061  01A8  00A3               	movwf	___ftge@ff2
  2062  01A9  085D               	movf	exp@x+1,w
  2063  01AA  00A4               	movwf	___ftge@ff2+1
  2064  01AB  085E               	movf	exp@x+2,w
  2065  01AC  00A5               	movwf	___ftge@ff2+2
  2066  01AD  120A  118A  279F  120A  118A  	fcall	___ftge
  2067  01B2  1803               	btfsc	3,0
  2068  01B3  29C1               	goto	l2325
  2069  01B4  3022               	movlw	34
  2070  01B5  00FA               	movwf	_errno
  2071  01B6  3000               	movlw	0
  2072  01B7  00FB               	movwf	_errno+1
  2073  01B8  30FF               	movlw	255
  2074  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  2075  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  2076  01BB  00DC               	movwf	?_exp
  2077  01BC  307F               	movlw	127
  2078  01BD  00DD               	movwf	?_exp+1
  2079  01BE  307F               	movlw	127
  2080  01BF  00DE               	movwf	?_exp+2
  2081  01C0  0008               	return
  2082  01C1                     l2325:	
  2083  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2084  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2085  01C3  085C               	movf	exp@x,w
  2086  01C4  00A0               	movwf	___ftge@ff1
  2087  01C5  085D               	movf	exp@x+1,w
  2088  01C6  00A1               	movwf	___ftge@ff1+1
  2089  01C7  085E               	movf	exp@x+2,w
  2090  01C8  00A2               	movwf	___ftge@ff1+2
  2091  01C9  3049               	movlw	73
  2092  01CA  00A3               	movwf	___ftge@ff2
  2093  01CB  303A               	movlw	58
  2094  01CC  00A4               	movwf	___ftge@ff2+1
  2095  01CD  30C4               	movlw	196
  2096  01CE  00A5               	movwf	___ftge@ff2+2
  2097  01CF  120A  118A  279F  120A  118A  	fcall	___ftge
  2098  01D4  1803               	btfsc	3,0
  2099  01D5  29E3               	goto	l2331
  2100  01D6  3022               	movlw	34
  2101  01D7  00FA               	movwf	_errno
  2102  01D8  3000               	movlw	0
  2103  01D9  00FB               	movwf	_errno+1
  2104  01DA  3000               	movlw	0
  2105  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2106  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2107  01DD  00DC               	movwf	?_exp
  2108  01DE  3000               	movlw	0
  2109  01DF  00DD               	movwf	?_exp+1
  2110  01E0  3000               	movlw	0
  2111  01E1  00DE               	movwf	?_exp+2
  2112  01E2  0008               	return
  2113  01E3                     l2331:	
  2114  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2115  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  2116  01E5  085C               	movf	exp@x,w
  2117  01E6  00A0               	movwf	___ftge@ff1
  2118  01E7  085D               	movf	exp@x+1,w
  2119  01E8  00A1               	movwf	___ftge@ff1+1
  2120  01E9  085E               	movf	exp@x+2,w
  2121  01EA  00A2               	movwf	___ftge@ff1+2
  2122  01EB  3000               	movlw	0
  2123  01EC  00A3               	movwf	___ftge@ff2
  2124  01ED  3000               	movlw	0
  2125  01EE  00A4               	movwf	___ftge@ff2+1
  2126  01EF  3000               	movlw	0
  2127  01F0  00A5               	movwf	___ftge@ff2+2
  2128  01F1  120A  118A  279F  120A  118A  	fcall	___ftge
  2129  01F6  1803               	btfsc	3,0
  2130  01F7  29FA               	goto	u3490
  2131  01F8  3001               	movlw	1
  2132  01F9  29FB               	goto	u3500
  2133  01FA                     u3490:	
  2134  01FA  3000               	movlw	0
  2135  01FB                     u3500:	
  2136  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2137  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2138  01FD  00DF               	movwf	??_exp
  2139  01FE  085F               	movf	??_exp,w
  2140  01FF  00E5               	movwf	exp@sign
  2141  0200  0865               	movf	exp@sign,w
  2142  0201  1903               	btfsc	3,2
  2143  0202  2A16               	goto	l2337
  2144  0203  085C               	movf	exp@x,w
  2145  0204  00A0               	movwf	___ftneg@f1
  2146  0205  085D               	movf	exp@x+1,w
  2147  0206  00A1               	movwf	___ftneg@f1+1
  2148  0207  085E               	movf	exp@x+2,w
  2149  0208  00A2               	movwf	___ftneg@f1+2
  2150  0209  120A  158A  2394  120A  118A  	fcall	___ftneg
  2151  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2152  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2153  0210  0820               	movf	?___ftneg,w
  2154  0211  00DC               	movwf	exp@x
  2155  0212  0821               	movf	?___ftneg+1,w
  2156  0213  00DD               	movwf	exp@x+1
  2157  0214  0822               	movf	?___ftneg+2,w
  2158  0215  00DE               	movwf	exp@x+2
  2159  0216                     l2337:	
  2160  0216  30AA               	movlw	170
  2161  0217  00AE               	movwf	___ftmul@f1
  2162  0218  30B8               	movlw	184
  2163  0219  00AF               	movwf	___ftmul@f1+1
  2164  021A  303F               	movlw	63
  2165  021B  00B0               	movwf	___ftmul@f1+2
  2166  021C  085C               	movf	exp@x,w
  2167  021D  00B1               	movwf	___ftmul@f2
  2168  021E  085D               	movf	exp@x+1,w
  2169  021F  00B2               	movwf	___ftmul@f2+1
  2170  0220  085E               	movf	exp@x+2,w
  2171  0221  00B3               	movwf	___ftmul@f2+2
  2172  0222  120A  118A  24B3  120A  118A  	fcall	___ftmul
  2173  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2174  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2175  0229  082E               	movf	?___ftmul,w
  2176  022A  00DC               	movwf	exp@x
  2177  022B  082F               	movf	?___ftmul+1,w
  2178  022C  00DD               	movwf	exp@x+1
  2179  022D  0830               	movf	?___ftmul+2,w
  2180  022E  00DE               	movwf	exp@x+2
  2181  022F  085C               	movf	exp@x,w
  2182  0230  00CB               	movwf	floor@x
  2183  0231  085D               	movf	exp@x+1,w
  2184  0232  00CC               	movwf	floor@x+1
  2185  0233  085E               	movf	exp@x+2,w
  2186  0234  00CD               	movwf	floor@x+2
  2187  0235  120A  118A  2706  120A  118A  	fcall	_floor
  2188  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2189  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2190  023C  084B               	movf	?_floor,w
  2191  023D  00E0               	movwf	_exp$646
  2192  023E  084C               	movf	?_floor+1,w
  2193  023F  00E1               	movwf	_exp$646+1
  2194  0240  084D               	movf	?_floor+2,w
  2195  0241  00E2               	movwf	_exp$646+2
  2196  0242  0860               	movf	_exp$646,w
  2197  0243  00AC               	movwf	___fttol@f1
  2198  0244  0861               	movf	_exp$646+1,w
  2199  0245  00AD               	movwf	___fttol@f1+1
  2200  0246  0862               	movf	_exp$646+2,w
  2201  0247  00AE               	movwf	___fttol@f1+2
  2202  0248  120A  158A  2772  120A  118A  	fcall	___fttol
  2203  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2204  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2205  024F  082D               	movf	?___fttol+1,w
  2206  0250  00E4               	movwf	exp@exponent+1
  2207  0251  082C               	movf	?___fttol,w
  2208  0252  00E3               	movwf	exp@exponent
  2209  0253  0864               	movf	exp@exponent+1,w
  2210  0254  00A9               	movwf	___awtoft@c+1
  2211  0255  0863               	movf	exp@exponent,w
  2212  0256  00A8               	movwf	___awtoft@c
  2213  0257  120A  158A  23EA  120A  118A  	fcall	___awtoft
  2214  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2215  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2216  025E  0828               	movf	?___awtoft,w
  2217  025F  00CB               	movwf	___ftsub@f2
  2218  0260  0829               	movf	?___awtoft+1,w
  2219  0261  00CC               	movwf	___ftsub@f2+1
  2220  0262  082A               	movf	?___awtoft+2,w
  2221  0263  00CD               	movwf	___ftsub@f2+2
  2222  0264  085C               	movf	exp@x,w
  2223  0265  00CE               	movwf	___ftsub@f1
  2224  0266  085D               	movf	exp@x+1,w
  2225  0267  00CF               	movwf	___ftsub@f1+1
  2226  0268  085E               	movf	exp@x+2,w
  2227  0269  00D0               	movwf	___ftsub@f1+2
  2228  026A  120A  158A  23C9  120A  118A  	fcall	___ftsub
  2229  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2231  0271  084B               	movf	?___ftsub,w
  2232  0272  00DC               	movwf	exp@x
  2233  0273  084C               	movf	?___ftsub+1,w
  2234  0274  00DD               	movwf	exp@x+1
  2235  0275  084D               	movf	?___ftsub+2,w
  2236  0276  00DE               	movwf	exp@x+2
  2237  0277  085C               	movf	exp@x,w
  2238  0278  00CB               	movwf	eval_poly@x
  2239  0279  085D               	movf	exp@x+1,w
  2240  027A  00CC               	movwf	eval_poly@x+1
  2241  027B  085E               	movf	exp@x+2,w
  2242  027C  00CD               	movwf	eval_poly@x+2
  2243  027D  3001               	movlw	(low ((exp@coeff-__stringbase)| (0+32768)))& (0+255)
  2244  027E  00DF               	movwf	??_exp
  2245  027F  085F               	movf	??_exp,w
  2246  0280  00CE               	movwf	eval_poly@d
  2247  0281  3009               	movlw	9
  2248  0282  00CF               	movwf	eval_poly@n
  2249  0283  3000               	movlw	0
  2250  0284  00D0               	movwf	eval_poly@n+1
  2251  0285  120A  158A  2677  120A  118A  	fcall	_eval_poly
  2252  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2253  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2254  028C  084B               	movf	?_eval_poly,w
  2255  028D  00D5               	movwf	ldexp@value
  2256  028E  084C               	movf	?_eval_poly+1,w
  2257  028F  00D6               	movwf	ldexp@value+1
  2258  0290  084D               	movf	?_eval_poly+2,w
  2259  0291  00D7               	movwf	ldexp@value+2
  2260  0292  0864               	movf	exp@exponent+1,w
  2261  0293  00D9               	movwf	ldexp@newexp+1
  2262  0294  0863               	movf	exp@exponent,w
  2263  0295  00D8               	movwf	ldexp@newexp
  2264  0296  120A  158A  26F0  120A  118A  	fcall	_ldexp
  2265  029B  1283               	bcf	3,5	;RP0=0, select bank0
  2266  029C  1303               	bcf	3,6	;RP1=0, select bank0
  2267  029D  0855               	movf	?_ldexp,w
  2268  029E  00DC               	movwf	exp@x
  2269  029F  0856               	movf	?_ldexp+1,w
  2270  02A0  00DD               	movwf	exp@x+1
  2271  02A1  0857               	movf	?_ldexp+2,w
  2272  02A2  00DE               	movwf	exp@x+2
  2273  02A3  0865               	movf	exp@sign,w
  2274  02A4  1903               	btfsc	3,2
  2275  02A5  0008               	return
  2276  02A6  0A5C               	incf	exp@x,w
  2277  02A7  307F               	movlw	127
  2278  02A8  1903               	skipnz
  2279  02A9  065D               	xorwf	exp@x+1,w
  2280  02AA  307F               	movlw	127
  2281  02AB  1903               	skipnz
  2282  02AC  065E               	xorwf	exp@x+2,w
  2283  02AD  1D03               	btfss	3,2
  2284  02AE  2AB6               	goto	l2355
  2285  02AF  3000               	movlw	0
  2286  02B0  00DC               	movwf	?_exp
  2287  02B1  3000               	movlw	0
  2288  02B2  00DD               	movwf	?_exp+1
  2289  02B3  3000               	movlw	0
  2290  02B4  00DE               	movwf	?_exp+2
  2291  02B5  0008               	return
  2292  02B6                     l2355:	
  2293  02B6  085C               	movf	exp@x,w
  2294  02B7  00A8               	movwf	___ftdiv@f2
  2295  02B8  085D               	movf	exp@x+1,w
  2296  02B9  00A9               	movwf	___ftdiv@f2+1
  2297  02BA  085E               	movf	exp@x+2,w
  2298  02BB  00AA               	movwf	___ftdiv@f2+2
  2299  02BC  3000               	movlw	0
  2300  02BD  00AB               	movwf	___ftdiv@f1
  2301  02BE  3080               	movlw	128
  2302  02BF  00AC               	movwf	___ftdiv@f1+1
  2303  02C0  303F               	movlw	63
  2304  02C1  00AD               	movwf	___ftdiv@f1+2
  2305  02C2  120A  118A  264E   	fcall	___ftdiv
  2306  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2307  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2308  02C7  0828               	movf	?___ftdiv,w
  2309  02C8  00DC               	movwf	?_exp
  2310  02C9  0829               	movf	?___ftdiv+1,w
  2311  02CA  00DD               	movwf	?_exp+1
  2312  02CB  082A               	movf	?___ftdiv+2,w
  2313  02CC  00DE               	movwf	?_exp+2
  2314  02CD  0008               	return
  2315  02CE                     __end_of_exp:	
  2316                           
  2317                           	psect	text7
  2318  0EF0                     __ptext7:	
  2319 ;; *************** function _ldexp *****************
  2320 ;; Defined at:
  2321 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  value           3   53[BANK0 ] unsigned char 
  2324 ;;  newexp          2   56[BANK0 ] int 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  3   53[BANK0 ] int 
  2329 ;; Registers used:
  2330 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2336 ;;      Params:         0       5       0       0       0
  2337 ;;      Locals:         0       0       0       0       0
  2338 ;;      Temps:          0       2       0       0       0
  2339 ;;      Totals:         0       7       0       0       0
  2340 ;;Total ram usage:        7 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:    2
  2343 ;; This function calls:
  2344 ;;		___ftge
  2345 ;; This function is called by:
  2346 ;;		_exp
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           
  2351                           ;psect for function _ldexp
  2352  0EF0                     _ldexp:	
  2353                           
  2354                           ;incstack = 0
  2355                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2356  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0EF2  0857               	movf	ldexp@value+2,w
  2359  0EF3  0456               	iorwf	ldexp@value+1,w
  2360  0EF4  0455               	iorwf	ldexp@value,w
  2361  0EF5  1D03               	skipz
  2362  0EF6  2EFE               	goto	l1677
  2363  0EF7  3000               	movlw	0
  2364  0EF8  00D5               	movwf	?_ldexp
  2365  0EF9  3000               	movlw	0
  2366  0EFA  00D6               	movwf	?_ldexp+1
  2367  0EFB  3000               	movlw	0
  2368  0EFC  00D7               	movwf	?_ldexp+2
  2369  0EFD  0008               	return
  2370  0EFE                     l1677:	
  2371  0EFE  0857               	movf	ldexp@value+2,w
  2372  0EFF  397F               	andlw	127
  2373  0F00  00DA               	movwf	??_ldexp
  2374  0F01  01DB               	clrf	??_ldexp+1
  2375  0F02  1003               	clrc
  2376  0F03  0DDA               	rlf	??_ldexp,f
  2377  0F04  0DDB               	rlf	??_ldexp+1,f
  2378  0F05  085A               	movf	??_ldexp,w
  2379  0F06  07D8               	addwf	ldexp@newexp,f
  2380  0F07  1803               	skipnc
  2381  0F08  0AD9               	incf	ldexp@newexp+1,f
  2382  0F09  085B               	movf	??_ldexp+1,w
  2383  0F0A  07D9               	addwf	ldexp@newexp+1,f
  2384  0F0B  0D56               	rlf	ldexp@value+1,w
  2385  0F0C  0D56               	rlf	ldexp@value+1,w
  2386  0F0D  3901               	andlw	1
  2387  0F0E  00DA               	movwf	??_ldexp
  2388  0F0F  01DB               	clrf	??_ldexp+1
  2389  0F10  085A               	movf	??_ldexp,w
  2390  0F11  07D8               	addwf	ldexp@newexp,f
  2391  0F12  1803               	skipnc
  2392  0F13  0AD9               	incf	ldexp@newexp+1,f
  2393  0F14  085B               	movf	??_ldexp+1,w
  2394  0F15  07D9               	addwf	ldexp@newexp+1,f
  2395  0F16  1FD9               	btfss	ldexp@newexp+1,7
  2396  0F17  2F23               	goto	l1687
  2397  0F18  3022               	movlw	34
  2398  0F19  00FA               	movwf	_errno
  2399  0F1A  3000               	movlw	0
  2400  0F1B  00FB               	movwf	_errno+1
  2401  0F1C  3000               	movlw	0
  2402  0F1D  00D5               	movwf	?_ldexp
  2403  0F1E  3000               	movlw	0
  2404  0F1F  00D6               	movwf	?_ldexp+1
  2405  0F20  3000               	movlw	0
  2406  0F21  00D7               	movwf	?_ldexp+2
  2407  0F22  0008               	return
  2408  0F23                     l1687:	
  2409  0F23  0859               	movf	ldexp@newexp+1,w
  2410  0F24  3A80               	xorlw	128
  2411  0F25  00FF               	movwf	127
  2412  0F26  3081               	movlw	129
  2413  0F27  027F               	subwf	127,w
  2414  0F28  1D03               	skipz
  2415  0F29  2F2C               	goto	u2225
  2416  0F2A  3000               	movlw	0
  2417  0F2B  0258               	subwf	ldexp@newexp,w
  2418  0F2C                     u2225:	
  2419  0F2C  1C03               	skipc
  2420  0F2D  2F59               	goto	l1703
  2421  0F2E  3022               	movlw	34
  2422  0F2F  00FA               	movwf	_errno
  2423  0F30  3000               	movlw	0
  2424  0F31  00FB               	movwf	_errno+1
  2425  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0F34  0855               	movf	ldexp@value,w
  2428  0F35  00A0               	movwf	___ftge@ff1
  2429  0F36  0856               	movf	ldexp@value+1,w
  2430  0F37  00A1               	movwf	___ftge@ff1+1
  2431  0F38  0857               	movf	ldexp@value+2,w
  2432  0F39  00A2               	movwf	___ftge@ff1+2
  2433  0F3A  3000               	movlw	0
  2434  0F3B  00A3               	movwf	___ftge@ff2
  2435  0F3C  3000               	movlw	0
  2436  0F3D  00A4               	movwf	___ftge@ff2+1
  2437  0F3E  3000               	movlw	0
  2438  0F3F  00A5               	movwf	___ftge@ff2+2
  2439  0F40  120A  118A  279F  120A  158A  	fcall	___ftge
  2440  0F45  1803               	btfsc	3,0
  2441  0F46  2F50               	goto	l1699
  2442  0F47  30FF               	movlw	255
  2443  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  2444  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  2445  0F4A  00D5               	movwf	?_ldexp
  2446  0F4B  307F               	movlw	127
  2447  0F4C  00D6               	movwf	?_ldexp+1
  2448  0F4D  30FF               	movlw	255
  2449  0F4E  00D7               	movwf	?_ldexp+2
  2450  0F4F  0008               	return
  2451  0F50                     l1699:	
  2452  0F50  30FF               	movlw	255
  2453  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0F53  00D5               	movwf	?_ldexp
  2456  0F54  307F               	movlw	127
  2457  0F55  00D6               	movwf	?_ldexp+1
  2458  0F56  307F               	movlw	127
  2459  0F57  00D7               	movwf	?_ldexp+2
  2460  0F58  0008               	return
  2461  0F59                     l1703:	
  2462  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  2463  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2464  0F5B  0859               	movf	ldexp@newexp+1,w
  2465  0F5C  00DB               	movwf	??_ldexp+1
  2466  0F5D  0858               	movf	ldexp@newexp,w
  2467  0F5E  00DA               	movwf	??_ldexp
  2468  0F5F  0D5B               	rlf	??_ldexp+1,w
  2469  0F60  0CDB               	rrf	??_ldexp+1,f
  2470  0F61  0CDA               	rrf	??_ldexp,f
  2471  0F62  0857               	movf	ldexp@value+2,w
  2472  0F63  065A               	xorwf	??_ldexp,w
  2473  0F64  3980               	andlw	-128
  2474  0F65  065A               	xorwf	??_ldexp,w
  2475  0F66  00D7               	movwf	ldexp@value+2
  2476  0F67  0858               	movf	ldexp@newexp,w
  2477  0F68  3901               	andlw	1
  2478  0F69  00DA               	movwf	??_ldexp
  2479  0F6A  0CDA               	rrf	??_ldexp,f
  2480  0F6B  0CDA               	rrf	??_ldexp,f
  2481  0F6C  0856               	movf	ldexp@value+1,w
  2482  0F6D  065A               	xorwf	??_ldexp,w
  2483  0F6E  397F               	andlw	-129
  2484  0F6F  065A               	xorwf	??_ldexp,w
  2485  0F70  00D6               	movwf	ldexp@value+1
  2486  0F71  0008               	return
  2487  0F72                     __end_of_ldexp:	
  2488                           
  2489                           	psect	text8
  2490  0706                     __ptext8:	
  2491 ;; *************** function _floor *****************
  2492 ;; Defined at:
  2493 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\floor.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  x               3   43[BANK0 ] int 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  i               3   47[BANK0 ] int 
  2498 ;;  expon           2   50[BANK0 ] int 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  3   43[BANK0 ] int 
  2501 ;; Registers used:
  2502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2508 ;;      Params:         0       3       0       0       0
  2509 ;;      Locals:         0       5       0       0       0
  2510 ;;      Temps:          0       1       0       0       0
  2511 ;;      Totals:         0       9       0       0       0
  2512 ;;Total ram usage:        9 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    3
  2515 ;; This function calls:
  2516 ;;		___altoft
  2517 ;;		___ftadd
  2518 ;;		___ftge
  2519 ;;		___fttol
  2520 ;;		_frexp
  2521 ;; This function is called by:
  2522 ;;		_exp
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _floor
  2528  0706                     _floor:	
  2529                           
  2530                           ;incstack = 0
  2531                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2532  0706  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0707  1303               	bcf	3,6	;RP1=0, select bank0
  2534  0708  084B               	movf	floor@x,w
  2535  0709  00A0               	movwf	frexp@value
  2536  070A  084C               	movf	floor@x+1,w
  2537  070B  00A1               	movwf	frexp@value+1
  2538  070C  084D               	movf	floor@x+2,w
  2539  070D  00A2               	movwf	frexp@value+2
  2540  070E  3052               	movlw	(low (floor@expon| 0))& (0+255)
  2541  070F  00CE               	movwf	??_floor
  2542  0710  084E               	movf	??_floor,w
  2543  0711  00A3               	movwf	frexp@eptr
  2544  0712  120A  158A  24EA  120A  118A  	fcall	_frexp
  2545  0717  1283               	bcf	3,5	;RP0=0, select bank0
  2546  0718  1303               	bcf	3,6	;RP1=0, select bank0
  2547  0719  1FD3               	btfss	floor@expon+1,7
  2548  071A  2F40               	goto	l2243
  2549  071B  084B               	movf	floor@x,w
  2550  071C  00A0               	movwf	___ftge@ff1
  2551  071D  084C               	movf	floor@x+1,w
  2552  071E  00A1               	movwf	___ftge@ff1+1
  2553  071F  084D               	movf	floor@x+2,w
  2554  0720  00A2               	movwf	___ftge@ff1+2
  2555  0721  3000               	movlw	0
  2556  0722  00A3               	movwf	___ftge@ff2
  2557  0723  3000               	movlw	0
  2558  0724  00A4               	movwf	___ftge@ff2+1
  2559  0725  3000               	movlw	0
  2560  0726  00A5               	movwf	___ftge@ff2+2
  2561  0727  120A  118A  279F  120A  118A  	fcall	___ftge
  2562  072C  1803               	btfsc	3,0
  2563  072D  2F37               	goto	l2239
  2564  072E  3000               	movlw	0
  2565  072F  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0730  1303               	bcf	3,6	;RP1=0, select bank0
  2567  0731  00CB               	movwf	?_floor
  2568  0732  3080               	movlw	128
  2569  0733  00CC               	movwf	?_floor+1
  2570  0734  30BF               	movlw	191
  2571  0735  00CD               	movwf	?_floor+2
  2572  0736  0008               	return
  2573  0737                     l2239:	
  2574  0737  3000               	movlw	0
  2575  0738  1283               	bcf	3,5	;RP0=0, select bank0
  2576  0739  1303               	bcf	3,6	;RP1=0, select bank0
  2577  073A  00CB               	movwf	?_floor
  2578  073B  3000               	movlw	0
  2579  073C  00CC               	movwf	?_floor+1
  2580  073D  3000               	movlw	0
  2581  073E  00CD               	movwf	?_floor+2
  2582  073F  0008               	return
  2583  0740                     l2243:	
  2584  0740  3000               	movlw	0
  2585  0741  0253               	subwf	floor@expon+1,w
  2586  0742  3015               	movlw	21
  2587  0743  1903               	skipnz
  2588  0744  0252               	subwf	floor@expon,w
  2589  0745  1803               	btfsc	3,0
  2590  0746  0008               	return
  2591  0747  084B               	movf	floor@x,w
  2592  0748  00AC               	movwf	___fttol@f1
  2593  0749  084C               	movf	floor@x+1,w
  2594  074A  00AD               	movwf	___fttol@f1+1
  2595  074B  084D               	movf	floor@x+2,w
  2596  074C  00AE               	movwf	___fttol@f1+2
  2597  074D  120A  158A  2772  120A  118A  	fcall	___fttol
  2598  0752  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0753  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0754  082F               	movf	?___fttol+3,w
  2601  0755  00BD               	movwf	___altoft@c+3
  2602  0756  082E               	movf	?___fttol+2,w
  2603  0757  00BC               	movwf	___altoft@c+2
  2604  0758  082D               	movf	?___fttol+1,w
  2605  0759  00BB               	movwf	___altoft@c+1
  2606  075A  082C               	movf	?___fttol,w
  2607  075B  00BA               	movwf	___altoft@c
  2608  075C  120A  158A  24A8  120A  118A  	fcall	___altoft
  2609  0761  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0762  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0763  083A               	movf	?___altoft,w
  2612  0764  00CF               	movwf	floor@i
  2613  0765  083B               	movf	?___altoft+1,w
  2614  0766  00D0               	movwf	floor@i+1
  2615  0767  083C               	movf	?___altoft+2,w
  2616  0768  00D1               	movwf	floor@i+2
  2617  0769  084B               	movf	floor@x,w
  2618  076A  00A0               	movwf	___ftge@ff1
  2619  076B  084C               	movf	floor@x+1,w
  2620  076C  00A1               	movwf	___ftge@ff1+1
  2621  076D  084D               	movf	floor@x+2,w
  2622  076E  00A2               	movwf	___ftge@ff1+2
  2623  076F  084F               	movf	floor@i,w
  2624  0770  00A3               	movwf	___ftge@ff2
  2625  0771  0850               	movf	floor@i+1,w
  2626  0772  00A4               	movwf	___ftge@ff2+1
  2627  0773  0851               	movf	floor@i+2,w
  2628  0774  00A5               	movwf	___ftge@ff2+2
  2629  0775  120A  118A  279F  120A  118A  	fcall	___ftge
  2630  077A  1803               	btfsc	3,0
  2631  077B  2F96               	goto	l2253
  2632  077C  3000               	movlw	0
  2633  077D  1283               	bcf	3,5	;RP0=0, select bank0
  2634  077E  1303               	bcf	3,6	;RP1=0, select bank0
  2635  077F  00BE               	movwf	___ftadd@f1
  2636  0780  3080               	movlw	128
  2637  0781  00BF               	movwf	___ftadd@f1+1
  2638  0782  30BF               	movlw	191
  2639  0783  00C0               	movwf	___ftadd@f1+2
  2640  0784  084F               	movf	floor@i,w
  2641  0785  00C1               	movwf	___ftadd@f2
  2642  0786  0850               	movf	floor@i+1,w
  2643  0787  00C2               	movwf	___ftadd@f2+1
  2644  0788  0851               	movf	floor@i+2,w
  2645  0789  00C3               	movwf	___ftadd@f2+2
  2646  078A  120A  118A  22CE   	fcall	___ftadd
  2647  078D  1283               	bcf	3,5	;RP0=0, select bank0
  2648  078E  1303               	bcf	3,6	;RP1=0, select bank0
  2649  078F  083E               	movf	?___ftadd,w
  2650  0790  00CB               	movwf	?_floor
  2651  0791  083F               	movf	?___ftadd+1,w
  2652  0792  00CC               	movwf	?_floor+1
  2653  0793  0840               	movf	?___ftadd+2,w
  2654  0794  00CD               	movwf	?_floor+2
  2655  0795  0008               	return
  2656  0796                     l2253:	
  2657  0796  1283               	bcf	3,5	;RP0=0, select bank0
  2658  0797  1303               	bcf	3,6	;RP1=0, select bank0
  2659  0798  084F               	movf	floor@i,w
  2660  0799  00CB               	movwf	?_floor
  2661  079A  0850               	movf	floor@i+1,w
  2662  079B  00CC               	movwf	?_floor+1
  2663  079C  0851               	movf	floor@i+2,w
  2664  079D  00CD               	movwf	?_floor+2
  2665  079E  0008               	return
  2666  079F                     __end_of_floor:	
  2667                           
  2668                           	psect	text9
  2669  0CEA                     __ptext9:	
  2670 ;; *************** function _frexp *****************
  2671 ;; Defined at:
  2672 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  value           3    0[BANK0 ] int 
  2675 ;;  eptr            1    3[BANK0 ] PTR int 
  2676 ;;		 -> log@exponent(2), floor@expon(2), 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  3    0[BANK0 ] PTR int 
  2681 ;; Registers used:
  2682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2688 ;;      Params:         0       4       0       0       0
  2689 ;;      Locals:         0       0       0       0       0
  2690 ;;      Temps:          0       2       0       0       0
  2691 ;;      Totals:         0       6       0       0       0
  2692 ;;Total ram usage:        6 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    1
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_floor
  2699 ;;		_log
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function _frexp
  2705  0CEA                     _frexp:	
  2706                           
  2707                           ;incstack = 0
  2708                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  2709  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  2710  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  2711  0CEC  0822               	movf	frexp@value+2,w
  2712  0CED  0421               	iorwf	frexp@value+1,w
  2713  0CEE  0420               	iorwf	frexp@value,w
  2714  0CEF  1D03               	skipz
  2715  0CF0  2CFE               	goto	l2147
  2716  0CF1  0823               	movf	frexp@eptr,w
  2717  0CF2  0084               	movwf	4
  2718  0CF3  1383               	bcf	3,7	;select IRP bank0
  2719  0CF4  0180               	clrf	0
  2720  0CF5  0A84               	incf	4,f
  2721  0CF6  0180               	clrf	0
  2722  0CF7  3000               	movlw	0
  2723  0CF8  00A0               	movwf	?_frexp
  2724  0CF9  3000               	movlw	0
  2725  0CFA  00A1               	movwf	?_frexp+1
  2726  0CFB  3000               	movlw	0
  2727  0CFC  00A2               	movwf	?_frexp+2
  2728  0CFD  0008               	return
  2729  0CFE                     l2147:	
  2730  0CFE  0822               	movf	frexp@value+2,w
  2731  0CFF  397F               	andlw	127
  2732  0D00  00A4               	movwf	??_frexp
  2733  0D01  01A5               	clrf	??_frexp+1
  2734  0D02  1003               	clrc
  2735  0D03  0DA4               	rlf	??_frexp,f
  2736  0D04  0DA5               	rlf	??_frexp+1,f
  2737  0D05  0823               	movf	frexp@eptr,w
  2738  0D06  0084               	movwf	4
  2739  0D07  0824               	movf	??_frexp,w
  2740  0D08  1383               	bcf	3,7	;select IRP bank0
  2741  0D09  0080               	movwf	0
  2742  0D0A  0A84               	incf	4,f
  2743  0D0B  0825               	movf	??_frexp+1,w
  2744  0D0C  0080               	movwf	0
  2745  0D0D  0D21               	rlf	frexp@value+1,w
  2746  0D0E  0D21               	rlf	frexp@value+1,w
  2747  0D0F  3901               	andlw	1
  2748  0D10  00A4               	movwf	??_frexp
  2749  0D11  01A5               	clrf	??_frexp+1
  2750  0D12  0823               	movf	frexp@eptr,w
  2751  0D13  0084               	movwf	4
  2752  0D14  0824               	movf	??_frexp,w
  2753  0D15  0480               	iorwf	0,f
  2754  0D16  0A84               	incf	4,f
  2755  0D17  0825               	movf	??_frexp+1,w
  2756  0D18  0480               	iorwf	0,f
  2757  0D19  0823               	movf	frexp@eptr,w
  2758  0D1A  0084               	movwf	4
  2759  0D1B  3082               	movlw	130
  2760  0D1C  0780               	addwf	0,f
  2761  0D1D  0F84               	incfsz	4,f
  2762  0D1E  0800               	movf	0,w
  2763  0D1F  1803               	skipnc
  2764  0D20  0A00               	incf	0,w
  2765  0D21  00FF               	movwf	127
  2766  0D22  30FF               	movlw	255
  2767  0D23  077F               	addwf	127,w
  2768  0D24  0080               	movwf	0
  2769  0D25  0384               	decf	4,f
  2770  0D26  0822               	movf	frexp@value+2,w
  2771  0D27  3980               	andlw	-128
  2772  0D28  383F               	iorlw	63
  2773  0D29  00A2               	movwf	frexp@value+2
  2774  0D2A  13A1               	bcf	frexp@value+1,7
  2775  0D2B  0008               	return
  2776  0D2C                     __end_of_frexp:	
  2777                           
  2778                           	psect	text10
  2779  0F72                     __ptext10:	
  2780 ;; *************** function ___fttol *****************
  2781 ;; Defined at:
  2782 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  f1              3   12[BANK0 ] float 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  lval            4   21[BANK0 ] unsigned long 
  2787 ;;  exp1            1   25[BANK0 ] unsigned char 
  2788 ;;  sign1           1   20[BANK0 ] unsigned char 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  4   12[BANK0 ] long 
  2791 ;; Registers used:
  2792 ;;		wreg, status,2, status,0
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2798 ;;      Params:         0       4       0       0       0
  2799 ;;      Locals:         0       6       0       0       0
  2800 ;;      Temps:          0       4       0       0       0
  2801 ;;      Totals:         0      14       0       0       0
  2802 ;;Total ram usage:       14 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    1
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_main
  2809 ;;		_pow
  2810 ;;		_exp
  2811 ;;		_floor
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           
  2816                           ;psect for function ___fttol
  2817  0F72                     ___fttol:	
  2818                           
  2819                           ;incstack = 0
  2820                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2821  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  2822  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  2823  0F74  082C               	movf	___fttol@f1,w
  2824  0F75  00B0               	movwf	??___fttol
  2825  0F76  082D               	movf	___fttol@f1+1,w
  2826  0F77  00B1               	movwf	??___fttol+1
  2827  0F78  082E               	movf	___fttol@f1+2,w
  2828  0F79  00B2               	movwf	??___fttol+2
  2829  0F7A  1003               	clrc
  2830  0F7B  0D31               	rlf	??___fttol+1,w
  2831  0F7C  0D32               	rlf	??___fttol+2,w
  2832  0F7D  00B3               	movwf	??___fttol+3
  2833  0F7E  0833               	movf	??___fttol+3,w
  2834  0F7F  00B9               	movwf	___fttol@exp1
  2835  0F80  0839               	movf	___fttol@exp1,w
  2836  0F81  1D03               	btfss	3,2
  2837  0F82  2F8C               	goto	l1507
  2838  0F83  3000               	movlw	0
  2839  0F84  00AF               	movwf	?___fttol+3
  2840  0F85  3000               	movlw	0
  2841  0F86  00AE               	movwf	?___fttol+2
  2842  0F87  3000               	movlw	0
  2843  0F88  00AD               	movwf	?___fttol+1
  2844  0F89  3000               	movlw	0
  2845  0F8A  00AC               	movwf	?___fttol
  2846  0F8B  0008               	return
  2847  0F8C                     l1507:	
  2848  0F8C  082C               	movf	___fttol@f1,w
  2849  0F8D  00B0               	movwf	??___fttol
  2850  0F8E  082D               	movf	___fttol@f1+1,w
  2851  0F8F  00B1               	movwf	??___fttol+1
  2852  0F90  082E               	movf	___fttol@f1+2,w
  2853  0F91  00B2               	movwf	??___fttol+2
  2854  0F92  3017               	movlw	23
  2855  0F93                     u1945:	
  2856  0F93  1003               	clrc
  2857  0F94  0CB2               	rrf	??___fttol+2,f
  2858  0F95  0CB1               	rrf	??___fttol+1,f
  2859  0F96  0CB0               	rrf	??___fttol,f
  2860  0F97  3EFF               	addlw	-1
  2861  0F98  1D03               	skipz
  2862  0F99  2F93               	goto	u1945
  2863  0F9A  0830               	movf	??___fttol,w
  2864  0F9B  00B3               	movwf	??___fttol+3
  2865  0F9C  0833               	movf	??___fttol+3,w
  2866  0F9D  00B4               	movwf	___fttol@sign1
  2867  0F9E  17AD               	bsf	___fttol@f1+1,7
  2868  0F9F  30FF               	movlw	255
  2869  0FA0  05AC               	andwf	___fttol@f1,f
  2870  0FA1  30FF               	movlw	255
  2871  0FA2  05AD               	andwf	___fttol@f1+1,f
  2872  0FA3  3000               	movlw	0
  2873  0FA4  05AE               	andwf	___fttol@f1+2,f
  2874  0FA5  082C               	movf	___fttol@f1,w
  2875  0FA6  00B5               	movwf	___fttol@lval
  2876  0FA7  082D               	movf	___fttol@f1+1,w
  2877  0FA8  00B6               	movwf	___fttol@lval+1
  2878  0FA9  082E               	movf	___fttol@f1+2,w
  2879  0FAA  00B7               	movwf	___fttol@lval+2
  2880  0FAB  01B8               	clrf	___fttol@lval+3
  2881  0FAC  308E               	movlw	142
  2882  0FAD  02B9               	subwf	___fttol@exp1,f
  2883  0FAE  1FB9               	btfss	___fttol@exp1,7
  2884  0FAF  2FCE               	goto	l1527
  2885  0FB0  0839               	movf	___fttol@exp1,w
  2886  0FB1  3A80               	xorlw	128
  2887  0FB2  3E8F               	addlw	143
  2888  0FB3  1803               	skipnc
  2889  0FB4  2FBE               	goto	l1525
  2890  0FB5  3000               	movlw	0
  2891  0FB6  00AF               	movwf	?___fttol+3
  2892  0FB7  3000               	movlw	0
  2893  0FB8  00AE               	movwf	?___fttol+2
  2894  0FB9  3000               	movlw	0
  2895  0FBA  00AD               	movwf	?___fttol+1
  2896  0FBB  3000               	movlw	0
  2897  0FBC  00AC               	movwf	?___fttol
  2898  0FBD  0008               	return
  2899  0FBE                     l1525:	
  2900  0FBE  3001               	movlw	1
  2901  0FBF                     u1975:	
  2902  0FBF  1003               	clrc
  2903  0FC0  0CB8               	rrf	___fttol@lval+3,f
  2904  0FC1  0CB7               	rrf	___fttol@lval+2,f
  2905  0FC2  0CB6               	rrf	___fttol@lval+1,f
  2906  0FC3  0CB5               	rrf	___fttol@lval,f
  2907  0FC4  3EFF               	addlw	-1
  2908  0FC5  1D03               	skipz
  2909  0FC6  2FBF               	goto	u1975
  2910  0FC7  3001               	movlw	1
  2911  0FC8  00B0               	movwf	??___fttol
  2912  0FC9  0830               	movf	??___fttol,w
  2913  0FCA  07B9               	addwf	___fttol@exp1,f
  2914  0FCB  1903               	btfsc	3,2
  2915  0FCC  2FE9               	goto	l1535
  2916  0FCD  2FBE               	goto	l1525
  2917  0FCE                     l1527:	
  2918  0FCE  3018               	movlw	24
  2919  0FCF  0239               	subwf	___fttol@exp1,w
  2920  0FD0  1C03               	skipc
  2921  0FD1  2FE6               	goto	l396
  2922  0FD2  3000               	movlw	0
  2923  0FD3  00AF               	movwf	?___fttol+3
  2924  0FD4  3000               	movlw	0
  2925  0FD5  00AE               	movwf	?___fttol+2
  2926  0FD6  3000               	movlw	0
  2927  0FD7  00AD               	movwf	?___fttol+1
  2928  0FD8  3000               	movlw	0
  2929  0FD9  00AC               	movwf	?___fttol
  2930  0FDA  0008               	return
  2931  0FDB                     l1533:	
  2932  0FDB  3001               	movlw	1
  2933  0FDC  00B0               	movwf	??___fttol
  2934  0FDD                     u2005:	
  2935  0FDD  1003               	clrc
  2936  0FDE  0DB5               	rlf	___fttol@lval,f
  2937  0FDF  0DB6               	rlf	___fttol@lval+1,f
  2938  0FE0  0DB7               	rlf	___fttol@lval+2,f
  2939  0FE1  0DB8               	rlf	___fttol@lval+3,f
  2940  0FE2  0BB0               	decfsz	??___fttol,f
  2941  0FE3  2FDD               	goto	u2005
  2942  0FE4  3001               	movlw	1
  2943  0FE5  02B9               	subwf	___fttol@exp1,f
  2944  0FE6                     l396:	
  2945  0FE6  0839               	movf	___fttol@exp1,w
  2946  0FE7  1D03               	btfss	3,2
  2947  0FE8  2FDB               	goto	l1533
  2948  0FE9                     l1535:	
  2949  0FE9  0834               	movf	___fttol@sign1,w
  2950  0FEA  1903               	btfsc	3,2
  2951  0FEB  2FF7               	goto	l1539
  2952  0FEC  09B5               	comf	___fttol@lval,f
  2953  0FED  09B6               	comf	___fttol@lval+1,f
  2954  0FEE  09B7               	comf	___fttol@lval+2,f
  2955  0FEF  09B8               	comf	___fttol@lval+3,f
  2956  0FF0  0AB5               	incf	___fttol@lval,f
  2957  0FF1  1903               	skipnz
  2958  0FF2  0AB6               	incf	___fttol@lval+1,f
  2959  0FF3  1903               	skipnz
  2960  0FF4  0AB7               	incf	___fttol@lval+2,f
  2961  0FF5  1903               	skipnz
  2962  0FF6  0AB8               	incf	___fttol@lval+3,f
  2963  0FF7                     l1539:	
  2964  0FF7  0838               	movf	___fttol@lval+3,w
  2965  0FF8  00AF               	movwf	?___fttol+3
  2966  0FF9  0837               	movf	___fttol@lval+2,w
  2967  0FFA  00AE               	movwf	?___fttol+2
  2968  0FFB  0836               	movf	___fttol@lval+1,w
  2969  0FFC  00AD               	movwf	?___fttol+1
  2970  0FFD  0835               	movf	___fttol@lval,w
  2971  0FFE  00AC               	movwf	?___fttol
  2972  0FFF  0008               	return
  2973  1000                     __end_of___fttol:	
  2974                           
  2975                           	psect	text11
  2976  079F                     __ptext11:	
  2977 ;; *************** function ___ftge *****************
  2978 ;; Defined at:
  2979 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  ff1             3    0[BANK0 ] float 
  2982 ;;  ff2             3    3[BANK0 ] float 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;		None               void
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2994 ;;      Params:         0       6       0       0       0
  2995 ;;      Locals:         0       0       0       0       0
  2996 ;;      Temps:          0       6       0       0       0
  2997 ;;      Totals:         0      12       0       0       0
  2998 ;;Total ram usage:       12 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    1
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_pow
  3005 ;;		_exp
  3006 ;;		_floor
  3007 ;;		_ldexp
  3008 ;;		_log
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           
  3013                           ;psect for function ___ftge
  3014  079F                     ___ftge:	
  3015                           
  3016                           ;incstack = 0
  3017                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3018  079F  1283               	bcf	3,5	;RP0=0, select bank0
  3019  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  3020  07A1  1FA2               	btfss	___ftge@ff1+2,7
  3021  07A2  2FC8               	goto	l1435
  3022  07A3  3000               	movlw	0
  3023  07A4  00A6               	movwf	??___ftge
  3024  07A5  3000               	movlw	0
  3025  07A6  00A7               	movwf	??___ftge+1
  3026  07A7  3080               	movlw	128
  3027  07A8  00A8               	movwf	??___ftge+2
  3028  07A9  0920               	comf	___ftge@ff1,w
  3029  07AA  00A9               	movwf	??___ftge+3
  3030  07AB  0921               	comf	___ftge@ff1+1,w
  3031  07AC  00AA               	movwf	??___ftge+4
  3032  07AD  0922               	comf	___ftge@ff1+2,w
  3033  07AE  00AB               	movwf	??___ftge+5
  3034  07AF  0AA9               	incf	??___ftge+3,f
  3035  07B0  1903               	skipnz
  3036  07B1  0AAA               	incf	??___ftge+4,f
  3037  07B2  1903               	skipnz
  3038  07B3  0AAB               	incf	??___ftge+5,f
  3039  07B4  0829               	movf	??___ftge+3,w
  3040  07B5  07A6               	addwf	??___ftge,f
  3041  07B6  082A               	movf	??___ftge+4,w
  3042  07B7  1803               	skipnc
  3043  07B8  0F2A               	incfsz	??___ftge+4,w
  3044  07B9  2FBB               	goto	u1751
  3045  07BA  2FBC               	goto	u1752
  3046  07BB                     u1751:	
  3047  07BB  07A7               	addwf	??___ftge+1,f
  3048  07BC                     u1752:	
  3049  07BC  082B               	movf	??___ftge+5,w
  3050  07BD  1803               	skipnc
  3051  07BE  0F2B               	incfsz	??___ftge+5,w
  3052  07BF  2FC1               	goto	u1753
  3053  07C0  2FC2               	goto	u1754
  3054  07C1                     u1753:	
  3055  07C1  07A8               	addwf	??___ftge+2,f
  3056  07C2                     u1754:	
  3057  07C2  0826               	movf	??___ftge,w
  3058  07C3  00A0               	movwf	___ftge@ff1
  3059  07C4  0827               	movf	??___ftge+1,w
  3060  07C5  00A1               	movwf	___ftge@ff1+1
  3061  07C6  0828               	movf	??___ftge+2,w
  3062  07C7  00A2               	movwf	___ftge@ff1+2
  3063  07C8                     l1435:	
  3064  07C8  1FA5               	btfss	___ftge@ff2+2,7
  3065  07C9  2FEF               	goto	l1439
  3066  07CA  3000               	movlw	0
  3067  07CB  00A6               	movwf	??___ftge
  3068  07CC  3000               	movlw	0
  3069  07CD  00A7               	movwf	??___ftge+1
  3070  07CE  3080               	movlw	128
  3071  07CF  00A8               	movwf	??___ftge+2
  3072  07D0  0923               	comf	___ftge@ff2,w
  3073  07D1  00A9               	movwf	??___ftge+3
  3074  07D2  0924               	comf	___ftge@ff2+1,w
  3075  07D3  00AA               	movwf	??___ftge+4
  3076  07D4  0925               	comf	___ftge@ff2+2,w
  3077  07D5  00AB               	movwf	??___ftge+5
  3078  07D6  0AA9               	incf	??___ftge+3,f
  3079  07D7  1903               	skipnz
  3080  07D8  0AAA               	incf	??___ftge+4,f
  3081  07D9  1903               	skipnz
  3082  07DA  0AAB               	incf	??___ftge+5,f
  3083  07DB  0829               	movf	??___ftge+3,w
  3084  07DC  07A6               	addwf	??___ftge,f
  3085  07DD  082A               	movf	??___ftge+4,w
  3086  07DE  1803               	skipnc
  3087  07DF  0F2A               	incfsz	??___ftge+4,w
  3088  07E0  2FE2               	goto	u1771
  3089  07E1  2FE3               	goto	u1772
  3090  07E2                     u1771:	
  3091  07E2  07A7               	addwf	??___ftge+1,f
  3092  07E3                     u1772:	
  3093  07E3  082B               	movf	??___ftge+5,w
  3094  07E4  1803               	skipnc
  3095  07E5  0F2B               	incfsz	??___ftge+5,w
  3096  07E6  2FE8               	goto	u1773
  3097  07E7  2FE9               	goto	u1774
  3098  07E8                     u1773:	
  3099  07E8  07A8               	addwf	??___ftge+2,f
  3100  07E9                     u1774:	
  3101  07E9  0826               	movf	??___ftge,w
  3102  07EA  00A3               	movwf	___ftge@ff2
  3103  07EB  0827               	movf	??___ftge+1,w
  3104  07EC  00A4               	movwf	___ftge@ff2+1
  3105  07ED  0828               	movf	??___ftge+2,w
  3106  07EE  00A5               	movwf	___ftge@ff2+2
  3107  07EF                     l1439:	
  3108  07EF  3080               	movlw	128
  3109  07F0  06A2               	xorwf	___ftge@ff1+2,f
  3110  07F1  3080               	movlw	128
  3111  07F2  06A5               	xorwf	___ftge@ff2+2,f
  3112  07F3  0825               	movf	___ftge@ff2+2,w
  3113  07F4  0222               	subwf	___ftge@ff1+2,w
  3114  07F5  1D03               	skipz
  3115  07F6  0008               	return
  3116  07F7  0824               	movf	___ftge@ff2+1,w
  3117  07F8  0221               	subwf	___ftge@ff1+1,w
  3118  07F9  1D03               	skipz
  3119  07FA  0008               	return
  3120  07FB  0823               	movf	___ftge@ff2,w
  3121  07FC  0220               	subwf	___ftge@ff1,w
  3122  07FD  0008               	return
  3123  07FE                     __end_of___ftge:	
  3124                           
  3125                           	psect	text12
  3126  0CA8                     __ptext12:	
  3127 ;; *************** function ___altoft *****************
  3128 ;; Defined at:
  3129 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\altoft.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  c               4   26[BANK0 ] long 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  sign            1   33[BANK0 ] unsigned char 
  3134 ;;  exp             1   32[BANK0 ] unsigned char 
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  3   26[BANK0 ] float 
  3137 ;; Registers used:
  3138 ;;		wreg, status,2, status,0, pclath, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3144 ;;      Params:         0       4       0       0       0
  3145 ;;      Locals:         0       2       0       0       0
  3146 ;;      Temps:          0       2       0       0       0
  3147 ;;      Totals:         0       8       0       0       0
  3148 ;;Total ram usage:        8 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; Hardware stack levels required when called:    2
  3151 ;; This function calls:
  3152 ;;		___ftpack
  3153 ;; This function is called by:
  3154 ;;		_floor
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           
  3159                           ;psect for function ___altoft
  3160  0CA8                     ___altoft:	
  3161                           
  3162                           ;incstack = 0
  3163                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  3164  0CA8  1283               	bcf	3,5	;RP0=0, select bank0
  3165  0CA9  1303               	bcf	3,6	;RP1=0, select bank0
  3166  0CAA  01C1               	clrf	___altoft@sign
  3167  0CAB  308E               	movlw	142
  3168  0CAC  00BE               	movwf	??___altoft
  3169  0CAD  083E               	movf	??___altoft,w
  3170  0CAE  00C0               	movwf	___altoft@exp
  3171  0CAF  1FBD               	btfss	___altoft@c+3,7
  3172  0CB0  2CBE               	goto	l2013
  3173  0CB1  09BA               	comf	___altoft@c,f
  3174  0CB2  09BB               	comf	___altoft@c+1,f
  3175  0CB3  09BC               	comf	___altoft@c+2,f
  3176  0CB4  09BD               	comf	___altoft@c+3,f
  3177  0CB5  0ABA               	incf	___altoft@c,f
  3178  0CB6  1903               	skipnz
  3179  0CB7  0ABB               	incf	___altoft@c+1,f
  3180  0CB8  1903               	skipnz
  3181  0CB9  0ABC               	incf	___altoft@c+2,f
  3182  0CBA  1903               	skipnz
  3183  0CBB  0ABD               	incf	___altoft@c+3,f
  3184  0CBC  01C1               	clrf	___altoft@sign
  3185  0CBD  0AC1               	incf	___altoft@sign,f
  3186  0CBE                     l2013:	
  3187  0CBE  30FF               	movlw	255
  3188  0CBF  053D               	andwf	___altoft@c+3,w
  3189  0CC0  1903               	btfsc	3,2
  3190  0CC1  2CD0               	goto	l2015
  3191  0CC2  3001               	movlw	1
  3192  0CC3                     u2805:	
  3193  0CC3  1003               	clrc
  3194  0CC4  0CBD               	rrf	___altoft@c+3,f
  3195  0CC5  0CBC               	rrf	___altoft@c+2,f
  3196  0CC6  0CBB               	rrf	___altoft@c+1,f
  3197  0CC7  0CBA               	rrf	___altoft@c,f
  3198  0CC8  3EFF               	addlw	-1
  3199  0CC9  1D03               	skipz
  3200  0CCA  2CC3               	goto	u2805
  3201  0CCB  3001               	movlw	1
  3202  0CCC  00BE               	movwf	??___altoft
  3203  0CCD  083E               	movf	??___altoft,w
  3204  0CCE  07C0               	addwf	___altoft@exp,f
  3205  0CCF  2CBE               	goto	l2013
  3206  0CD0                     l2015:	
  3207  0CD0  083A               	movf	___altoft@c,w
  3208  0CD1  00A0               	movwf	___ftpack@arg
  3209  0CD2  083B               	movf	___altoft@c+1,w
  3210  0CD3  00A1               	movwf	___ftpack@arg+1
  3211  0CD4  083C               	movf	___altoft@c+2,w
  3212  0CD5  00A2               	movwf	___ftpack@arg+2
  3213  0CD6  0840               	movf	___altoft@exp,w
  3214  0CD7  00BE               	movwf	??___altoft
  3215  0CD8  083E               	movf	??___altoft,w
  3216  0CD9  00A3               	movwf	___ftpack@exp
  3217  0CDA  0841               	movf	___altoft@sign,w
  3218  0CDB  00BF               	movwf	??___altoft+1
  3219  0CDC  083F               	movf	??___altoft+1,w
  3220  0CDD  00A4               	movwf	___ftpack@sign
  3221  0CDE  120A  158A  2609   	fcall	___ftpack
  3222  0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  3223  0CE2  1303               	bcf	3,6	;RP1=0, select bank0
  3224  0CE3  0820               	movf	?___ftpack,w
  3225  0CE4  00BA               	movwf	?___altoft
  3226  0CE5  0821               	movf	?___ftpack+1,w
  3227  0CE6  00BB               	movwf	?___altoft+1
  3228  0CE7  0822               	movf	?___ftpack+2,w
  3229  0CE8  00BC               	movwf	?___altoft+2
  3230  0CE9  0008               	return
  3231  0CEA                     __end_of___altoft:	
  3232                           
  3233                           	psect	text13
  3234  0E77                     __ptext13:	
  3235 ;; *************** function _eval_poly *****************
  3236 ;; Defined at:
  3237 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\evalpoly.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  x               3   43[BANK0 ] float 
  3240 ;;  d               1   46[BANK0 ] PTR const 
  3241 ;;		 -> log@coeff(27), exp@coeff(30), 
  3242 ;;  n               2   47[BANK0 ] int 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  res             3   50[BANK0 ] int 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  3   43[BANK0 ] int 
  3247 ;; Registers used:
  3248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3254 ;;      Params:         0       6       0       0       0
  3255 ;;      Locals:         0       3       0       0       0
  3256 ;;      Temps:          0       1       0       0       0
  3257 ;;      Totals:         0      10       0       0       0
  3258 ;;Total ram usage:       10 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:    3
  3261 ;; This function calls:
  3262 ;;		___bmul
  3263 ;;		___ftadd
  3264 ;;		___ftmul
  3265 ;; This function is called by:
  3266 ;;		_exp
  3267 ;;		_log
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           
  3272                           ;psect for function _eval_poly
  3273  0E77                     _eval_poly:	
  3274                           
  3275                           ;incstack = 0
  3276                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3277  0E77  3003               	movlw	3
  3278  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  3279  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  3280  0E7A  00D1               	movwf	??_eval_poly
  3281  0E7B  0851               	movf	??_eval_poly,w
  3282  0E7C  00A0               	movwf	___bmul@multiplicand
  3283  0E7D  084F               	movf	eval_poly@n,w
  3284  0E7E  120A  158A  239E  120A  158A  	fcall	___bmul
  3285  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  3286  0E84  1303               	bcf	3,6	;RP1=0, select bank0
  3287  0E85  074E               	addwf	eval_poly@d,w
  3288  0E86  0084               	movwf	4
  3289  0E87  120A  158A  2000  120A  158A  	fcall	stringdir
  3290  0E8C  00D2               	movwf	eval_poly@res
  3291  0E8D  120A  158A  2000  120A  158A  	fcall	stringdir
  3292  0E92  00D3               	movwf	eval_poly@res+1
  3293  0E93  120A  158A  2000  120A  158A  	fcall	stringdir
  3294  0E98                     L2:	
  3295  0E98  00D4               	movwf	eval_poly@res+2
  3296  0E99  084F               	movf	eval_poly@n,w
  3297  0E9A  0450               	iorwf	eval_poly@n+1,w
  3298  0E9B  1903               	btfsc	3,2
  3299  0E9C  2EE9               	goto	l2263
  3300  0E9D  3003               	movlw	3
  3301  0E9E  00D1               	movwf	??_eval_poly
  3302  0E9F  0851               	movf	??_eval_poly,w
  3303  0EA0  00A0               	movwf	___bmul@multiplicand
  3304  0EA1  30FF               	movlw	255
  3305  0EA2  07CF               	addwf	eval_poly@n,f
  3306  0EA3  1803               	skipnc
  3307  0EA4  0AD0               	incf	eval_poly@n+1,f
  3308  0EA5  30FF               	movlw	255
  3309  0EA6  07D0               	addwf	eval_poly@n+1,f
  3310  0EA7  084F               	movf	eval_poly@n,w
  3311  0EA8  120A  158A  239E  120A  158A  	fcall	___bmul
  3312  0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  3314  0EAF  074E               	addwf	eval_poly@d,w
  3315  0EB0  0084               	movwf	4
  3316  0EB1  120A  158A  2000  120A  158A  	fcall	stringdir
  3317  0EB6  00BE               	movwf	___ftadd@f1
  3318  0EB7  120A  158A  2000  120A  158A  	fcall	stringdir
  3319  0EBC  00BF               	movwf	___ftadd@f1+1
  3320  0EBD  120A  158A  2000  120A  158A  	fcall	stringdir
  3321  0EC2  00C0               	movwf	___ftadd@f1+2
  3322  0EC3  0852               	movf	eval_poly@res,w
  3323  0EC4  00AE               	movwf	___ftmul@f1
  3324  0EC5  0853               	movf	eval_poly@res+1,w
  3325  0EC6  00AF               	movwf	___ftmul@f1+1
  3326  0EC7  0854               	movf	eval_poly@res+2,w
  3327  0EC8  00B0               	movwf	___ftmul@f1+2
  3328  0EC9  084B               	movf	eval_poly@x,w
  3329  0ECA  00B1               	movwf	___ftmul@f2
  3330  0ECB  084C               	movf	eval_poly@x+1,w
  3331  0ECC  00B2               	movwf	___ftmul@f2+1
  3332  0ECD  084D               	movf	eval_poly@x+2,w
  3333  0ECE  00B3               	movwf	___ftmul@f2+2
  3334  0ECF  120A  118A  24B3  120A  158A  	fcall	___ftmul
  3335  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  3336  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  3337  0ED6  082E               	movf	?___ftmul,w
  3338  0ED7  00C1               	movwf	___ftadd@f2
  3339  0ED8  082F               	movf	?___ftmul+1,w
  3340  0ED9  00C2               	movwf	___ftadd@f2+1
  3341  0EDA  0830               	movf	?___ftmul+2,w
  3342  0EDB  00C3               	movwf	___ftadd@f2+2
  3343  0EDC  120A  118A  22CE  120A  158A  	fcall	___ftadd
  3344  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3345  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  3346  0EE3  083E               	movf	?___ftadd,w
  3347  0EE4  00D2               	movwf	eval_poly@res
  3348  0EE5  083F               	movf	?___ftadd+1,w
  3349  0EE6  00D3               	movwf	eval_poly@res+1
  3350  0EE7  0840               	movf	?___ftadd+2,w
  3351  0EE8  2E98               	goto	L2
  3352  0EE9                     l2263:	
  3353  0EE9  0852               	movf	eval_poly@res,w
  3354  0EEA  00CB               	movwf	?_eval_poly
  3355  0EEB  0853               	movf	eval_poly@res+1,w
  3356  0EEC  00CC               	movwf	?_eval_poly+1
  3357  0EED  0854               	movf	eval_poly@res+2,w
  3358  0EEE  00CD               	movwf	?_eval_poly+2
  3359  0EEF  0008               	return
  3360  0EF0                     __end_of_eval_poly:	
  3361                           
  3362                           	psect	text14
  3363  04B3                     __ptext14:	
  3364 ;; *************** function ___ftmul *****************
  3365 ;; Defined at:
  3366 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  f1              3   14[BANK0 ] float 
  3369 ;;  f2              3   17[BANK0 ] float 
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  3372 ;;  sign            1   29[BANK0 ] unsigned char 
  3373 ;;  cntr            1   28[BANK0 ] unsigned char 
  3374 ;;  exp             1   24[BANK0 ] unsigned char 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  3   14[BANK0 ] float 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0, pclath, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3384 ;;      Params:         0       6       0       0       0
  3385 ;;      Locals:         0       6       0       0       0
  3386 ;;      Temps:          0       4       0       0       0
  3387 ;;      Totals:         0      16       0       0       0
  3388 ;;Total ram usage:       16 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    2
  3391 ;; This function calls:
  3392 ;;		___ftpack
  3393 ;; This function is called by:
  3394 ;;		_pow
  3395 ;;		_exp
  3396 ;;		_log
  3397 ;;		_eval_poly
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           
  3402                           ;psect for function ___ftmul
  3403  04B3                     ___ftmul:	
  3404                           
  3405                           ;incstack = 0
  3406                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3407  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  3408  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  3409  04B5  082E               	movf	___ftmul@f1,w
  3410  04B6  00B4               	movwf	??___ftmul
  3411  04B7  082F               	movf	___ftmul@f1+1,w
  3412  04B8  00B5               	movwf	??___ftmul+1
  3413  04B9  0830               	movf	___ftmul@f1+2,w
  3414  04BA  00B6               	movwf	??___ftmul+2
  3415  04BB  1003               	clrc
  3416  04BC  0D35               	rlf	??___ftmul+1,w
  3417  04BD  0D36               	rlf	??___ftmul+2,w
  3418  04BE  00B7               	movwf	??___ftmul+3
  3419  04BF  0837               	movf	??___ftmul+3,w
  3420  04C0  00B8               	movwf	___ftmul@exp
  3421  04C1  0838               	movf	___ftmul@exp,w
  3422  04C2  1D03               	btfss	3,2
  3423  04C3  2CCB               	goto	l2095
  3424  04C4  3000               	movlw	0
  3425  04C5  00AE               	movwf	?___ftmul
  3426  04C6  3000               	movlw	0
  3427  04C7  00AF               	movwf	?___ftmul+1
  3428  04C8  3000               	movlw	0
  3429  04C9  00B0               	movwf	?___ftmul+2
  3430  04CA  0008               	return
  3431  04CB                     l2095:	
  3432  04CB  0831               	movf	___ftmul@f2,w
  3433  04CC  00B4               	movwf	??___ftmul
  3434  04CD  0832               	movf	___ftmul@f2+1,w
  3435  04CE  00B5               	movwf	??___ftmul+1
  3436  04CF  0833               	movf	___ftmul@f2+2,w
  3437  04D0  00B6               	movwf	??___ftmul+2
  3438  04D1  1003               	clrc
  3439  04D2  0D35               	rlf	??___ftmul+1,w
  3440  04D3  0D36               	rlf	??___ftmul+2,w
  3441  04D4  00B7               	movwf	??___ftmul+3
  3442  04D5  0837               	movf	??___ftmul+3,w
  3443  04D6  00BD               	movwf	___ftmul@sign
  3444  04D7  083D               	movf	___ftmul@sign,w
  3445  04D8  1D03               	btfss	3,2
  3446  04D9  2CE1               	goto	l2101
  3447  04DA  3000               	movlw	0
  3448  04DB  00AE               	movwf	?___ftmul
  3449  04DC  3000               	movlw	0
  3450  04DD  00AF               	movwf	?___ftmul+1
  3451  04DE  3000               	movlw	0
  3452  04DF  00B0               	movwf	?___ftmul+2
  3453  04E0  0008               	return
  3454  04E1                     l2101:	
  3455  04E1  083D               	movf	___ftmul@sign,w
  3456  04E2  3E7B               	addlw	123
  3457  04E3  00B4               	movwf	??___ftmul
  3458  04E4  0834               	movf	??___ftmul,w
  3459  04E5  07B8               	addwf	___ftmul@exp,f
  3460  04E6  082E               	movf	___ftmul@f1,w
  3461  04E7  00B4               	movwf	??___ftmul
  3462  04E8  082F               	movf	___ftmul@f1+1,w
  3463  04E9  00B5               	movwf	??___ftmul+1
  3464  04EA  0830               	movf	___ftmul@f1+2,w
  3465  04EB  00B6               	movwf	??___ftmul+2
  3466  04EC  3010               	movlw	16
  3467  04ED                     u3085:	
  3468  04ED  1003               	clrc
  3469  04EE  0CB6               	rrf	??___ftmul+2,f
  3470  04EF  0CB5               	rrf	??___ftmul+1,f
  3471  04F0  0CB4               	rrf	??___ftmul,f
  3472  04F1  3EFF               	addlw	-1
  3473  04F2  1D03               	skipz
  3474  04F3  2CED               	goto	u3085
  3475  04F4  0834               	movf	??___ftmul,w
  3476  04F5  00B7               	movwf	??___ftmul+3
  3477  04F6  0837               	movf	??___ftmul+3,w
  3478  04F7  00BD               	movwf	___ftmul@sign
  3479  04F8  0831               	movf	___ftmul@f2,w
  3480  04F9  00B4               	movwf	??___ftmul
  3481  04FA  0832               	movf	___ftmul@f2+1,w
  3482  04FB  00B5               	movwf	??___ftmul+1
  3483  04FC  0833               	movf	___ftmul@f2+2,w
  3484  04FD  00B6               	movwf	??___ftmul+2
  3485  04FE  3010               	movlw	16
  3486  04FF                     u3095:	
  3487  04FF  1003               	clrc
  3488  0500  0CB6               	rrf	??___ftmul+2,f
  3489  0501  0CB5               	rrf	??___ftmul+1,f
  3490  0502  0CB4               	rrf	??___ftmul,f
  3491  0503  3EFF               	addlw	-1
  3492  0504  1D03               	skipz
  3493  0505  2CFF               	goto	u3095
  3494  0506  0834               	movf	??___ftmul,w
  3495  0507  00B7               	movwf	??___ftmul+3
  3496  0508  0837               	movf	??___ftmul+3,w
  3497  0509  06BD               	xorwf	___ftmul@sign,f
  3498  050A  3080               	movlw	128
  3499  050B  00B4               	movwf	??___ftmul
  3500  050C  0834               	movf	??___ftmul,w
  3501  050D  05BD               	andwf	___ftmul@sign,f
  3502  050E  17AF               	bsf	___ftmul@f1+1,7
  3503  050F  17B2               	bsf	___ftmul@f2+1,7
  3504  0510  30FF               	movlw	255
  3505  0511  05B1               	andwf	___ftmul@f2,f
  3506  0512  30FF               	movlw	255
  3507  0513  05B2               	andwf	___ftmul@f2+1,f
  3508  0514  3000               	movlw	0
  3509  0515  05B3               	andwf	___ftmul@f2+2,f
  3510  0516  3000               	movlw	0
  3511  0517  00B9               	movwf	___ftmul@f3_as_product
  3512  0518  3000               	movlw	0
  3513  0519  00BA               	movwf	___ftmul@f3_as_product+1
  3514  051A  3000               	movlw	0
  3515  051B  00BB               	movwf	___ftmul@f3_as_product+2
  3516  051C  3007               	movlw	7
  3517  051D  00B4               	movwf	??___ftmul
  3518  051E  0834               	movf	??___ftmul,w
  3519  051F  00BC               	movwf	___ftmul@cntr
  3520  0520                     l2113:	
  3521  0520  1C2E               	btfss	___ftmul@f1,0
  3522  0521  2D30               	goto	l2117
  3523  0522  0831               	movf	___ftmul@f2,w
  3524  0523  07B9               	addwf	___ftmul@f3_as_product,f
  3525  0524  0832               	movf	___ftmul@f2+1,w
  3526  0525  1103               	clrz
  3527  0526  1803               	skipnc
  3528  0527  0A32               	incf	___ftmul@f2+1,w
  3529  0528  1D03               	btfss	3,2
  3530  0529  07BA               	addwf	___ftmul@f3_as_product+1,f
  3531  052A  0833               	movf	___ftmul@f2+2,w
  3532  052B  1103               	clrz
  3533  052C  1803               	skipnc
  3534  052D  0A33               	incf	___ftmul@f2+2,w
  3535  052E  1D03               	btfss	3,2
  3536  052F  07BB               	addwf	___ftmul@f3_as_product+2,f
  3537  0530                     l2117:	
  3538  0530  3001               	movlw	1
  3539  0531                     u3125:	
  3540  0531  1003               	clrc
  3541  0532  0CB0               	rrf	___ftmul@f1+2,f
  3542  0533  0CAF               	rrf	___ftmul@f1+1,f
  3543  0534  0CAE               	rrf	___ftmul@f1,f
  3544  0535  3EFF               	addlw	-1
  3545  0536  1D03               	skipz
  3546  0537  2D31               	goto	u3125
  3547  0538  3001               	movlw	1
  3548  0539                     u3135:	
  3549  0539  1003               	clrc
  3550  053A  0DB1               	rlf	___ftmul@f2,f
  3551  053B  0DB2               	rlf	___ftmul@f2+1,f
  3552  053C  0DB3               	rlf	___ftmul@f2+2,f
  3553  053D  3EFF               	addlw	-1
  3554  053E  1D03               	skipz
  3555  053F  2D39               	goto	u3135
  3556  0540  3001               	movlw	1
  3557  0541  02BC               	subwf	___ftmul@cntr,f
  3558  0542  1D03               	btfss	3,2
  3559  0543  2D20               	goto	l2113
  3560  0544  3009               	movlw	9
  3561  0545  00B4               	movwf	??___ftmul
  3562  0546  0834               	movf	??___ftmul,w
  3563  0547  00BC               	movwf	___ftmul@cntr
  3564  0548                     l2125:	
  3565  0548  1C2E               	btfss	___ftmul@f1,0
  3566  0549  2D58               	goto	l2129
  3567  054A  0831               	movf	___ftmul@f2,w
  3568  054B  07B9               	addwf	___ftmul@f3_as_product,f
  3569  054C  0832               	movf	___ftmul@f2+1,w
  3570  054D  1103               	clrz
  3571  054E  1803               	skipnc
  3572  054F  0A32               	incf	___ftmul@f2+1,w
  3573  0550  1D03               	btfss	3,2
  3574  0551  07BA               	addwf	___ftmul@f3_as_product+1,f
  3575  0552  0833               	movf	___ftmul@f2+2,w
  3576  0553  1103               	clrz
  3577  0554  1803               	skipnc
  3578  0555  0A33               	incf	___ftmul@f2+2,w
  3579  0556  1D03               	btfss	3,2
  3580  0557  07BB               	addwf	___ftmul@f3_as_product+2,f
  3581  0558                     l2129:	
  3582  0558  3001               	movlw	1
  3583  0559                     u3175:	
  3584  0559  1003               	clrc
  3585  055A  0CB0               	rrf	___ftmul@f1+2,f
  3586  055B  0CAF               	rrf	___ftmul@f1+1,f
  3587  055C  0CAE               	rrf	___ftmul@f1,f
  3588  055D  3EFF               	addlw	-1
  3589  055E  1D03               	skipz
  3590  055F  2D59               	goto	u3175
  3591  0560  3001               	movlw	1
  3592  0561                     u3185:	
  3593  0561  1003               	clrc
  3594  0562  0CBB               	rrf	___ftmul@f3_as_product+2,f
  3595  0563  0CBA               	rrf	___ftmul@f3_as_product+1,f
  3596  0564  0CB9               	rrf	___ftmul@f3_as_product,f
  3597  0565  3EFF               	addlw	-1
  3598  0566  1D03               	skipz
  3599  0567  2D61               	goto	u3185
  3600  0568  3001               	movlw	1
  3601  0569  02BC               	subwf	___ftmul@cntr,f
  3602  056A  1D03               	btfss	3,2
  3603  056B  2D48               	goto	l2125
  3604  056C  0839               	movf	___ftmul@f3_as_product,w
  3605  056D  00A0               	movwf	___ftpack@arg
  3606  056E  083A               	movf	___ftmul@f3_as_product+1,w
  3607  056F  00A1               	movwf	___ftpack@arg+1
  3608  0570  083B               	movf	___ftmul@f3_as_product+2,w
  3609  0571  00A2               	movwf	___ftpack@arg+2
  3610  0572  0838               	movf	___ftmul@exp,w
  3611  0573  00B4               	movwf	??___ftmul
  3612  0574  0834               	movf	??___ftmul,w
  3613  0575  00A3               	movwf	___ftpack@exp
  3614  0576  083D               	movf	___ftmul@sign,w
  3615  0577  00B5               	movwf	??___ftmul+1
  3616  0578  0835               	movf	??___ftmul+1,w
  3617  0579  00A4               	movwf	___ftpack@sign
  3618  057A  120A  158A  2609   	fcall	___ftpack
  3619  057D  1283               	bcf	3,5	;RP0=0, select bank0
  3620  057E  1303               	bcf	3,6	;RP1=0, select bank0
  3621  057F  0820               	movf	?___ftpack,w
  3622  0580  00AE               	movwf	?___ftmul
  3623  0581  0821               	movf	?___ftpack+1,w
  3624  0582  00AF               	movwf	?___ftmul+1
  3625  0583  0822               	movf	?___ftpack+2,w
  3626  0584  00B0               	movwf	?___ftmul+2
  3627  0585  0008               	return
  3628  0586                     __end_of___ftmul:	
  3629                           
  3630                           	psect	text15
  3631  0B9E                     __ptext15:	
  3632 ;; *************** function ___bmul *****************
  3633 ;; Defined at:
  3634 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul8.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  multiplier      1    wreg     unsigned char 
  3637 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3640 ;;  product         1    2[BANK0 ] unsigned char 
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  1    wreg      unsigned char 
  3643 ;; Registers used:
  3644 ;;		wreg, status,2, status,0
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3650 ;;      Params:         0       1       0       0       0
  3651 ;;      Locals:         0       2       0       0       0
  3652 ;;      Temps:          0       1       0       0       0
  3653 ;;      Totals:         0       4       0       0       0
  3654 ;;Total ram usage:        4 bytes
  3655 ;; Hardware stack levels used:    1
  3656 ;; Hardware stack levels required when called:    1
  3657 ;; This function calls:
  3658 ;;		Nothing
  3659 ;; This function is called by:
  3660 ;;		_eval_poly
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           
  3665                           ;psect for function ___bmul
  3666  0B9E                     ___bmul:	
  3667                           
  3668                           ;incstack = 0
  3669                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3670                           ;___bmul@multiplier stored from wreg
  3671  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  3672  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  3673  0BA0  00A3               	movwf	___bmul@multiplier
  3674  0BA1  01A2               	clrf	___bmul@product
  3675  0BA2                     l1991:	
  3676  0BA2  1C23               	btfss	___bmul@multiplier,0
  3677  0BA3  2BA8               	goto	l1995
  3678  0BA4  0820               	movf	___bmul@multiplicand,w
  3679  0BA5  00A1               	movwf	??___bmul
  3680  0BA6  0821               	movf	??___bmul,w
  3681  0BA7  07A2               	addwf	___bmul@product,f
  3682  0BA8                     l1995:	
  3683  0BA8  1003               	clrc
  3684  0BA9  0DA0               	rlf	___bmul@multiplicand,f
  3685  0BAA  1003               	clrc
  3686  0BAB  0CA3               	rrf	___bmul@multiplier,f
  3687  0BAC  0823               	movf	___bmul@multiplier,w
  3688  0BAD  1D03               	btfss	3,2
  3689  0BAE  2BA2               	goto	l1991
  3690  0BAF  0822               	movf	___bmul@product,w
  3691  0BB0  0008               	return
  3692  0BB1                     __end_of___bmul:	
  3693                           
  3694                           	psect	text16
  3695  0BC9                     __ptext16:	
  3696 ;; *************** function ___ftsub *****************
  3697 ;; Defined at:
  3698 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftsub.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;  f2              3   43[BANK0 ] float 
  3701 ;;  f1              3   46[BANK0 ] float 
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  3   43[BANK0 ] float 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2, status,0, pclath, cstack
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3713 ;;      Params:         0       6       0       0       0
  3714 ;;      Locals:         0       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0
  3716 ;;      Totals:         0       6       0       0       0
  3717 ;;Total ram usage:        6 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    3
  3720 ;; This function calls:
  3721 ;;		___ftadd
  3722 ;; This function is called by:
  3723 ;;		_exp
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           
  3728                           ;psect for function ___ftsub
  3729  0BC9                     ___ftsub:	
  3730                           
  3731                           ;incstack = 0
  3732                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3733  0BC9  1283               	bcf	3,5	;RP0=0, select bank0
  3734  0BCA  1303               	bcf	3,6	;RP1=0, select bank0
  3735  0BCB  084D               	movf	___ftsub@f2+2,w
  3736  0BCC  044C               	iorwf	___ftsub@f2+1,w
  3737  0BCD  044B               	iorwf	___ftsub@f2,w
  3738  0BCE  1903               	skipnz
  3739  0BCF  2BD2               	goto	l2225
  3740  0BD0  3080               	movlw	128
  3741  0BD1  06CD               	xorwf	___ftsub@f2+2,f
  3742  0BD2                     l2225:	
  3743  0BD2  084E               	movf	___ftsub@f1,w
  3744  0BD3  00BE               	movwf	___ftadd@f1
  3745  0BD4  084F               	movf	___ftsub@f1+1,w
  3746  0BD5  00BF               	movwf	___ftadd@f1+1
  3747  0BD6  0850               	movf	___ftsub@f1+2,w
  3748  0BD7  00C0               	movwf	___ftadd@f1+2
  3749  0BD8  084B               	movf	___ftsub@f2,w
  3750  0BD9  00C1               	movwf	___ftadd@f2
  3751  0BDA  084C               	movf	___ftsub@f2+1,w
  3752  0BDB  00C2               	movwf	___ftadd@f2+1
  3753  0BDC  084D               	movf	___ftsub@f2+2,w
  3754  0BDD  00C3               	movwf	___ftadd@f2+2
  3755  0BDE  120A  118A  22CE   	fcall	___ftadd
  3756  0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  3757  0BE2  1303               	bcf	3,6	;RP1=0, select bank0
  3758  0BE3  083E               	movf	?___ftadd,w
  3759  0BE4  00CB               	movwf	?___ftsub
  3760  0BE5  083F               	movf	?___ftadd+1,w
  3761  0BE6  00CC               	movwf	?___ftsub+1
  3762  0BE7  0840               	movf	?___ftadd+2,w
  3763  0BE8  00CD               	movwf	?___ftsub+2
  3764  0BE9  0008               	return
  3765  0BEA                     __end_of___ftsub:	
  3766                           
  3767                           	psect	text17
  3768  02CE                     __ptext17:	
  3769 ;; *************** function ___ftadd *****************
  3770 ;; Defined at:
  3771 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  f1              3   30[BANK0 ] float 
  3774 ;;  f2              3   33[BANK0 ] float 
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  exp1            1   42[BANK0 ] unsigned char 
  3777 ;;  exp2            1   41[BANK0 ] unsigned char 
  3778 ;;  sign            1   40[BANK0 ] unsigned char 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  3   30[BANK0 ] float 
  3781 ;; Registers used:
  3782 ;;		wreg, status,2, status,0, pclath, cstack
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3788 ;;      Params:         0       6       0       0       0
  3789 ;;      Locals:         0       3       0       0       0
  3790 ;;      Temps:          0       4       0       0       0
  3791 ;;      Totals:         0      13       0       0       0
  3792 ;;Total ram usage:       13 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    2
  3795 ;; This function calls:
  3796 ;;		___ftpack
  3797 ;; This function is called by:
  3798 ;;		___ftsub
  3799 ;;		_floor
  3800 ;;		_log
  3801 ;;		_eval_poly
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           
  3806                           ;psect for function ___ftadd
  3807  02CE                     ___ftadd:	
  3808                           
  3809                           ;incstack = 0
  3810                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3811  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  3812  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  3813  02D0  083E               	movf	___ftadd@f1,w
  3814  02D1  00C4               	movwf	??___ftadd
  3815  02D2  083F               	movf	___ftadd@f1+1,w
  3816  02D3  00C5               	movwf	??___ftadd+1
  3817  02D4  0840               	movf	___ftadd@f1+2,w
  3818  02D5  00C6               	movwf	??___ftadd+2
  3819  02D6  1003               	clrc
  3820  02D7  0D45               	rlf	??___ftadd+1,w
  3821  02D8  0D46               	rlf	??___ftadd+2,w
  3822  02D9  00C7               	movwf	??___ftadd+3
  3823  02DA  0847               	movf	??___ftadd+3,w
  3824  02DB  00CA               	movwf	___ftadd@exp1
  3825  02DC  0841               	movf	___ftadd@f2,w
  3826  02DD  00C4               	movwf	??___ftadd
  3827  02DE  0842               	movf	___ftadd@f2+1,w
  3828  02DF  00C5               	movwf	??___ftadd+1
  3829  02E0  0843               	movf	___ftadd@f2+2,w
  3830  02E1  00C6               	movwf	??___ftadd+2
  3831  02E2  1003               	clrc
  3832  02E3  0D45               	rlf	??___ftadd+1,w
  3833  02E4  0D46               	rlf	??___ftadd+2,w
  3834  02E5  00C7               	movwf	??___ftadd+3
  3835  02E6  0847               	movf	??___ftadd+3,w
  3836  02E7  00C9               	movwf	___ftadd@exp2
  3837  02E8  084A               	movf	___ftadd@exp1,w
  3838  02E9  1903               	btfsc	3,2
  3839  02EA  2AF7               	goto	l2025
  3840  02EB  0849               	movf	___ftadd@exp2,w
  3841  02EC  024A               	subwf	___ftadd@exp1,w
  3842  02ED  1803               	skipnc
  3843  02EE  2AFE               	goto	l2029
  3844  02EF  034A               	decf	___ftadd@exp1,w
  3845  02F0  3AFF               	xorlw	255
  3846  02F1  0749               	addwf	___ftadd@exp2,w
  3847  02F2  00C4               	movwf	??___ftadd
  3848  02F3  3019               	movlw	25
  3849  02F4  0244               	subwf	??___ftadd,w
  3850  02F5  1C03               	skipc
  3851  02F6  2AFE               	goto	l2029
  3852  02F7                     l2025:	
  3853  02F7  0841               	movf	___ftadd@f2,w
  3854  02F8  00BE               	movwf	?___ftadd
  3855  02F9  0842               	movf	___ftadd@f2+1,w
  3856  02FA  00BF               	movwf	?___ftadd+1
  3857  02FB  0843               	movf	___ftadd@f2+2,w
  3858  02FC  00C0               	movwf	?___ftadd+2
  3859  02FD  0008               	return
  3860  02FE                     l2029:	
  3861  02FE  0849               	movf	___ftadd@exp2,w
  3862  02FF  1903               	btfsc	3,2
  3863  0300  0008               	return
  3864  0301  084A               	movf	___ftadd@exp1,w
  3865  0302  0249               	subwf	___ftadd@exp2,w
  3866  0303  1803               	skipnc
  3867  0304  2B0D               	goto	l2035
  3868  0305  0349               	decf	___ftadd@exp2,w
  3869  0306  3AFF               	xorlw	255
  3870  0307  074A               	addwf	___ftadd@exp1,w
  3871  0308  00C4               	movwf	??___ftadd
  3872  0309  3019               	movlw	25
  3873  030A  0244               	subwf	??___ftadd,w
  3874  030B  1803               	btfsc	3,0
  3875  030C  0008               	return
  3876  030D                     l2035:	
  3877  030D  3006               	movlw	6
  3878  030E  00C4               	movwf	??___ftadd
  3879  030F  0844               	movf	??___ftadd,w
  3880  0310  00C8               	movwf	___ftadd@sign
  3881  0311  1BC0               	btfsc	___ftadd@f1+2,7
  3882  0312  17C8               	bsf	___ftadd@sign,7
  3883  0313  1BC3               	btfsc	___ftadd@f2+2,7
  3884  0314  1748               	bsf	___ftadd@sign,6
  3885  0315  17BF               	bsf	___ftadd@f1+1,7
  3886  0316  30FF               	movlw	255
  3887  0317  05BE               	andwf	___ftadd@f1,f
  3888  0318  30FF               	movlw	255
  3889  0319  05BF               	andwf	___ftadd@f1+1,f
  3890  031A  3000               	movlw	0
  3891  031B  05C0               	andwf	___ftadd@f1+2,f
  3892  031C  17C2               	bsf	___ftadd@f2+1,7
  3893  031D  30FF               	movlw	255
  3894  031E  05C1               	andwf	___ftadd@f2,f
  3895  031F  30FF               	movlw	255
  3896  0320  05C2               	andwf	___ftadd@f2+1,f
  3897  0321  3000               	movlw	0
  3898  0322  05C3               	andwf	___ftadd@f2+2,f
  3899  0323  0849               	movf	___ftadd@exp2,w
  3900  0324  024A               	subwf	___ftadd@exp1,w
  3901  0325  1803               	skipnc
  3902  0326  2B4D               	goto	l2057
  3903  0327                     l2047:	
  3904  0327  3001               	movlw	1
  3905  0328                     u2915:	
  3906  0328  1003               	clrc
  3907  0329  0DC1               	rlf	___ftadd@f2,f
  3908  032A  0DC2               	rlf	___ftadd@f2+1,f
  3909  032B  0DC3               	rlf	___ftadd@f2+2,f
  3910  032C  3EFF               	addlw	-1
  3911  032D  1D03               	skipz
  3912  032E  2B28               	goto	u2915
  3913  032F  3001               	movlw	1
  3914  0330  02C9               	subwf	___ftadd@exp2,f
  3915  0331  0849               	movf	___ftadd@exp2,w
  3916  0332  064A               	xorwf	___ftadd@exp1,w
  3917  0333  1903               	skipnz
  3918  0334  2B48               	goto	l2055
  3919  0335  3001               	movlw	1
  3920  0336  02C8               	subwf	___ftadd@sign,f
  3921  0337  0848               	movf	___ftadd@sign,w
  3922  0338  3907               	andlw	7
  3923  0339  1903               	btfsc	3,2
  3924  033A  2B48               	goto	l2055
  3925  033B  2B27               	goto	l2047
  3926  033C                     l2053:	
  3927  033C  3001               	movlw	1
  3928  033D                     u2945:	
  3929  033D  1003               	clrc
  3930  033E  0CC0               	rrf	___ftadd@f1+2,f
  3931  033F  0CBF               	rrf	___ftadd@f1+1,f
  3932  0340  0CBE               	rrf	___ftadd@f1,f
  3933  0341  3EFF               	addlw	-1
  3934  0342  1D03               	skipz
  3935  0343  2B3D               	goto	u2945
  3936  0344  3001               	movlw	1
  3937  0345  00C4               	movwf	??___ftadd
  3938  0346  0844               	movf	??___ftadd,w
  3939  0347  07CA               	addwf	___ftadd@exp1,f
  3940  0348                     l2055:	
  3941  0348  084A               	movf	___ftadd@exp1,w
  3942  0349  0649               	xorwf	___ftadd@exp2,w
  3943  034A  1903               	btfsc	3,2
  3944  034B  2B76               	goto	l336
  3945  034C  2B3C               	goto	l2053
  3946  034D                     l2057:	
  3947  034D  084A               	movf	___ftadd@exp1,w
  3948  034E  0249               	subwf	___ftadd@exp2,w
  3949  034F  1803               	skipnc
  3950  0350  2B76               	goto	l336
  3951  0351                     l2059:	
  3952  0351  3001               	movlw	1
  3953  0352                     u2975:	
  3954  0352  1003               	clrc
  3955  0353  0DBE               	rlf	___ftadd@f1,f
  3956  0354  0DBF               	rlf	___ftadd@f1+1,f
  3957  0355  0DC0               	rlf	___ftadd@f1+2,f
  3958  0356  3EFF               	addlw	-1
  3959  0357  1D03               	skipz
  3960  0358  2B52               	goto	u2975
  3961  0359  3001               	movlw	1
  3962  035A  02CA               	subwf	___ftadd@exp1,f
  3963  035B  0849               	movf	___ftadd@exp2,w
  3964  035C  064A               	xorwf	___ftadd@exp1,w
  3965  035D  1903               	skipnz
  3966  035E  2B72               	goto	l2067
  3967  035F  3001               	movlw	1
  3968  0360  02C8               	subwf	___ftadd@sign,f
  3969  0361  0848               	movf	___ftadd@sign,w
  3970  0362  3907               	andlw	7
  3971  0363  1903               	btfsc	3,2
  3972  0364  2B72               	goto	l2067
  3973  0365  2B51               	goto	l2059
  3974  0366                     l2065:	
  3975  0366  3001               	movlw	1
  3976  0367                     u3005:	
  3977  0367  1003               	clrc
  3978  0368  0CC3               	rrf	___ftadd@f2+2,f
  3979  0369  0CC2               	rrf	___ftadd@f2+1,f
  3980  036A  0CC1               	rrf	___ftadd@f2,f
  3981  036B  3EFF               	addlw	-1
  3982  036C  1D03               	skipz
  3983  036D  2B67               	goto	u3005
  3984  036E  3001               	movlw	1
  3985  036F  00C4               	movwf	??___ftadd
  3986  0370  0844               	movf	??___ftadd,w
  3987  0371  07C9               	addwf	___ftadd@exp2,f
  3988  0372                     l2067:	
  3989  0372  084A               	movf	___ftadd@exp1,w
  3990  0373  0649               	xorwf	___ftadd@exp2,w
  3991  0374  1D03               	skipz
  3992  0375  2B66               	goto	l2065
  3993  0376                     l336:	
  3994  0376  1FC8               	btfss	___ftadd@sign,7
  3995  0377  2B88               	goto	l2071
  3996  0378  30FF               	movlw	255
  3997  0379  06BE               	xorwf	___ftadd@f1,f
  3998  037A  30FF               	movlw	255
  3999  037B  06BF               	xorwf	___ftadd@f1+1,f
  4000  037C  30FF               	movlw	255
  4001  037D  06C0               	xorwf	___ftadd@f1+2,f
  4002  037E  3001               	movlw	1
  4003  037F  07BE               	addwf	___ftadd@f1,f
  4004  0380  3000               	movlw	0
  4005  0381  1803               	skipnc
  4006  0382  3001               	movlw	1
  4007  0383  07BF               	addwf	___ftadd@f1+1,f
  4008  0384  3000               	movlw	0
  4009  0385  1803               	skipnc
  4010  0386  3001               	movlw	1
  4011  0387  07C0               	addwf	___ftadd@f1+2,f
  4012  0388                     l2071:	
  4013  0388  1F48               	btfss	___ftadd@sign,6
  4014  0389  2B9A               	goto	l2075
  4015  038A  30FF               	movlw	255
  4016  038B  06C1               	xorwf	___ftadd@f2,f
  4017  038C  30FF               	movlw	255
  4018  038D  06C2               	xorwf	___ftadd@f2+1,f
  4019  038E  30FF               	movlw	255
  4020  038F  06C3               	xorwf	___ftadd@f2+2,f
  4021  0390  3001               	movlw	1
  4022  0391  07C1               	addwf	___ftadd@f2,f
  4023  0392  3000               	movlw	0
  4024  0393  1803               	skipnc
  4025  0394  3001               	movlw	1
  4026  0395  07C2               	addwf	___ftadd@f2+1,f
  4027  0396  3000               	movlw	0
  4028  0397  1803               	skipnc
  4029  0398  3001               	movlw	1
  4030  0399  07C3               	addwf	___ftadd@f2+2,f
  4031  039A                     l2075:	
  4032  039A  01C8               	clrf	___ftadd@sign
  4033  039B  083E               	movf	___ftadd@f1,w
  4034  039C  07C1               	addwf	___ftadd@f2,f
  4035  039D  083F               	movf	___ftadd@f1+1,w
  4036  039E  1103               	clrz
  4037  039F  1803               	skipnc
  4038  03A0  0A3F               	incf	___ftadd@f1+1,w
  4039  03A1  1D03               	btfss	3,2
  4040  03A2  07C2               	addwf	___ftadd@f2+1,f
  4041  03A3  0840               	movf	___ftadd@f1+2,w
  4042  03A4  1103               	clrz
  4043  03A5  1803               	skipnc
  4044  03A6  0A40               	incf	___ftadd@f1+2,w
  4045  03A7  1D03               	btfss	3,2
  4046  03A8  07C3               	addwf	___ftadd@f2+2,f
  4047  03A9  1FC3               	btfss	___ftadd@f2+2,7
  4048  03AA  2BBD               	goto	l2085
  4049  03AB  30FF               	movlw	255
  4050  03AC  06C1               	xorwf	___ftadd@f2,f
  4051  03AD  30FF               	movlw	255
  4052  03AE  06C2               	xorwf	___ftadd@f2+1,f
  4053  03AF  30FF               	movlw	255
  4054  03B0  06C3               	xorwf	___ftadd@f2+2,f
  4055  03B1  3001               	movlw	1
  4056  03B2  07C1               	addwf	___ftadd@f2,f
  4057  03B3  3000               	movlw	0
  4058  03B4  1803               	skipnc
  4059  03B5  3001               	movlw	1
  4060  03B6  07C2               	addwf	___ftadd@f2+1,f
  4061  03B7  3000               	movlw	0
  4062  03B8  1803               	skipnc
  4063  03B9  3001               	movlw	1
  4064  03BA  07C3               	addwf	___ftadd@f2+2,f
  4065  03BB  01C8               	clrf	___ftadd@sign
  4066  03BC  0AC8               	incf	___ftadd@sign,f
  4067  03BD                     l2085:	
  4068  03BD  0841               	movf	___ftadd@f2,w
  4069  03BE  00A0               	movwf	___ftpack@arg
  4070  03BF  0842               	movf	___ftadd@f2+1,w
  4071  03C0  00A1               	movwf	___ftpack@arg+1
  4072  03C1  0843               	movf	___ftadd@f2+2,w
  4073  03C2  00A2               	movwf	___ftpack@arg+2
  4074  03C3  084A               	movf	___ftadd@exp1,w
  4075  03C4  00C4               	movwf	??___ftadd
  4076  03C5  0844               	movf	??___ftadd,w
  4077  03C6  00A3               	movwf	___ftpack@exp
  4078  03C7  0848               	movf	___ftadd@sign,w
  4079  03C8  00C5               	movwf	??___ftadd+1
  4080  03C9  0845               	movf	??___ftadd+1,w
  4081  03CA  00A4               	movwf	___ftpack@sign
  4082  03CB  120A  158A  2609   	fcall	___ftpack
  4083  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  4084  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  4085  03D0  0820               	movf	?___ftpack,w
  4086  03D1  00BE               	movwf	?___ftadd
  4087  03D2  0821               	movf	?___ftpack+1,w
  4088  03D3  00BF               	movwf	?___ftadd+1
  4089  03D4  0822               	movf	?___ftpack+2,w
  4090  03D5  00C0               	movwf	?___ftadd+2
  4091  03D6  0008               	return
  4092  03D7                     __end_of___ftadd:	
  4093                           
  4094                           	psect	text18
  4095  0B94                     __ptext18:	
  4096 ;; *************** function ___ftneg *****************
  4097 ;; Defined at:
  4098 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftneg.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  f1              3    0[BANK0 ] float 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;		None
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  3    0[BANK0 ] float 
  4105 ;; Registers used:
  4106 ;;		wreg
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4112 ;;      Params:         0       3       0       0       0
  4113 ;;      Locals:         0       0       0       0       0
  4114 ;;      Temps:          0       0       0       0       0
  4115 ;;      Totals:         0       3       0       0       0
  4116 ;;Total ram usage:        3 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    1
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_pow
  4123 ;;		_exp
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           
  4128                           ;psect for function ___ftneg
  4129  0B94                     ___ftneg:	
  4130                           
  4131                           ;incstack = 0
  4132                           ; Regs used in ___ftneg: [wreg]
  4133  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  4134  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  4135  0B96  0822               	movf	___ftneg@f1+2,w
  4136  0B97  0421               	iorwf	___ftneg@f1+1,w
  4137  0B98  0420               	iorwf	___ftneg@f1,w
  4138  0B99  1903               	skipnz
  4139  0B9A  0008               	return
  4140  0B9B  3080               	movlw	128
  4141  0B9C  06A2               	xorwf	___ftneg@f1+2,f
  4142  0B9D  0008               	return
  4143  0B9E                     __end_of___ftneg:	
  4144                           
  4145                           	psect	text19
  4146  064E                     __ptext19:	
  4147 ;; *************** function ___ftdiv *****************
  4148 ;; Defined at:
  4149 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  f2              3    8[BANK0 ] float 
  4152 ;;  f1              3   11[BANK0 ] float 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  f3              3   19[BANK0 ] float 
  4155 ;;  sign            1   23[BANK0 ] unsigned char 
  4156 ;;  exp             1   22[BANK0 ] unsigned char 
  4157 ;;  cntr            1   18[BANK0 ] unsigned char 
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  3    8[BANK0 ] float 
  4160 ;; Registers used:
  4161 ;;		wreg, status,2, status,0, pclath, cstack
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4167 ;;      Params:         0       6       0       0       0
  4168 ;;      Locals:         0       6       0       0       0
  4169 ;;      Temps:          0       4       0       0       0
  4170 ;;      Totals:         0      16       0       0       0
  4171 ;;Total ram usage:       16 bytes
  4172 ;; Hardware stack levels used:    1
  4173 ;; Hardware stack levels required when called:    2
  4174 ;; This function calls:
  4175 ;;		___ftpack
  4176 ;; This function is called by:
  4177 ;;		_exp
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181                           
  4182                           ;psect for function ___ftdiv
  4183  064E                     ___ftdiv:	
  4184                           
  4185                           ;incstack = 0
  4186                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4187  064E  1283               	bcf	3,5	;RP0=0, select bank0
  4188  064F  1303               	bcf	3,6	;RP1=0, select bank0
  4189  0650  082B               	movf	___ftdiv@f1,w
  4190  0651  00AE               	movwf	??___ftdiv
  4191  0652  082C               	movf	___ftdiv@f1+1,w
  4192  0653  00AF               	movwf	??___ftdiv+1
  4193  0654  082D               	movf	___ftdiv@f1+2,w
  4194  0655  00B0               	movwf	??___ftdiv+2
  4195  0656  1003               	clrc
  4196  0657  0D2F               	rlf	??___ftdiv+1,w
  4197  0658  0D30               	rlf	??___ftdiv+2,w
  4198  0659  00B1               	movwf	??___ftdiv+3
  4199  065A  0831               	movf	??___ftdiv+3,w
  4200  065B  00B6               	movwf	___ftdiv@exp
  4201  065C  0836               	movf	___ftdiv@exp,w
  4202  065D  1D03               	btfss	3,2
  4203  065E  2E66               	goto	l2177
  4204  065F  3000               	movlw	0
  4205  0660  00A8               	movwf	?___ftdiv
  4206  0661  3000               	movlw	0
  4207  0662  00A9               	movwf	?___ftdiv+1
  4208  0663  3000               	movlw	0
  4209  0664  00AA               	movwf	?___ftdiv+2
  4210  0665  0008               	return
  4211  0666                     l2177:	
  4212  0666  0828               	movf	___ftdiv@f2,w
  4213  0667  00AE               	movwf	??___ftdiv
  4214  0668  0829               	movf	___ftdiv@f2+1,w
  4215  0669  00AF               	movwf	??___ftdiv+1
  4216  066A  082A               	movf	___ftdiv@f2+2,w
  4217  066B  00B0               	movwf	??___ftdiv+2
  4218  066C  1003               	clrc
  4219  066D  0D2F               	rlf	??___ftdiv+1,w
  4220  066E  0D30               	rlf	??___ftdiv+2,w
  4221  066F  00B1               	movwf	??___ftdiv+3
  4222  0670  0831               	movf	??___ftdiv+3,w
  4223  0671  00B7               	movwf	___ftdiv@sign
  4224  0672  0837               	movf	___ftdiv@sign,w
  4225  0673  1D03               	btfss	3,2
  4226  0674  2E7C               	goto	l2183
  4227  0675  3000               	movlw	0
  4228  0676  00A8               	movwf	?___ftdiv
  4229  0677  3000               	movlw	0
  4230  0678  00A9               	movwf	?___ftdiv+1
  4231  0679  3000               	movlw	0
  4232  067A  00AA               	movwf	?___ftdiv+2
  4233  067B  0008               	return
  4234  067C                     l2183:	
  4235  067C  3000               	movlw	0
  4236  067D  00B3               	movwf	___ftdiv@f3
  4237  067E  3000               	movlw	0
  4238  067F  00B4               	movwf	___ftdiv@f3+1
  4239  0680  3000               	movlw	0
  4240  0681  00B5               	movwf	___ftdiv@f3+2
  4241  0682  3089               	movlw	137
  4242  0683  0737               	addwf	___ftdiv@sign,w
  4243  0684  00AE               	movwf	??___ftdiv
  4244  0685  082E               	movf	??___ftdiv,w
  4245  0686  02B6               	subwf	___ftdiv@exp,f
  4246  0687  082B               	movf	___ftdiv@f1,w
  4247  0688  00AE               	movwf	??___ftdiv
  4248  0689  082C               	movf	___ftdiv@f1+1,w
  4249  068A  00AF               	movwf	??___ftdiv+1
  4250  068B  082D               	movf	___ftdiv@f1+2,w
  4251  068C  00B0               	movwf	??___ftdiv+2
  4252  068D  3010               	movlw	16
  4253  068E                     u3245:	
  4254  068E  1003               	clrc
  4255  068F  0CB0               	rrf	??___ftdiv+2,f
  4256  0690  0CAF               	rrf	??___ftdiv+1,f
  4257  0691  0CAE               	rrf	??___ftdiv,f
  4258  0692  3EFF               	addlw	-1
  4259  0693  1D03               	skipz
  4260  0694  2E8E               	goto	u3245
  4261  0695  082E               	movf	??___ftdiv,w
  4262  0696  00B1               	movwf	??___ftdiv+3
  4263  0697  0831               	movf	??___ftdiv+3,w
  4264  0698  00B7               	movwf	___ftdiv@sign
  4265  0699  0828               	movf	___ftdiv@f2,w
  4266  069A  00AE               	movwf	??___ftdiv
  4267  069B  0829               	movf	___ftdiv@f2+1,w
  4268  069C  00AF               	movwf	??___ftdiv+1
  4269  069D  082A               	movf	___ftdiv@f2+2,w
  4270  069E  00B0               	movwf	??___ftdiv+2
  4271  069F  3010               	movlw	16
  4272  06A0                     u3255:	
  4273  06A0  1003               	clrc
  4274  06A1  0CB0               	rrf	??___ftdiv+2,f
  4275  06A2  0CAF               	rrf	??___ftdiv+1,f
  4276  06A3  0CAE               	rrf	??___ftdiv,f
  4277  06A4  3EFF               	addlw	-1
  4278  06A5  1D03               	skipz
  4279  06A6  2EA0               	goto	u3255
  4280  06A7  082E               	movf	??___ftdiv,w
  4281  06A8  00B1               	movwf	??___ftdiv+3
  4282  06A9  0831               	movf	??___ftdiv+3,w
  4283  06AA  06B7               	xorwf	___ftdiv@sign,f
  4284  06AB  3080               	movlw	128
  4285  06AC  00AE               	movwf	??___ftdiv
  4286  06AD  082E               	movf	??___ftdiv,w
  4287  06AE  05B7               	andwf	___ftdiv@sign,f
  4288  06AF  17AC               	bsf	___ftdiv@f1+1,7
  4289  06B0  30FF               	movlw	255
  4290  06B1  05AB               	andwf	___ftdiv@f1,f
  4291  06B2  30FF               	movlw	255
  4292  06B3  05AC               	andwf	___ftdiv@f1+1,f
  4293  06B4  3000               	movlw	0
  4294  06B5  05AD               	andwf	___ftdiv@f1+2,f
  4295  06B6  17A9               	bsf	___ftdiv@f2+1,7
  4296  06B7  30FF               	movlw	255
  4297  06B8  05A8               	andwf	___ftdiv@f2,f
  4298  06B9  30FF               	movlw	255
  4299  06BA  05A9               	andwf	___ftdiv@f2+1,f
  4300  06BB  3000               	movlw	0
  4301  06BC  05AA               	andwf	___ftdiv@f2+2,f
  4302  06BD  3018               	movlw	24
  4303  06BE  00AE               	movwf	??___ftdiv
  4304  06BF  082E               	movf	??___ftdiv,w
  4305  06C0  00B2               	movwf	___ftdiv@cntr
  4306  06C1                     l2197:	
  4307  06C1  3001               	movlw	1
  4308  06C2                     u3265:	
  4309  06C2  1003               	clrc
  4310  06C3  0DB3               	rlf	___ftdiv@f3,f
  4311  06C4  0DB4               	rlf	___ftdiv@f3+1,f
  4312  06C5  0DB5               	rlf	___ftdiv@f3+2,f
  4313  06C6  3EFF               	addlw	-1
  4314  06C7  1D03               	skipz
  4315  06C8  2EC2               	goto	u3265
  4316  06C9  082A               	movf	___ftdiv@f2+2,w
  4317  06CA  022D               	subwf	___ftdiv@f1+2,w
  4318  06CB  1D03               	skipz
  4319  06CC  2ED3               	goto	u3275
  4320  06CD  0829               	movf	___ftdiv@f2+1,w
  4321  06CE  022C               	subwf	___ftdiv@f1+1,w
  4322  06CF  1D03               	skipz
  4323  06D0  2ED3               	goto	u3275
  4324  06D1  0828               	movf	___ftdiv@f2,w
  4325  06D2  022B               	subwf	___ftdiv@f1,w
  4326  06D3                     u3275:	
  4327  06D3  1C03               	skipc
  4328  06D4  2EE0               	goto	l2205
  4329  06D5  0828               	movf	___ftdiv@f2,w
  4330  06D6  02AB               	subwf	___ftdiv@f1,f
  4331  06D7  0829               	movf	___ftdiv@f2+1,w
  4332  06D8  1C03               	skipc
  4333  06D9  0F29               	incfsz	___ftdiv@f2+1,w
  4334  06DA  02AC               	subwf	___ftdiv@f1+1,f
  4335  06DB  082A               	movf	___ftdiv@f2+2,w
  4336  06DC  1C03               	skipc
  4337  06DD  0A2A               	incf	___ftdiv@f2+2,w
  4338  06DE  02AD               	subwf	___ftdiv@f1+2,f
  4339  06DF  1433               	bsf	___ftdiv@f3,0
  4340  06E0                     l2205:	
  4341  06E0  3001               	movlw	1
  4342  06E1                     u3285:	
  4343  06E1  1003               	clrc
  4344  06E2  0DAB               	rlf	___ftdiv@f1,f
  4345  06E3  0DAC               	rlf	___ftdiv@f1+1,f
  4346  06E4  0DAD               	rlf	___ftdiv@f1+2,f
  4347  06E5  3EFF               	addlw	-1
  4348  06E6  1D03               	skipz
  4349  06E7  2EE1               	goto	u3285
  4350  06E8  3001               	movlw	1
  4351  06E9  02B2               	subwf	___ftdiv@cntr,f
  4352  06EA  1D03               	btfss	3,2
  4353  06EB  2EC1               	goto	l2197
  4354  06EC  0833               	movf	___ftdiv@f3,w
  4355  06ED  00A0               	movwf	___ftpack@arg
  4356  06EE  0834               	movf	___ftdiv@f3+1,w
  4357  06EF  00A1               	movwf	___ftpack@arg+1
  4358  06F0  0835               	movf	___ftdiv@f3+2,w
  4359  06F1  00A2               	movwf	___ftpack@arg+2
  4360  06F2  0836               	movf	___ftdiv@exp,w
  4361  06F3  00AE               	movwf	??___ftdiv
  4362  06F4  082E               	movf	??___ftdiv,w
  4363  06F5  00A3               	movwf	___ftpack@exp
  4364  06F6  0837               	movf	___ftdiv@sign,w
  4365  06F7  00AF               	movwf	??___ftdiv+1
  4366  06F8  082F               	movf	??___ftdiv+1,w
  4367  06F9  00A4               	movwf	___ftpack@sign
  4368  06FA  120A  158A  2609   	fcall	___ftpack
  4369  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  4370  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  4371  06FF  0820               	movf	?___ftpack,w
  4372  0700  00A8               	movwf	?___ftdiv
  4373  0701  0821               	movf	?___ftpack+1,w
  4374  0702  00A9               	movwf	?___ftdiv+1
  4375  0703  0822               	movf	?___ftpack+2,w
  4376  0704  00AA               	movwf	?___ftdiv+2
  4377  0705  0008               	return
  4378  0706                     __end_of___ftdiv:	
  4379                           
  4380                           	psect	text20
  4381  0BEA                     __ptext20:	
  4382 ;; *************** function ___awtoft *****************
  4383 ;; Defined at:
  4384 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  c               2    8[BANK0 ] int 
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;  sign            1   13[BANK0 ] unsigned char 
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  3    8[BANK0 ] float 
  4391 ;; Registers used:
  4392 ;;		wreg, status,2, status,0, pclath, cstack
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4398 ;;      Params:         0       3       0       0       0
  4399 ;;      Locals:         0       1       0       0       0
  4400 ;;      Temps:          0       2       0       0       0
  4401 ;;      Totals:         0       6       0       0       0
  4402 ;;Total ram usage:        6 bytes
  4403 ;; Hardware stack levels used:    1
  4404 ;; Hardware stack levels required when called:    2
  4405 ;; This function calls:
  4406 ;;		___ftpack
  4407 ;; This function is called by:
  4408 ;;		_exp
  4409 ;;		_log
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           
  4414                           ;psect for function ___awtoft
  4415  0BEA                     ___awtoft:	
  4416                           
  4417                           ;incstack = 0
  4418                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  4419  0BEA  1283               	bcf	3,5	;RP0=0, select bank0
  4420  0BEB  1303               	bcf	3,6	;RP1=0, select bank0
  4421  0BEC  01AD               	clrf	___awtoft@sign
  4422  0BED  1FA9               	btfss	___awtoft@c+1,7
  4423  0BEE  2BF6               	goto	l2167
  4424  0BEF  09A8               	comf	___awtoft@c,f
  4425  0BF0  09A9               	comf	___awtoft@c+1,f
  4426  0BF1  0AA8               	incf	___awtoft@c,f
  4427  0BF2  1903               	skipnz
  4428  0BF3  0AA9               	incf	___awtoft@c+1,f
  4429  0BF4  01AD               	clrf	___awtoft@sign
  4430  0BF5  0AAD               	incf	___awtoft@sign,f
  4431  0BF6                     l2167:	
  4432  0BF6  0828               	movf	___awtoft@c,w
  4433  0BF7  00A0               	movwf	___ftpack@arg
  4434  0BF8  0829               	movf	___awtoft@c+1,w
  4435  0BF9  00A1               	movwf	___ftpack@arg+1
  4436  0BFA  01A2               	clrf	___ftpack@arg+2
  4437  0BFB  308E               	movlw	142
  4438  0BFC  00AB               	movwf	??___awtoft
  4439  0BFD  082B               	movf	??___awtoft,w
  4440  0BFE  00A3               	movwf	___ftpack@exp
  4441  0BFF  082D               	movf	___awtoft@sign,w
  4442  0C00  00AC               	movwf	??___awtoft+1
  4443  0C01  082C               	movf	??___awtoft+1,w
  4444  0C02  00A4               	movwf	___ftpack@sign
  4445  0C03  120A  158A  2609   	fcall	___ftpack
  4446  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  4447  0C07  1303               	bcf	3,6	;RP1=0, select bank0
  4448  0C08  0820               	movf	?___ftpack,w
  4449  0C09  00A8               	movwf	?___awtoft
  4450  0C0A  0821               	movf	?___ftpack+1,w
  4451  0C0B  00A9               	movwf	?___awtoft+1
  4452  0C0C  0822               	movf	?___ftpack+2,w
  4453  0C0D  00AA               	movwf	?___awtoft+2
  4454  0C0E  0008               	return
  4455  0C0F                     __end_of___awtoft:	
  4456                           
  4457                           	psect	text21
  4458  0C38                     __ptext21:	
  4459 ;; *************** function ___lltoft *****************
  4460 ;; Defined at:
  4461 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lltoft.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  c               4    8[BANK0 ] unsigned long 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  exp             1   13[BANK0 ] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  3    8[BANK0 ] float 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0, pclath, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4475 ;;      Params:         0       4       0       0       0
  4476 ;;      Locals:         0       1       0       0       0
  4477 ;;      Temps:          0       1       0       0       0
  4478 ;;      Totals:         0       6       0       0       0
  4479 ;;Total ram usage:        6 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    2
  4482 ;; This function calls:
  4483 ;;		___ftpack
  4484 ;; This function is called by:
  4485 ;;		_pow
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           
  4490                           ;psect for function ___lltoft
  4491  0C38                     ___lltoft:	
  4492                           
  4493                           ;incstack = 0
  4494                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4495  0C38  308E               	movlw	142
  4496  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  4497  0C3A  1303               	bcf	3,6	;RP1=0, select bank0
  4498  0C3B  00AC               	movwf	??___lltoft
  4499  0C3C  082C               	movf	??___lltoft,w
  4500  0C3D  00AD               	movwf	___lltoft@exp
  4501  0C3E                     l2285:	
  4502  0C3E  30FF               	movlw	255
  4503  0C3F  052B               	andwf	___lltoft@c+3,w
  4504  0C40  1903               	btfsc	3,2
  4505  0C41  2C50               	goto	l2287
  4506  0C42  3001               	movlw	1
  4507  0C43                     u3425:	
  4508  0C43  1003               	clrc
  4509  0C44  0CAB               	rrf	___lltoft@c+3,f
  4510  0C45  0CAA               	rrf	___lltoft@c+2,f
  4511  0C46  0CA9               	rrf	___lltoft@c+1,f
  4512  0C47  0CA8               	rrf	___lltoft@c,f
  4513  0C48  3EFF               	addlw	-1
  4514  0C49  1D03               	skipz
  4515  0C4A  2C43               	goto	u3425
  4516  0C4B  3001               	movlw	1
  4517  0C4C  00AC               	movwf	??___lltoft
  4518  0C4D  082C               	movf	??___lltoft,w
  4519  0C4E  07AD               	addwf	___lltoft@exp,f
  4520  0C4F  2C3E               	goto	l2285
  4521  0C50                     l2287:	
  4522  0C50  0828               	movf	___lltoft@c,w
  4523  0C51  00A0               	movwf	___ftpack@arg
  4524  0C52  0829               	movf	___lltoft@c+1,w
  4525  0C53  00A1               	movwf	___ftpack@arg+1
  4526  0C54  082A               	movf	___lltoft@c+2,w
  4527  0C55  00A2               	movwf	___ftpack@arg+2
  4528  0C56  082D               	movf	___lltoft@exp,w
  4529  0C57  00AC               	movwf	??___lltoft
  4530  0C58  082C               	movf	??___lltoft,w
  4531  0C59  00A3               	movwf	___ftpack@exp
  4532  0C5A  01A4               	clrf	___ftpack@sign
  4533  0C5B  120A  158A  2609   	fcall	___ftpack
  4534  0C5E  1283               	bcf	3,5	;RP0=0, select bank0
  4535  0C5F  1303               	bcf	3,6	;RP1=0, select bank0
  4536  0C60  0820               	movf	?___ftpack,w
  4537  0C61  00A8               	movwf	?___lltoft
  4538  0C62  0821               	movf	?___ftpack+1,w
  4539  0C63  00A9               	movwf	?___lltoft+1
  4540  0C64  0822               	movf	?___ftpack+2,w
  4541  0C65  00AA               	movwf	?___lltoft+2
  4542  0C66  0008               	return
  4543  0C67                     __end_of___lltoft:	
  4544                           
  4545                           	psect	text22
  4546  0BB1                     __ptext22:	
  4547 ;; *************** function ___lwtoft *****************
  4548 ;; Defined at:
  4549 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwtoft.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  c               2    8[BANK0 ] unsigned int 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;		None
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  3    8[BANK0 ] float 
  4556 ;; Registers used:
  4557 ;;		wreg, status,2, status,0, pclath, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4563 ;;      Params:         0       3       0       0       0
  4564 ;;      Locals:         0       0       0       0       0
  4565 ;;      Temps:          0       1       0       0       0
  4566 ;;      Totals:         0       4       0       0       0
  4567 ;;Total ram usage:        4 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    2
  4570 ;; This function calls:
  4571 ;;		___ftpack
  4572 ;; This function is called by:
  4573 ;;		_main
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           
  4578                           ;psect for function ___lwtoft
  4579  0BB1                     ___lwtoft:	
  4580                           
  4581                           ;incstack = 0
  4582                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  4583  0BB1  1283               	bcf	3,5	;RP0=0, select bank0
  4584  0BB2  1303               	bcf	3,6	;RP1=0, select bank0
  4585  0BB3  0828               	movf	___lwtoft@c,w
  4586  0BB4  00A0               	movwf	___ftpack@arg
  4587  0BB5  0829               	movf	___lwtoft@c+1,w
  4588  0BB6  00A1               	movwf	___ftpack@arg+1
  4589  0BB7  01A2               	clrf	___ftpack@arg+2
  4590  0BB8  308E               	movlw	142
  4591  0BB9  00AB               	movwf	??___lwtoft
  4592  0BBA  082B               	movf	??___lwtoft,w
  4593  0BBB  00A3               	movwf	___ftpack@exp
  4594  0BBC  01A4               	clrf	___ftpack@sign
  4595  0BBD  120A  158A  2609   	fcall	___ftpack
  4596  0BC0  1283               	bcf	3,5	;RP0=0, select bank0
  4597  0BC1  1303               	bcf	3,6	;RP1=0, select bank0
  4598  0BC2  0820               	movf	?___ftpack,w
  4599  0BC3  00A8               	movwf	?___lwtoft
  4600  0BC4  0821               	movf	?___ftpack+1,w
  4601  0BC5  00A9               	movwf	?___lwtoft+1
  4602  0BC6  0822               	movf	?___ftpack+2,w
  4603  0BC7  00AA               	movwf	?___lwtoft+2
  4604  0BC8  0008               	return
  4605  0BC9                     __end_of___lwtoft:	
  4606                           
  4607                           	psect	text23
  4608  0E09                     __ptext23:	
  4609 ;; *************** function ___ftpack *****************
  4610 ;; Defined at:
  4611 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;  arg             3    0[BANK0 ] unsigned um
  4614 ;;  exp             1    3[BANK0 ] unsigned char 
  4615 ;;  sign            1    4[BANK0 ] unsigned char 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;		None
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  3    0[BANK0 ] float 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4627 ;;      Params:         0       5       0       0       0
  4628 ;;      Locals:         0       0       0       0       0
  4629 ;;      Temps:          0       3       0       0       0
  4630 ;;      Totals:         0       8       0       0       0
  4631 ;;Total ram usage:        8 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:    1
  4634 ;; This function calls:
  4635 ;;		Nothing
  4636 ;; This function is called by:
  4637 ;;		___altoft
  4638 ;;		___awtoft
  4639 ;;		___ftadd
  4640 ;;		___ftdiv
  4641 ;;		___ftmul
  4642 ;;		___lltoft
  4643 ;;		___lwtoft
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           
  4648                           ;psect for function ___ftpack
  4649  0E09                     ___ftpack:	
  4650                           
  4651                           ;incstack = 0
  4652                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4653  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  4654  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  4655  0E0B  0823               	movf	___ftpack@exp,w
  4656  0E0C  1903               	btfsc	3,2
  4657  0E0D  2E13               	goto	l1961
  4658  0E0E  0822               	movf	___ftpack@arg+2,w
  4659  0E0F  0421               	iorwf	___ftpack@arg+1,w
  4660  0E10  0420               	iorwf	___ftpack@arg,w
  4661  0E11  1D03               	skipz
  4662  0E12  2E26               	goto	l1967
  4663  0E13                     l1961:	
  4664  0E13  3000               	movlw	0
  4665  0E14  00A0               	movwf	?___ftpack
  4666  0E15  3000               	movlw	0
  4667  0E16  00A1               	movwf	?___ftpack+1
  4668  0E17  3000               	movlw	0
  4669  0E18  00A2               	movwf	?___ftpack+2
  4670  0E19  0008               	return
  4671  0E1A                     l1965:	
  4672  0E1A  3001               	movlw	1
  4673  0E1B  00A5               	movwf	??___ftpack
  4674  0E1C  0825               	movf	??___ftpack,w
  4675  0E1D  07A3               	addwf	___ftpack@exp,f
  4676  0E1E  3001               	movlw	1
  4677  0E1F                     u2675:	
  4678  0E1F  1003               	clrc
  4679  0E20  0CA2               	rrf	___ftpack@arg+2,f
  4680  0E21  0CA1               	rrf	___ftpack@arg+1,f
  4681  0E22  0CA0               	rrf	___ftpack@arg,f
  4682  0E23  3EFF               	addlw	-1
  4683  0E24  1D03               	skipz
  4684  0E25  2E1F               	goto	u2675
  4685  0E26                     l1967:	
  4686  0E26  30FE               	movlw	254
  4687  0E27  0522               	andwf	___ftpack@arg+2,w
  4688  0E28  1903               	btfsc	3,2
  4689  0E29  2E41               	goto	l305
  4690  0E2A  2E1A               	goto	l1965
  4691  0E2B                     l1969:	
  4692  0E2B  3001               	movlw	1
  4693  0E2C  00A5               	movwf	??___ftpack
  4694  0E2D  0825               	movf	??___ftpack,w
  4695  0E2E  07A3               	addwf	___ftpack@exp,f
  4696  0E2F  3001               	movlw	1
  4697  0E30  07A0               	addwf	___ftpack@arg,f
  4698  0E31  3000               	movlw	0
  4699  0E32  1803               	skipnc
  4700  0E33  3001               	movlw	1
  4701  0E34  07A1               	addwf	___ftpack@arg+1,f
  4702  0E35  3000               	movlw	0
  4703  0E36  1803               	skipnc
  4704  0E37  3001               	movlw	1
  4705  0E38  07A2               	addwf	___ftpack@arg+2,f
  4706  0E39  3001               	movlw	1
  4707  0E3A                     u2695:	
  4708  0E3A  1003               	clrc
  4709  0E3B  0CA2               	rrf	___ftpack@arg+2,f
  4710  0E3C  0CA1               	rrf	___ftpack@arg+1,f
  4711  0E3D  0CA0               	rrf	___ftpack@arg,f
  4712  0E3E  3EFF               	addlw	-1
  4713  0E3F  1D03               	skipz
  4714  0E40  2E3A               	goto	u2695
  4715  0E41                     l305:	
  4716  0E41  30FF               	movlw	255
  4717  0E42  0522               	andwf	___ftpack@arg+2,w
  4718  0E43  1903               	btfsc	3,2
  4719  0E44  2E50               	goto	l1977
  4720  0E45  2E2B               	goto	l1969
  4721  0E46                     l1975:	
  4722  0E46  3001               	movlw	1
  4723  0E47  02A3               	subwf	___ftpack@exp,f
  4724  0E48  3001               	movlw	1
  4725  0E49                     u2715:	
  4726  0E49  1003               	clrc
  4727  0E4A  0DA0               	rlf	___ftpack@arg,f
  4728  0E4B  0DA1               	rlf	___ftpack@arg+1,f
  4729  0E4C  0DA2               	rlf	___ftpack@arg+2,f
  4730  0E4D  3EFF               	addlw	-1
  4731  0E4E  1D03               	skipz
  4732  0E4F  2E49               	goto	u2715
  4733  0E50                     l1977:	
  4734  0E50  1BA1               	btfsc	___ftpack@arg+1,7
  4735  0E51  2E56               	goto	l312
  4736  0E52  3002               	movlw	2
  4737  0E53  0223               	subwf	___ftpack@exp,w
  4738  0E54  1803               	skipnc
  4739  0E55  2E46               	goto	l1975
  4740  0E56                     l312:	
  4741  0E56  1823               	btfsc	___ftpack@exp,0
  4742  0E57  2E5E               	goto	l313
  4743  0E58  30FF               	movlw	255
  4744  0E59  05A0               	andwf	___ftpack@arg,f
  4745  0E5A  307F               	movlw	127
  4746  0E5B  05A1               	andwf	___ftpack@arg+1,f
  4747  0E5C  30FF               	movlw	255
  4748  0E5D  05A2               	andwf	___ftpack@arg+2,f
  4749  0E5E                     l313:	
  4750  0E5E  1003               	clrc
  4751  0E5F  0CA3               	rrf	___ftpack@exp,f
  4752  0E60  0823               	movf	___ftpack@exp,w
  4753  0E61  00A5               	movwf	??___ftpack
  4754  0E62  01A6               	clrf	??___ftpack+1
  4755  0E63  01A7               	clrf	??___ftpack+2
  4756  0E64  3010               	movlw	16
  4757  0E65                     u2755:	
  4758  0E65  1003               	clrc
  4759  0E66  0DA5               	rlf	??___ftpack,f
  4760  0E67  0DA6               	rlf	??___ftpack+1,f
  4761  0E68  0DA7               	rlf	??___ftpack+2,f
  4762  0E69  3EFF               	addlw	-1
  4763  0E6A  1D03               	skipz
  4764  0E6B  2E65               	goto	u2755
  4765  0E6C  0825               	movf	??___ftpack,w
  4766  0E6D  04A0               	iorwf	___ftpack@arg,f
  4767  0E6E  0826               	movf	??___ftpack+1,w
  4768  0E6F  04A1               	iorwf	___ftpack@arg+1,f
  4769  0E70  0827               	movf	??___ftpack+2,w
  4770  0E71  04A2               	iorwf	___ftpack@arg+2,f
  4771  0E72  0824               	movf	___ftpack@sign,w
  4772  0E73  1903               	btfsc	3,2
  4773  0E74  0008               	return
  4774  0E75  17A2               	bsf	___ftpack@arg+2,7
  4775  0E76  0008               	return
  4776  0E77                     __end_of___ftpack:	
  4777                           
  4778                           	psect	text24
  4779  0DBC                     __ptext24:	
  4780 ;; *************** function ___awmod *****************
  4781 ;; Defined at:
  4782 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awmod.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  divisor         2   20[BANK0 ] int 
  4785 ;;  dividend        2   22[BANK0 ] int 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;  sign            1   26[BANK0 ] unsigned char 
  4788 ;;  counter         1   25[BANK0 ] unsigned char 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  2   20[BANK0 ] int 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2, status,0
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4798 ;;      Params:         0       4       0       0       0
  4799 ;;      Locals:         0       2       0       0       0
  4800 ;;      Temps:          0       1       0       0       0
  4801 ;;      Totals:         0       7       0       0       0
  4802 ;;Total ram usage:        7 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    1
  4805 ;; This function calls:
  4806 ;;		Nothing
  4807 ;; This function is called by:
  4808 ;;		_main
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           
  4813                           ;psect for function ___awmod
  4814  0DBC                     ___awmod:	
  4815                           
  4816                           ;incstack = 0
  4817                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4818  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  4819  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  4820  0DBE  01BA               	clrf	___awmod@sign
  4821  0DBF  1FB7               	btfss	___awmod@dividend+1,7
  4822  0DC0  2DC8               	goto	l2415
  4823  0DC1  09B6               	comf	___awmod@dividend,f
  4824  0DC2  09B7               	comf	___awmod@dividend+1,f
  4825  0DC3  0AB6               	incf	___awmod@dividend,f
  4826  0DC4  1903               	skipnz
  4827  0DC5  0AB7               	incf	___awmod@dividend+1,f
  4828  0DC6  01BA               	clrf	___awmod@sign
  4829  0DC7  0ABA               	incf	___awmod@sign,f
  4830  0DC8                     l2415:	
  4831  0DC8  1FB5               	btfss	___awmod@divisor+1,7
  4832  0DC9  2DCF               	goto	l2419
  4833  0DCA  09B4               	comf	___awmod@divisor,f
  4834  0DCB  09B5               	comf	___awmod@divisor+1,f
  4835  0DCC  0AB4               	incf	___awmod@divisor,f
  4836  0DCD  1903               	skipnz
  4837  0DCE  0AB5               	incf	___awmod@divisor+1,f
  4838  0DCF                     l2419:	
  4839  0DCF  0834               	movf	___awmod@divisor,w
  4840  0DD0  0435               	iorwf	___awmod@divisor+1,w
  4841  0DD1  1903               	btfsc	3,2
  4842  0DD2  2DFC               	goto	l2437
  4843  0DD3  01B9               	clrf	___awmod@counter
  4844  0DD4  0AB9               	incf	___awmod@counter,f
  4845  0DD5                     l2427:	
  4846  0DD5  1BB5               	btfsc	___awmod@divisor+1,7
  4847  0DD6  2DE3               	goto	l2429
  4848  0DD7  3001               	movlw	1
  4849  0DD8                     u3645:	
  4850  0DD8  1003               	clrc
  4851  0DD9  0DB4               	rlf	___awmod@divisor,f
  4852  0DDA  0DB5               	rlf	___awmod@divisor+1,f
  4853  0DDB  3EFF               	addlw	-1
  4854  0DDC  1D03               	skipz
  4855  0DDD  2DD8               	goto	u3645
  4856  0DDE  3001               	movlw	1
  4857  0DDF  00B8               	movwf	??___awmod
  4858  0DE0  0838               	movf	??___awmod,w
  4859  0DE1  07B9               	addwf	___awmod@counter,f
  4860  0DE2  2DD5               	goto	l2427
  4861  0DE3                     l2429:	
  4862  0DE3  0835               	movf	___awmod@divisor+1,w
  4863  0DE4  0237               	subwf	___awmod@dividend+1,w
  4864  0DE5  1D03               	skipz
  4865  0DE6  2DE9               	goto	u3665
  4866  0DE7  0834               	movf	___awmod@divisor,w
  4867  0DE8  0236               	subwf	___awmod@dividend,w
  4868  0DE9                     u3665:	
  4869  0DE9  1C03               	skipc
  4870  0DEA  2DF1               	goto	l2433
  4871  0DEB  0834               	movf	___awmod@divisor,w
  4872  0DEC  02B6               	subwf	___awmod@dividend,f
  4873  0DED  0835               	movf	___awmod@divisor+1,w
  4874  0DEE  1C03               	skipc
  4875  0DEF  03B7               	decf	___awmod@dividend+1,f
  4876  0DF0  02B7               	subwf	___awmod@dividend+1,f
  4877  0DF1                     l2433:	
  4878  0DF1  3001               	movlw	1
  4879  0DF2                     u3675:	
  4880  0DF2  1003               	clrc
  4881  0DF3  0CB5               	rrf	___awmod@divisor+1,f
  4882  0DF4  0CB4               	rrf	___awmod@divisor,f
  4883  0DF5  3EFF               	addlw	-1
  4884  0DF6  1D03               	skipz
  4885  0DF7  2DF2               	goto	u3675
  4886  0DF8  3001               	movlw	1
  4887  0DF9  02B9               	subwf	___awmod@counter,f
  4888  0DFA  1D03               	btfss	3,2
  4889  0DFB  2DE3               	goto	l2429
  4890  0DFC                     l2437:	
  4891  0DFC  083A               	movf	___awmod@sign,w
  4892  0DFD  1903               	btfsc	3,2
  4893  0DFE  2E04               	goto	l2441
  4894  0DFF  09B6               	comf	___awmod@dividend,f
  4895  0E00  09B7               	comf	___awmod@dividend+1,f
  4896  0E01  0AB6               	incf	___awmod@dividend,f
  4897  0E02  1903               	skipnz
  4898  0E03  0AB7               	incf	___awmod@dividend+1,f
  4899  0E04                     l2441:	
  4900  0E04  0837               	movf	___awmod@dividend+1,w
  4901  0E05  00B5               	movwf	?___awmod+1
  4902  0E06  0836               	movf	___awmod@dividend,w
  4903  0E07  00B4               	movwf	?___awmod
  4904  0E08  0008               	return
  4905  0E09                     __end_of___awmod:	
  4906                           
  4907                           	psect	text25
  4908  0C0F                     __ptext25:	
  4909 ;; *************** function _isr *****************
  4910 ;; Defined at:
  4911 ;;		line 21 in file "jgatoraton1.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;		None
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;		None
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      void 
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4925 ;;      Params:         0       0       0       0       0
  4926 ;;      Locals:         0       0       0       0       0
  4927 ;;      Temps:          6       0       0       0       0
  4928 ;;      Totals:         6       0       0       0       0
  4929 ;;Total ram usage:        6 bytes
  4930 ;; Hardware stack levels used:    1
  4931 ;; This function calls:
  4932 ;;		Nothing
  4933 ;; This function is called by:
  4934 ;;		Interrupt level 1
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           
  4939                           ;psect for function _isr
  4940  0C0F                     _isr:	
  4941                           
  4942                           ;jgatoraton1.c: 31: if(INTCONbits.INTF == 1)
  4943  0C0F  1C8B               	btfss	11,1	;volatile
  4944  0C10  2C2C               	goto	i1l37
  4945                           
  4946                           ;jgatoraton1.c: 32: {
  4947                           ;jgatoraton1.c: 33: _delay((unsigned long)((50)*(4000000/4000.0)));
  4948  0C11  3041               	movlw	65
  4949  0C12  00F1               	movwf	??_isr+1
  4950  0C13  30EE               	movlw	238
  4951  0C14  00F0               	movwf	??_isr
  4952  0C15                     u376_27:	
  4953  0C15  0BF0               	decfsz	??_isr,f
  4954  0C16  2C15               	goto	u376_27
  4955  0C17  0BF1               	decfsz	??_isr+1,f
  4956  0C18  2C15               	goto	u376_27
  4957  0C19  0000               	nop
  4958                           
  4959                           ;jgatoraton1.c: 34: if(GATO!=1)
  4960  0C1A  1683               	bsf	3,5	;RP0=1, select bank1
  4961  0C1B  1303               	bcf	3,6	;RP1=0, select bank1
  4962  0C1C  0332               	decf	_GATO^(0+128),w
  4963  0C1D  0433               	iorwf	(_GATO+1)^(0+128),w
  4964  0C1E  1903               	btfsc	3,2
  4965  0C1F  2C2B               	goto	i1l1917
  4966                           
  4967                           ;jgatoraton1.c: 35: GATO = GATO/2;
  4968  0C20  0833               	movf	(_GATO+1)^(0+128),w
  4969  0C21  00F1               	movwf	??_isr+1
  4970  0C22  0832               	movf	_GATO^(0+128),w
  4971  0C23  00F0               	movwf	??_isr
  4972  0C24  1003               	clrc
  4973  0C25  0CF1               	rrf	??_isr+1,f
  4974  0C26  0CF0               	rrf	??_isr,f
  4975  0C27  0870               	movf	??_isr,w
  4976  0C28  00B2               	movwf	_GATO^(0+128)
  4977  0C29  0871               	movf	??_isr+1,w
  4978  0C2A  00B3               	movwf	(_GATO+1)^(0+128)
  4979  0C2B                     i1l1917:	
  4980                           
  4981                           ;jgatoraton1.c: 37: INTCONbits.INTF = 0;
  4982  0C2B  108B               	bcf	11,1	;volatile
  4983  0C2C                     i1l37:	
  4984  0C2C  0875               	movf	??_isr+5,w
  4985  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  4986  0C2E  00FF               	movwf	127
  4987  0C2F  0874               	movf	??_isr+4,w
  4988  0C30  008A               	movwf	10
  4989  0C31  0873               	movf	??_isr+3,w
  4990  0C32  0084               	movwf	4
  4991  0C33  0E72               	swapf	(??_isr+2)^(0+-128),w
  4992  0C34  0083               	movwf	3
  4993  0C35  0EFE               	swapf	126,f
  4994  0C36  0E7E               	swapf	126,w
  4995  0C37  0009               	retfie
  4996  0C38                     __end_of_isr:	
  4997  007E                     btemp	set	126	;btemp
  4998  007E                     wtemp0	set	126
  4999                           
  5000                           	psect	intentry
  5001  0004                     __pintentry:	
  5002                           ;incstack = 0
  5003                           ; Regs used in _isr: [wreg+status,2+status,0]
  5004                           
  5005  0004                     interrupt_function:	
  5006  007E                     saved_w	set	btemp
  5007  0004  00FE               	movwf	btemp
  5008  0005  0E03               	swapf	3,w
  5009  0006  00F2               	movwf	??_isr+2
  5010  0007  0804               	movf	4,w
  5011  0008  00F3               	movwf	??_isr+3
  5012  0009  080A               	movf	10,w
  5013  000A  00F4               	movwf	??_isr+4
  5014  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5015  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5016  000D  087F               	movf	btemp+1,w
  5017  000E  00F5               	movwf	??_isr+5
  5018  000F  120A  158A  2C0F   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    57
    Data        8
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     79      79
    BANK1            80     18      22
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(1) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_pow
    _rand->___lmul
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___ftadd
    ___fttol->___lwtoft
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lwtoft->___ftpack
    ___awmod->_rand

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_pow

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   67387
                                             77 BANK0      2     2      0
                                             11 BANK1      7     7      0
                            ___awmod
                            ___fttol
                           ___lwtoft
                                _pow
                               _rand
                            _validar
 ---------------------------------------------------------------------------------
 (1) _validar                                              3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     266
                                             13 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     266
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _pow                                                 18    12      6   63642
                                             70 BANK0      7     1      6
                                              0 BANK1     11    11      0
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                           ___lwtoft (ARG)
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   20609
                                             53 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _exp                                                 10     7      3   34681
                                             60 BANK0     10     7      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (3) _ldexp                                                7     2      5    1444
                                             53 BANK0      7     2      5
                             ___ftge
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                                9     6      3    9209
                                             43 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     582
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     464
                                             12 BANK0     14    10      4
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                              12     6      6    1090
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    2517
                                             26 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     4      6    8467
                                             43 BANK0     10     4      6
                             ___bmul
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    3476
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     224
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    4349
                                             43 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    4123
                                             30 BANK0     13     7      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     260
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2798
                                              8 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2511
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2415
                                              8 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2344
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2248
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     563
                                             20 BANK0      7     3      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   ___fttol
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _pow
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
     ___fttol
       ___lwtoft (ARG)
         ___ftpack
     ___lltoft
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     _exp (ARG)
       ___awtoft
         ___ftpack
       ___ftdiv
         ___ftpack
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       ___fttol
         ___lwtoft (ARG)
           ___ftpack
       _eval_poly
         ___bmul
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftge
         ___fttol
           ___lwtoft (ARG)
             ___ftpack
         _frexp
       _ldexp
         ___ftge
         _eval_poly (ARG)
           ___bmul
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___bmul
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         _frexp
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___bmul
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       _frexp
   _rand
     ___lmul
   _validar

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     12      16       7       27.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      71      12        0.0%
ABS                  0      0      71       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue Oct 10 13:33:13 2017

            ___altoft@exp 0040                         pc 0002            ___bmul@product 0022  
             __CFG_CP$OFF 0000             ___altoft@sign 0041                        l40 0D94  
                      fsr 0004              ___ftadd@exp1 004A              ___ftadd@exp2 0049  
            ___ftadd@sign 0048                       l312 0E56                       l313 0E5E  
                     l305 0E41                       l336 0376                       l508 006C  
                     l396 0FE6              __CFG_CPD$OFF 0000                       _exp 0193  
                     _log 0586                       _isr 0C0F                       _pow 004B  
                     fsr0 0004                       indf 0000              ___awmod@sign 003A  
            __CFG_LVP$OFF 0000              ___ftdiv@cntr 0032              ___ftdiv@sign 0037  
                    l2101 04E1                      l2013 0CBE                      l2015 0CD0  
                    l2025 02F7                      l2113 0520                      l2035 030D  
                    l2205 06E0                      l2053 033C                      l2029 02FE  
                    l2125 0548                      l2117 0530                      l2071 0388  
                    l2055 0348                      l2047 0327                      l2303 05BA  
                    l2065 0366                      l2057 034D                      l2225 0BD2  
                    l2129 0558                      l2075 039A                      l2067 0372  
                    l2059 0351                      l1435 07C8                      l1507 0F8C  
                    l2147 0CFE                      l2243 0740                      l2331 01E3  
                    l2085 03BD                      l1533 0FDB                      l1525 0FBE  
                    l2253 0796                      l2325 01C1                      l2415 0DC8  
                    l2167 0BF6                      l2183 067C                      l2095 04CB  
                    l2263 0EE9                      l1439 07EF                      l1535 0FE9  
                    l1527 0FCE                      l2239 0737                      l1703 0F59  
                    l2319 01A1                      l2441 0E04                      l2433 0DF1  
                    l2177 0666                      l2337 0216                      l2273 0C87  
                    l2427 0DD5                      l2419 0DCF                      l1539 0FF7  
                    l2355 02B6                      l1811 0DA3                      l2429 0DE3  
                    l2437 0DFC                      l2285 0C3E                      l2197 06C1  
                    l2269 0C71                      l2287 0C50                      l2391 00ED  
                    l2383 0081                      l2297 05A8                      l2377 0075  
                    l1817 0DB4                      l2395 010D                      l2459 03F2  
                    l1677 0EFE                      l2485 0473                      l1687 0F23  
                    l1961 0E13                      l1699 0F50                      l1965 0E1A  
                    l1975 0E46                      l1967 0E26                      l1991 0BA2  
                    l1977 0E50                      l1969 0E2B                      l1995 0BA8  
                    ?_exp 005C                      ?_log 0055                      ?_isr 0070  
                    ?_pow 0066              __CFG_WDTE$ON 0000                      _GATO 00B2  
                    u2005 0FDD                      u3005 0367                      u2225 0F2C  
                    u3125 0531                      u3135 0539                      u2415 0D7B  
                    u3500 01FB                      u3245 068E                      u3085 04ED  
                    u3405 0C91                      u3255 06A0                      u3175 0559  
                    u3095 04FF                      u1751 07BB                      u1752 07BC  
                    u3425 0C43                      u3265 06C2                      u3185 0561  
                    u1753 07C1                      u1754 07C2                      u2715 0E49  
                    u3275 06D3                      u1771 07E2                      u1772 07E3  
                    u3285 06E1                      u2805 0CC3                      u1773 07E8  
                    u1774 07E9                      u1945 0F93                      u3545 0D65  
                    u3705 046F                      u3490 01FA                      u2755 0E65  
                    u2675 0E1F                      u2915 0328                      u3395 0C89  
                    u3715 047C                      u3645 0DD8                      u2695 0E3A  
                    u1975 0FBF                      u3727 0489                      u3665 0DE9  
                    u2945 033D                      u3737 04A1                      u3675 0DF2  
                    u3595 00E0                      u3747 0D8A                      i1l37 0C2C  
                    u3757 0D9E                      u2975 0352              __CFG_WRT$OFF 0000  
                    _main 03D7              ___ftpack@arg 0020                      _rand 0D2C  
            ___ftpack@exp 0023                      btemp 007E                      exp@x 005C  
                    log@x 0055                      pow@x 0066                      pow@y 0069  
                    start 0012             __CFG_IESO$OFF 0000         ___bmul@multiplier 0023  
           __CFG_MCLRE$ON 0000              ___ftmul@cntr 003C              ___ftmul@sign 003D  
            ___fttol@exp1 0039                     ??_exp 005F                     ??_log 0058  
            ___fttol@lval 0035                     ??_isr 0070                     ??_pow 006C  
                   ?_main 0070                     ?_rand 002D           __end_of___ftadd 03D7  
         __end_of___awmod 0E09           __end_of___ftdiv 0706           __end_of___ftneg 0B9E  
                   _ANSEL 0188           __end_of___ftmul 0586           __end_of___ftsub 0BEA  
         __end_of___fttol 1000                     _RATON 00B4                     _PORTC 0007  
                   _PORTD 0008                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088       ___lmul@multiplicand 0024              ___lltoft@exp 002D  
          __CFG_FCMEN$OFF 0000             ___awtoft@sign 002D                     _floor 0706  
                   _ldexp 0EF0                     _frexp 0CEA                     _errno 007A  
                   _randx 0076             ___ftpack@sign 0024            __CFG_BOREN$OFF 0000  
         __end_of_validar 0DBC                     pclath 000A                     pow@yi 00A7  
                   status 0003                     wtemp0 007E               exp@exponent 0063  
             ldexp@newexp 0058           __initialization 0015               log@exponent 0059  
            __end_of_main 04B3              __end_of_rand 0D73                    ??_main 006D  
           ___fttol@sign1 0034                    ??_rand 002F                    ?_floor 004B  
                  ?_ldexp 0055                    ?_frexp 0020          __end_of___altoft 0CEA  
        __end_of___awtoft 0C0F          __end_of___ftpack 0E77                    _ANSELH 0189  
        __end_of___lltoft 0C67                    i1l1917 0C2B          __end_of___lwtoft 0BC9  
                  u376_27 0C15            __CFG_PWRTE$OFF 0000                    ___bmul 0B9E  
                  ___ftge 079F                    ___lmul 0C67                 ??___ftadd 0044  
               ??___awmod 0038                 ??___ftdiv 002E                 ??___ftneg 0023  
               ??___ftmul 0034                 ??___ftsub 0051                 ??___fttol 0030  
         ___awmod@divisor 0034           ___awmod@counter 0039                    floor@i 004F  
                  floor@x 004B     ___ftmul@f3_as_product 0039              __pdataCOMMON 0076  
                  saved_w 007E                 ??_validar 0020          __end_ofexp@coeff 0824  
        __end_oflog@coeff 083F   __end_of__initialization 0047                ___altoft@c 003A  
              ___ftadd@f1 003E                ___ftadd@f2 0041                ___ftge@ff1 0020  
              ___ftge@ff2 0023              eval_poly@res 0052                ___ftdiv@f1 002B  
              ___ftdiv@f2 0028                ___ftdiv@f3 0033                ___ftneg@f1 0020  
              ___awtoft@c 0028       ___bmul@multiplicand 0020                ___ftmul@f1 002E  
              ___ftmul@f2 0031                ___ftsub@f1 004E                ___ftsub@f2 004B  
              ___fttol@f1 002C            __pcstackCOMMON 0070              __pidataBANK1 0B8C  
              ___lltoft@c 0028             __end_of_floor 079F             __end_of_ldexp 0F72  
           __end_of_frexp 0D2C                ___lwtoft@c 0028                   ??_floor 004E  
                 ??_ldexp 005A                   ??_frexp 0024        __size_of_eval_poly 0079  
              __pmaintext 03D7                   ?___bmul 0020                   ?___ftge 0020  
                 ?___lmul 0020                __pintentry 0004                 ?___altoft 003A  
          ___lmul@product 0029                 ?___awtoft 0028                 ?___ftpack 0020  
               ?___lltoft 0028                 ?___lwtoft 0028                __stringtab 0800  
         __size_of___bmul 0013           __size_of___ftge 005F           __size_of___lmul 0041  
                 ___ftadd 02CE                   ___awmod 0DBC                   ___ftdiv 064E  
                 ___ftneg 0B94                   ___ftmul 04B3                   ___ftsub 0BC9  
                 ___fttol 0F72                ??___altoft 003E                   _exp$646 0060  
              ??___awtoft 002B                ??___ftpack 0025         __end_of_eval_poly 0EF0  
              ??___lltoft 002C                   __ptext1 0D73                   __ptext2 0D2C  
                 __ptext3 0C67                   __ptext4 004B                   __ptext5 0586  
                 __ptext6 0193                   __ptext7 0EF0                   __ptext8 0706  
                 __ptext9 0CEA                ??___lwtoft 002B                   _pow$644 00A0  
                 _pow$645 00A3              __size_of_exp 013B              __size_of_log 00C8  
            __size_of_isr 0029              __size_of_pow 0148          ___awmod@dividend 0036  
                 _validar 0D73                   main@aux 00AE      end_of_initialization 0047  
                 exp@sign 0065                   pow@sign 00A6                 _PORTBbits 0006  
               _PORTDbits 0008               ___ftdiv@exp 0036               ___ftmul@exp 0038  
          __end_of___bmul 0BB1            __end_of___ftge 07FE            __end_of___lmul 0CA8  
           __pidataCOMMON 0B90                floor@expon 0052       start_initialization 0015  
              eval_poly@d 004E                eval_poly@n 004F                eval_poly@x 004B  
              ldexp@value 0055               __end_of_exp 02CE               __end_of_log 064E  
             __end_of_isr 0C38               __end_of_pow 0193                frexp@value 0020  
__CFG_FOSC$INTRC_NOCLKOUT 0000                  ??___bmul 0021                  ??___ftge 0026  
                ??___lmul 0028               __pdataBANK1 00B2         __size_of___altoft 0042  
       __size_of___awtoft 0025         __size_of___ftpack 006E         __size_of___lltoft 002F  
             __pbssCOMMON 007A                 ___latbits 0002         __size_of___lwtoft 0018  
           __pcstackBANK0 0020             __pcstackBANK1 00A0                  ?___ftadd 003E  
                ?___awmod 0034                  ?___ftdiv 0028                  ?___ftneg 0020  
                ?___ftmul 002E                  ?___ftsub 004B                  ?___fttol 002C  
               __pstrings 0800                 _eval_poly 0E77                  ?_validar 0070  
          __size_of_floor 0099            __size_of_ldexp 0082            __size_of_frexp 0042  
       interrupt_function 0004               __stringbase 0805                ?_eval_poly 004B  
       ___lmul@multiplier 0020                 frexp@eptr 0023          __size_of___ftadd 0109  
        __size_of___awmod 004D          __size_of___ftdiv 00B8          __size_of___ftneg 000A  
                ___altoft 0CA8          __size_of___ftmul 00D3          __size_of___ftsub 0021  
        __size_of___fttol 008E                  ___awtoft 0BEA                  ___ftpack 0E09  
      __end_of__stringtab 0806                  ___lltoft 0C38                  ___lwtoft 0BB1  
                _main$643 00AB                  __ptext10 0F72                  __ptext11 079F  
                __ptext20 0BEA                  __ptext12 0CA8                  __ptext21 0C38  
                __ptext13 0E77                  __ptext22 0BB1                  __ptext14 04B3  
                __ptext23 0E09                  __ptext15 0B9E                  __ptext24 0DBC  
                __ptext16 0BC9                  __ptext25 0C0F                  __ptext17 02CE  
                __ptext18 0B94                  __ptext19 064E          __size_of_validar 0049  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 00DC             __size_of_rand 0047  
                main@aux2 00B0                  exp@coeff 0806                  log@coeff 0824  
              _INTCONbits 000B               ??_eval_poly 0051                  intlevel1 0000  
               stringcode 0800                  stringdir 0800                  stringtab 0800  
