

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Tue Oct 03 15:04:16 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 1.43
    44                           ; Generated 25/07/2017 GMT
    45                           ; 
    46                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008F                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  0105                     	;# 
   141  0107                     	;# 
   142  0108                     	;# 
   143  0109                     	;# 
   144  010C                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  010F                     	;# 
   149  0185                     	;# 
   150  0187                     	;# 
   151  0188                     	;# 
   152  0189                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155                           
   156                           	psect	idataCOMMON
   157  0B9F                     __pidataCOMMON:	
   158                           
   159                           ;initializer for _randx
   160  0B9F  3401               	retlw	1
   161  0BA0  3400               	retlw	0
   162  0BA1  3400               	retlw	0
   163  0BA2  3400               	retlw	0
   164                           
   165                           	psect	idataBANK1
   166  0B9B                     __pidataBANK1:	
   167                           
   168                           ;initializer for _GATO
   169  0B9B  3401               	retlw	1
   170  0B9C  3400               	retlw	0
   171                           
   172                           ;initializer for _RATON
   173  0B9D  3404               	retlw	4
   174  0B9E  3400               	retlw	0
   175                           
   176                           	psect	strings
   177  0800                     __pstrings:	
   178  0800                     stringtab:	
   179  0800                     __stringtab:	
   180  0800                     stringcode:	
   181                           ;	String table - string pointers are 1 byte each
   182                           
   183  0800                     stringdir:	
   184  0800  3008               	movlw	high stringdir
   185  0801  008A               	movwf	10
   186  0802  0804               	movf	4,w
   187  0803  0A84               	incf	4,f
   188  0804  0782               	addwf	2,f
   189  0805                     __stringbase:	
   190  0805  3400               	retlw	0
   191  0806                     __end_of__stringtab:	
   192  0806                     exp@coeff:	
   193  0806  3400               	retlw	0
   194  0807  3480               	retlw	128
   195  0808  343F               	retlw	63
   196  0809  3472               	retlw	114
   197  080A  3431               	retlw	49
   198  080B  343F               	retlw	63
   199  080C  34FE               	retlw	254
   200  080D  3475               	retlw	117
   201  080E  343E               	retlw	62
   202  080F  3458               	retlw	88
   203  0810  3463               	retlw	99
   204  0811  343D               	retlw	61
   205  0812  3495               	retlw	149
   206  0813  341D               	retlw	29
   207  0814  343C               	retlw	60
   208  0815  34C5               	retlw	197
   209  0816  34AE               	retlw	174
   210  0817  343A               	retlw	58
   211  0818  3479               	retlw	121
   212  0819  3421               	retlw	33
   213  081A  3439               	retlw	57
   214  081B  3494               	retlw	148
   215  081C  3480               	retlw	128
   216  081D  3437               	retlw	55
   217  081E  3493               	retlw	147
   218  081F  34A7               	retlw	167
   219  0820  3435               	retlw	53
   220  0821  3456               	retlw	86
   221  0822  3415               	retlw	21
   222  0823  3434               	retlw	52
   223  0824                     __end_ofexp@coeff:	
   224  0824                     log@coeff:	
   225  0824  3400               	retlw	0
   226  0825  3400               	retlw	0
   227  0826  3400               	retlw	0
   228  0827  3400               	retlw	0
   229  0828  3480               	retlw	128
   230  0829  343F               	retlw	63
   231  082A  34F0               	retlw	240
   232  082B  34FF               	retlw	255
   233  082C  34BE               	retlw	190
   234  082D  34E2               	retlw	226
   235  082E  34A9               	retlw	169
   236  082F  343E               	retlw	62
   237  0830  3483               	retlw	131
   238  0831  3476               	retlw	118
   239  0832  34BE               	retlw	190
   240  0833  34AE               	retlw	174
   241  0834  342B               	retlw	43
   242  0835  343E               	retlw	62
   243  0836  343C               	retlw	60
   244  0837  34C3               	retlw	195
   245  0838  34BD               	retlw	189
   246  0839  34D2               	retlw	210
   247  083A  3413               	retlw	19
   248  083B  343D               	retlw	61
   249  083C  3478               	retlw	120
   250  083D  34D3               	retlw	211
   251  083E  34BB               	retlw	187
   252  083F                     __end_oflog@coeff:	
   253  0008                     _PORTD	set	8
   254  0006                     _PORTBbits	set	6
   255  0008                     _PORTDbits	set	8
   256  0007                     _PORTC	set	7
   257  000B                     _INTCONbits	set	11
   258  0088                     _TRISD	set	136
   259  0086                     _TRISB	set	134
   260  0087                     _TRISC	set	135
   261  0189                     _ANSELH	set	393
   262  0188                     _ANSEL	set	392
   263                           
   264                           ; #config settings
   265  0000                     
   266                           	psect	cinit
   267  0015                     start_initialization:	
   268  0015                     __initialization:	
   269                           
   270                           ; Initialize objects allocated to BANK1
   271  0015  1683               	bsf	3,5	;RP0=1, select bank1
   272  0016  1303               	bcf	3,6	;RP1=0, select bank1
   273  0017  120A  158A  239B  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   274  001C  00B2               	movwf	__pdataBANK1& (0+127)
   275  001D  120A  158A  239C  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   276  0022  00B3               	movwf	(__pdataBANK1+1)& (0+127)
   277  0023  120A  158A  239D  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   278  0028  00B4               	movwf	(__pdataBANK1+2)& (0+127)
   279  0029  120A  158A  239E  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   280  002E  00B5               	movwf	(__pdataBANK1+3)& (0+127)
   281                           
   282                           ; Initialize objects allocated to COMMON
   283  002F  120A  158A  239F  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   284  0034  00F6               	movwf	__pdataCOMMON& (0+127)
   285  0035  120A  158A  23A0  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   286  003A  00F7               	movwf	(__pdataCOMMON+1)& (0+127)
   287  003B  120A  158A  23A1  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   288  0040  00F8               	movwf	(__pdataCOMMON+2)& (0+127)
   289  0041  120A  158A  23A2   	fcall	__pidataCOMMON+3	;fetch initializer
   290  0044  00F9               	movwf	(__pdataCOMMON+3)& (0+127)
   291                           
   292                           ; Clear objects allocated to COMMON
   293  0045  01FA               	clrf	__pbssCOMMON& (0+127)
   294  0046  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   295  0047                     end_of_initialization:	
   296                           ;End of C runtime variable initialization code
   297                           
   298  0047                     __end_of__initialization:	
   299  0047  0183               	clrf	3
   300  0048  120A  118A  2BD7   	ljmp	_main	;jump to C main() function
   301                           
   302                           	psect	bssCOMMON
   303  007A                     __pbssCOMMON:	
   304  007A                     _errno:	
   305  007A                     	ds	2
   306                           
   307                           	psect	dataCOMMON
   308  0076                     __pdataCOMMON:	
   309  0076                     _randx:	
   310  0076                     	ds	4
   311                           
   312                           	psect	dataBANK1
   313  00B2                     __pdataBANK1:	
   314  00B2                     _GATO:	
   315  00B2                     	ds	2
   316  00B4                     _RATON:	
   317  00B4                     	ds	2
   318                           
   319                           	psect	cstackBANK1
   320  00A0                     __pcstackBANK1:	
   321  00A0                     _pow$644:	
   322                           
   323                           ; 3 bytes @ 0x0
   324  00A0                     	ds	3
   325  00A3                     _pow$645:	
   326                           
   327                           ; 3 bytes @ 0x3
   328  00A3                     	ds	3
   329  00A6                     pow@sign:	
   330                           
   331                           ; 1 bytes @ 0x6
   332  00A6                     	ds	1
   333  00A7                     pow@yi:	
   334                           
   335                           ; 4 bytes @ 0x7
   336  00A7                     	ds	4
   337  00AB                     _main$643:	
   338                           
   339                           ; 3 bytes @ 0xB
   340  00AB                     	ds	3
   341  00AE                     main@aux:	
   342                           
   343                           ; 2 bytes @ 0xE
   344  00AE                     	ds	2
   345  00B0                     main@aux2:	
   346                           
   347                           ; 2 bytes @ 0x10
   348  00B0                     	ds	2
   349                           
   350                           	psect	cstackCOMMON
   351  0070                     __pcstackCOMMON:	
   352  0070                     ?_isr:	
   353  0070                     ??_isr:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_validar:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_main:	
   360                           ; 1 bytes @ 0x0
   361                           
   362                           
   363                           ; 1 bytes @ 0x0
   364  0070                     	ds	6
   365                           
   366                           	psect	cstackBANK0
   367  0020                     __pcstackBANK0:	
   368  0020                     ?___ftge:	
   369  0020                     ??_validar:	
   370                           ; 1 bit 
   371                           
   372  0020                     ?___bmul:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0020                     ?___ftpack:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0020                     ?_frexp:	
   379                           ; 3 bytes @ 0x0
   380                           
   381  0020                     ?___ftneg:	
   382                           ; 3 bytes @ 0x0
   383                           
   384  0020                     ?___lmul:	
   385                           ; 3 bytes @ 0x0
   386                           
   387  0020                     ___bmul@multiplicand:	
   388                           ; 4 bytes @ 0x0
   389                           
   390  0020                     ___ftpack@arg:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0020                     ___ftge@ff1:	
   394                           ; 3 bytes @ 0x0
   395                           
   396  0020                     ___ftneg@f1:	
   397                           ; 3 bytes @ 0x0
   398                           
   399  0020                     frexp@value:	
   400                           ; 3 bytes @ 0x0
   401                           
   402  0020                     ___lmul@multiplier:	
   403                           ; 3 bytes @ 0x0
   404                           
   405                           
   406                           ; 4 bytes @ 0x0
   407  0020                     	ds	1
   408  0021                     ??___bmul:	
   409                           
   410                           ; 1 bytes @ 0x1
   411  0021                     	ds	1
   412  0022                     ___bmul@product:	
   413                           
   414                           ; 1 bytes @ 0x2
   415  0022                     	ds	1
   416  0023                     ??___ftneg:	
   417  0023                     ___bmul@multiplier:	
   418                           ; 1 bytes @ 0x3
   419                           
   420  0023                     ___ftpack@exp:	
   421                           ; 1 bytes @ 0x3
   422                           
   423  0023                     frexp@eptr:	
   424                           ; 1 bytes @ 0x3
   425                           
   426  0023                     ___ftge@ff2:	
   427                           ; 1 bytes @ 0x3
   428                           
   429                           
   430                           ; 3 bytes @ 0x3
   431  0023                     	ds	1
   432  0024                     ??_frexp:	
   433  0024                     ___ftpack@sign:	
   434                           ; 1 bytes @ 0x4
   435                           
   436  0024                     ___lmul@multiplicand:	
   437                           ; 1 bytes @ 0x4
   438                           
   439                           
   440                           ; 4 bytes @ 0x4
   441  0024                     	ds	1
   442  0025                     ??___ftpack:	
   443                           
   444                           ; 1 bytes @ 0x5
   445  0025                     	ds	1
   446  0026                     ??___ftge:	
   447                           
   448                           ; 1 bytes @ 0x6
   449  0026                     	ds	2
   450  0028                     ??___lmul:	
   451  0028                     ?___awtoft:	
   452                           ; 1 bytes @ 0x8
   453                           
   454  0028                     ?___ftdiv:	
   455                           ; 3 bytes @ 0x8
   456                           
   457  0028                     ?___lltoft:	
   458                           ; 3 bytes @ 0x8
   459                           
   460  0028                     ?___lwtoft:	
   461                           ; 3 bytes @ 0x8
   462                           
   463  0028                     ___awtoft@c:	
   464                           ; 3 bytes @ 0x8
   465                           
   466  0028                     ___lwtoft@c:	
   467                           ; 2 bytes @ 0x8
   468                           
   469  0028                     ___ftdiv@f2:	
   470                           ; 2 bytes @ 0x8
   471                           
   472  0028                     ___lltoft@c:	
   473                           ; 3 bytes @ 0x8
   474                           
   475                           
   476                           ; 4 bytes @ 0x8
   477  0028                     	ds	1
   478  0029                     ___lmul@product:	
   479                           
   480                           ; 4 bytes @ 0x9
   481  0029                     	ds	2
   482  002B                     ??___awtoft:	
   483  002B                     ??___lwtoft:	
   484                           ; 1 bytes @ 0xB
   485                           
   486  002B                     ___ftdiv@f1:	
   487                           ; 1 bytes @ 0xB
   488                           
   489                           
   490                           ; 3 bytes @ 0xB
   491  002B                     	ds	1
   492  002C                     ??___lltoft:	
   493  002C                     ?___fttol:	
   494                           ; 1 bytes @ 0xC
   495                           
   496  002C                     ___fttol@f1:	
   497                           ; 4 bytes @ 0xC
   498                           
   499                           
   500                           ; 3 bytes @ 0xC
   501  002C                     	ds	1
   502  002D                     ?_rand:	
   503  002D                     ___awtoft@sign:	
   504                           ; 2 bytes @ 0xD
   505                           
   506  002D                     ___lltoft@exp:	
   507                           ; 1 bytes @ 0xD
   508                           
   509                           
   510                           ; 1 bytes @ 0xD
   511  002D                     	ds	1
   512  002E                     ??___ftdiv:	
   513  002E                     ?___ftmul:	
   514                           ; 1 bytes @ 0xE
   515                           
   516  002E                     ___ftmul@f1:	
   517                           ; 3 bytes @ 0xE
   518                           
   519                           
   520                           ; 3 bytes @ 0xE
   521  002E                     	ds	1
   522  002F                     ??_rand:	
   523                           
   524                           ; 1 bytes @ 0xF
   525  002F                     	ds	1
   526  0030                     ??___fttol:	
   527                           
   528                           ; 1 bytes @ 0x10
   529  0030                     	ds	1
   530  0031                     ___ftmul@f2:	
   531                           
   532                           ; 3 bytes @ 0x11
   533  0031                     	ds	1
   534  0032                     ___ftdiv@cntr:	
   535                           
   536                           ; 1 bytes @ 0x12
   537  0032                     	ds	1
   538  0033                     ___ftdiv@f3:	
   539                           
   540                           ; 3 bytes @ 0x13
   541  0033                     	ds	1
   542  0034                     ??___ftmul:	
   543  0034                     ?___awmod:	
   544                           ; 1 bytes @ 0x14
   545                           
   546  0034                     ___fttol@sign1:	
   547                           ; 2 bytes @ 0x14
   548                           
   549  0034                     ___awmod@divisor:	
   550                           ; 1 bytes @ 0x14
   551                           
   552                           
   553                           ; 2 bytes @ 0x14
   554  0034                     	ds	1
   555  0035                     ___fttol@lval:	
   556                           
   557                           ; 4 bytes @ 0x15
   558  0035                     	ds	1
   559  0036                     ___ftdiv@exp:	
   560  0036                     ___awmod@dividend:	
   561                           ; 1 bytes @ 0x16
   562                           
   563                           
   564                           ; 2 bytes @ 0x16
   565  0036                     	ds	1
   566  0037                     ___ftdiv@sign:	
   567                           
   568                           ; 1 bytes @ 0x17
   569  0037                     	ds	1
   570  0038                     ??___awmod:	
   571  0038                     ___ftmul@exp:	
   572                           ; 1 bytes @ 0x18
   573                           
   574                           
   575                           ; 1 bytes @ 0x18
   576  0038                     	ds	1
   577  0039                     ___awmod@counter:	
   578  0039                     ___fttol@exp1:	
   579                           ; 1 bytes @ 0x19
   580                           
   581  0039                     ___ftmul@f3_as_product:	
   582                           ; 1 bytes @ 0x19
   583                           
   584                           
   585                           ; 3 bytes @ 0x19
   586  0039                     	ds	1
   587  003A                     ?___altoft:	
   588  003A                     ___awmod@sign:	
   589                           ; 3 bytes @ 0x1A
   590                           
   591  003A                     ___altoft@c:	
   592                           ; 1 bytes @ 0x1A
   593                           
   594                           
   595                           ; 4 bytes @ 0x1A
   596  003A                     	ds	2
   597  003C                     ___ftmul@cntr:	
   598                           
   599                           ; 1 bytes @ 0x1C
   600  003C                     	ds	1
   601  003D                     ___ftmul@sign:	
   602                           
   603                           ; 1 bytes @ 0x1D
   604  003D                     	ds	1
   605  003E                     ??___altoft:	
   606  003E                     ?___ftadd:	
   607                           ; 1 bytes @ 0x1E
   608                           
   609  003E                     ___ftadd@f1:	
   610                           ; 3 bytes @ 0x1E
   611                           
   612                           
   613                           ; 3 bytes @ 0x1E
   614  003E                     	ds	2
   615  0040                     ___altoft@exp:	
   616                           
   617                           ; 1 bytes @ 0x20
   618  0040                     	ds	1
   619  0041                     ___altoft@sign:	
   620  0041                     ___ftadd@f2:	
   621                           ; 1 bytes @ 0x21
   622                           
   623                           
   624                           ; 3 bytes @ 0x21
   625  0041                     	ds	3
   626  0044                     ??___ftadd:	
   627                           
   628                           ; 1 bytes @ 0x24
   629  0044                     	ds	4
   630  0048                     ___ftadd@sign:	
   631                           
   632                           ; 1 bytes @ 0x28
   633  0048                     	ds	1
   634  0049                     ___ftadd@exp2:	
   635                           
   636                           ; 1 bytes @ 0x29
   637  0049                     	ds	1
   638  004A                     ___ftadd@exp1:	
   639                           
   640                           ; 1 bytes @ 0x2A
   641  004A                     	ds	1
   642  004B                     ?_floor:	
   643  004B                     ?_eval_poly:	
   644                           ; 3 bytes @ 0x2B
   645                           
   646  004B                     ?___ftsub:	
   647                           ; 3 bytes @ 0x2B
   648                           
   649  004B                     ___ftsub@f2:	
   650                           ; 3 bytes @ 0x2B
   651                           
   652  004B                     floor@x:	
   653                           ; 3 bytes @ 0x2B
   654                           
   655  004B                     eval_poly@x:	
   656                           ; 3 bytes @ 0x2B
   657                           
   658                           
   659                           ; 3 bytes @ 0x2B
   660  004B                     	ds	3
   661  004E                     ??_floor:	
   662  004E                     eval_poly@d:	
   663                           ; 1 bytes @ 0x2E
   664                           
   665  004E                     ___ftsub@f1:	
   666                           ; 1 bytes @ 0x2E
   667                           
   668                           
   669                           ; 3 bytes @ 0x2E
   670  004E                     	ds	1
   671  004F                     eval_poly@n:	
   672  004F                     floor@i:	
   673                           ; 2 bytes @ 0x2F
   674                           
   675                           
   676                           ; 3 bytes @ 0x2F
   677  004F                     	ds	2
   678  0051                     ??_eval_poly:	
   679  0051                     ??___ftsub:	
   680                           ; 1 bytes @ 0x31
   681                           
   682                           
   683                           ; 1 bytes @ 0x31
   684  0051                     	ds	1
   685  0052                     floor@expon:	
   686  0052                     eval_poly@res:	
   687                           ; 2 bytes @ 0x32
   688                           
   689                           
   690                           ; 3 bytes @ 0x32
   691  0052                     	ds	3
   692  0055                     ?_log:	
   693  0055                     ?_ldexp:	
   694                           ; 3 bytes @ 0x35
   695                           
   696  0055                     ldexp@value:	
   697                           ; 3 bytes @ 0x35
   698                           
   699  0055                     log@x:	
   700                           ; 3 bytes @ 0x35
   701                           
   702                           
   703                           ; 3 bytes @ 0x35
   704  0055                     	ds	3
   705  0058                     ??_log:	
   706  0058                     ldexp@newexp:	
   707                           ; 1 bytes @ 0x38
   708                           
   709                           
   710                           ; 2 bytes @ 0x38
   711  0058                     	ds	1
   712  0059                     log@exponent:	
   713                           
   714                           ; 2 bytes @ 0x39
   715  0059                     	ds	1
   716  005A                     ??_ldexp:	
   717                           
   718                           ; 1 bytes @ 0x3A
   719  005A                     	ds	2
   720  005C                     ?_exp:	
   721  005C                     exp@x:	
   722                           ; 3 bytes @ 0x3C
   723                           
   724                           
   725                           ; 3 bytes @ 0x3C
   726  005C                     	ds	3
   727  005F                     ??_exp:	
   728                           
   729                           ; 1 bytes @ 0x3F
   730  005F                     	ds	1
   731  0060                     _exp$646:	
   732                           
   733                           ; 3 bytes @ 0x40
   734  0060                     	ds	3
   735  0063                     exp@exponent:	
   736                           
   737                           ; 2 bytes @ 0x43
   738  0063                     	ds	2
   739  0065                     exp@sign:	
   740                           
   741                           ; 1 bytes @ 0x45
   742  0065                     	ds	1
   743  0066                     ?_pow:	
   744  0066                     pow@x:	
   745                           ; 3 bytes @ 0x46
   746                           
   747                           
   748                           ; 3 bytes @ 0x46
   749  0066                     	ds	3
   750  0069                     pow@y:	
   751                           
   752                           ; 3 bytes @ 0x49
   753  0069                     	ds	3
   754  006C                     ??_pow:	
   755                           
   756                           ; 1 bytes @ 0x4C
   757  006C                     	ds	1
   758  006D                     ??_main:	
   759                           
   760                           ; 1 bytes @ 0x4D
   761  006D                     	ds	2
   762                           
   763                           	psect	maintext
   764  03D7                     __pmaintext:	
   765 ;;
   766 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   767 ;;
   768 ;; *************** function _main *****************
   769 ;; Defined at:
   770 ;;		line 62 in file "jgatoraton1.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  aux2            2   16[BANK1 ] int 
   775 ;;  aux             2   14[BANK1 ] int 
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : B00/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         0       0       7       0       0
   787 ;;      Temps:          0       2       0       0       0
   788 ;;      Totals:         0       2       7       0       0
   789 ;;Total ram usage:        9 bytes
   790 ;; Hardware stack levels required when called:    6
   791 ;; This function calls:
   792 ;;		___awmod
   793 ;;		___fttol
   794 ;;		___lwtoft
   795 ;;		_pow
   796 ;;		_rand
   797 ;;		_validar
   798 ;; This function is called by:
   799 ;;		Startup code after reset
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           
   804                           ;psect for function _main
   805  03D7                     _main:	
   806                           
   807                           ;jgatoraton1.c: 63: TRISC = 0;
   808                           
   809                           ;incstack = 0
   810                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   811  03D7  1683               	bsf	3,5	;RP0=1, select bank1
   812  03D8  1303               	bcf	3,6	;RP1=0, select bank1
   813  03D9  0187               	clrf	7	;volatile
   814                           
   815                           ;jgatoraton1.c: 64: PORTC = 1;
   816  03DA  3001               	movlw	1
   817  03DB  1283               	bcf	3,5	;RP0=0, select bank0
   818  03DC  1303               	bcf	3,6	;RP1=0, select bank0
   819  03DD  0087               	movwf	7	;volatile
   820                           
   821                           ;jgatoraton1.c: 65: TRISB = 0xFF;
   822  03DE  30FF               	movlw	255
   823  03DF  1683               	bsf	3,5	;RP0=1, select bank1
   824  03E0  1303               	bcf	3,6	;RP1=0, select bank1
   825  03E1  0086               	movwf	6	;volatile
   826                           
   827                           ;jgatoraton1.c: 66: ANSEL = 0;
   828  03E2  1683               	bsf	3,5	;RP0=1, select bank3
   829  03E3  1703               	bsf	3,6	;RP1=1, select bank3
   830  03E4  0188               	clrf	8	;volatile
   831                           
   832                           ;jgatoraton1.c: 67: ANSELH = 0;
   833  03E5  0189               	clrf	9	;volatile
   834                           
   835                           ;jgatoraton1.c: 68: TRISD = 0;
   836  03E6  1683               	bsf	3,5	;RP0=1, select bank1
   837  03E7  1303               	bcf	3,6	;RP1=0, select bank1
   838  03E8  0188               	clrf	8	;volatile
   839                           
   840                           ;jgatoraton1.c: 69: PORTD = 0;
   841  03E9  1283               	bcf	3,5	;RP0=0, select bank0
   842  03EA  1303               	bcf	3,6	;RP1=0, select bank0
   843  03EB  0188               	clrf	8	;volatile
   844                           
   845                           ;jgatoraton1.c: 71: INTCONbits.GIE = 1;
   846  03EC  178B               	bsf	11,7	;volatile
   847                           
   848                           ;jgatoraton1.c: 73: INTCONbits.INTE = 1;
   849  03ED  160B               	bsf	11,4	;volatile
   850                           
   851                           ;jgatoraton1.c: 75: int aux;
   852                           ;jgatoraton1.c: 76: int aux2=0;
   853  03EE  1683               	bsf	3,5	;RP0=1, select bank1
   854  03EF  1303               	bcf	3,6	;RP1=0, select bank1
   855  03F0  01B0               	clrf	main@aux2^(0+128)
   856  03F1  01B1               	clrf	(main@aux2+1)^(0+128)
   857  03F2                     l2447:	
   858                           ;jgatoraton1.c: 79: do
   859                           
   860                           ;jgatoraton1.c: 77: while (1){
   861                           
   862                           
   863                           ;jgatoraton1.c: 80: {RATON = rand()%7;
   864  03F2  3007               	movlw	7
   865  03F3  1283               	bcf	3,5	;RP0=0, select bank0
   866  03F4  1303               	bcf	3,6	;RP1=0, select bank0
   867  03F5  00B4               	movwf	___awmod@divisor
   868  03F6  3000               	movlw	0
   869  03F7  00B5               	movwf	___awmod@divisor+1
   870  03F8  120A  158A  2575  120A  118A  	fcall	_rand
   871  03FD  1283               	bcf	3,5	;RP0=0, select bank0
   872  03FE  1303               	bcf	3,6	;RP1=0, select bank0
   873  03FF  082E               	movf	?_rand+1,w
   874  0400  00B7               	movwf	___awmod@dividend+1
   875  0401  082D               	movf	?_rand,w
   876  0402  00B6               	movwf	___awmod@dividend
   877  0403  120A  158A  25BC  120A  118A  	fcall	___awmod
   878  0408  1283               	bcf	3,5	;RP0=0, select bank0
   879  0409  1303               	bcf	3,6	;RP1=0, select bank0
   880  040A  0835               	movf	?___awmod+1,w
   881  040B  1683               	bsf	3,5	;RP0=1, select bank1
   882  040C  1303               	bcf	3,6	;RP1=0, select bank1
   883  040D  00B5               	movwf	(_RATON+1)^(0+128)
   884  040E  1283               	bcf	3,5	;RP0=0, select bank0
   885  040F  1303               	bcf	3,6	;RP1=0, select bank0
   886  0410  0834               	movf	?___awmod,w
   887  0411  1683               	bsf	3,5	;RP0=1, select bank1
   888  0412  1303               	bcf	3,6	;RP1=0, select bank1
   889  0413  00B4               	movwf	_RATON^(0+128)
   890                           
   891                           ;jgatoraton1.c: 81: RATON = pow(2, RATON);
   892  0414  0835               	movf	(_RATON+1)^(0+128),w
   893  0415  1283               	bcf	3,5	;RP0=0, select bank0
   894  0416  1303               	bcf	3,6	;RP1=0, select bank0
   895  0417  00A9               	movwf	___lwtoft@c+1
   896  0418  1683               	bsf	3,5	;RP0=1, select bank1
   897  0419  1303               	bcf	3,6	;RP1=0, select bank1
   898  041A  0834               	movf	_RATON^(0+128),w
   899  041B  1283               	bcf	3,5	;RP0=0, select bank0
   900  041C  1303               	bcf	3,6	;RP1=0, select bank0
   901  041D  00A8               	movwf	___lwtoft@c
   902  041E  120A  158A  23C0  120A  118A  	fcall	___lwtoft
   903  0423  1283               	bcf	3,5	;RP0=0, select bank0
   904  0424  1303               	bcf	3,6	;RP1=0, select bank0
   905  0425  0828               	movf	?___lwtoft,w
   906  0426  00E9               	movwf	pow@y
   907  0427  0829               	movf	?___lwtoft+1,w
   908  0428  00EA               	movwf	pow@y+1
   909  0429  082A               	movf	?___lwtoft+2,w
   910  042A  00EB               	movwf	pow@y+2
   911  042B  3000               	movlw	0
   912  042C  00E6               	movwf	pow@x
   913  042D  3000               	movlw	0
   914  042E  00E7               	movwf	pow@x+1
   915  042F  3040               	movlw	64
   916  0430  00E8               	movwf	pow@x+2
   917  0431  120A  118A  204B  120A  118A  	fcall	_pow
   918  0436  1283               	bcf	3,5	;RP0=0, select bank0
   919  0437  1303               	bcf	3,6	;RP1=0, select bank0
   920  0438  0866               	movf	?_pow,w
   921  0439  1683               	bsf	3,5	;RP0=1, select bank1
   922  043A  1303               	bcf	3,6	;RP1=0, select bank1
   923  043B  00AB               	movwf	_main$643^(0+128)
   924  043C  1283               	bcf	3,5	;RP0=0, select bank0
   925  043D  1303               	bcf	3,6	;RP1=0, select bank0
   926  043E  0867               	movf	?_pow+1,w
   927  043F  1683               	bsf	3,5	;RP0=1, select bank1
   928  0440  1303               	bcf	3,6	;RP1=0, select bank1
   929  0441  00AC               	movwf	(_main$643+1)^(0+128)
   930  0442  1283               	bcf	3,5	;RP0=0, select bank0
   931  0443  1303               	bcf	3,6	;RP1=0, select bank0
   932  0444  0868               	movf	?_pow+2,w
   933  0445  1683               	bsf	3,5	;RP0=1, select bank1
   934  0446  1303               	bcf	3,6	;RP1=0, select bank1
   935  0447  00AD               	movwf	(_main$643+2)^(0+128)
   936                           
   937                           ;jgatoraton1.c: 81: RATON = pow(2, RATON);
   938  0448  082B               	movf	_main$643^(0+128),w
   939  0449  1283               	bcf	3,5	;RP0=0, select bank0
   940  044A  1303               	bcf	3,6	;RP1=0, select bank0
   941  044B  00AC               	movwf	___fttol@f1
   942  044C  1683               	bsf	3,5	;RP0=1, select bank1
   943  044D  1303               	bcf	3,6	;RP1=0, select bank1
   944  044E  082C               	movf	(_main$643+1)^(0+128),w
   945  044F  1283               	bcf	3,5	;RP0=0, select bank0
   946  0450  1303               	bcf	3,6	;RP1=0, select bank0
   947  0451  00AD               	movwf	___fttol@f1+1
   948  0452  1683               	bsf	3,5	;RP0=1, select bank1
   949  0453  1303               	bcf	3,6	;RP1=0, select bank1
   950  0454  082D               	movf	(_main$643+2)^(0+128),w
   951  0455  1283               	bcf	3,5	;RP0=0, select bank0
   952  0456  1303               	bcf	3,6	;RP1=0, select bank0
   953  0457  00AE               	movwf	___fttol@f1+2
   954  0458  120A  158A  2772  120A  118A  	fcall	___fttol
   955  045D  1283               	bcf	3,5	;RP0=0, select bank0
   956  045E  1303               	bcf	3,6	;RP1=0, select bank0
   957  045F  082D               	movf	?___fttol+1,w
   958  0460  1683               	bsf	3,5	;RP0=1, select bank1
   959  0461  1303               	bcf	3,6	;RP1=0, select bank1
   960  0462  00B5               	movwf	(_RATON+1)^(0+128)
   961  0463  1283               	bcf	3,5	;RP0=0, select bank0
   962  0464  1303               	bcf	3,6	;RP1=0, select bank0
   963  0465  082C               	movf	?___fttol,w
   964  0466  1683               	bsf	3,5	;RP0=1, select bank1
   965  0467  1303               	bcf	3,6	;RP1=0, select bank1
   966  0468  00B4               	movwf	_RATON^(0+128)
   967                           
   968                           ;jgatoraton1.c: 82: }while(RATON == GATO);
   969  0469  0833               	movf	(_GATO+1)^(0+128),w
   970  046A  0635               	xorwf	(_RATON+1)^(0+128),w
   971  046B  1D03               	skipz
   972  046C  2C6F               	goto	u3705
   973  046D  0832               	movf	_GATO^(0+128),w
   974  046E  0634               	xorwf	_RATON^(0+128),w
   975  046F                     u3705:	
   976  046F  1903               	skipnz
   977  0470  2BF2               	goto	l2447
   978                           
   979                           ;jgatoraton1.c: 83: aux = 0;
   980  0471  01AE               	clrf	main@aux^(0+128)
   981  0472  01AF               	clrf	(main@aux+1)^(0+128)
   982  0473                     l2473:	
   983                           ;jgatoraton1.c: 84: while(aux<5){
   984                           
   985  0473  082F               	movf	(main@aux+1)^(0+128),w
   986  0474  3A80               	xorlw	128
   987  0475  00FF               	movwf	127
   988  0476  3080               	movlw	128
   989  0477  027F               	subwf	127,w
   990  0478  1D03               	skipz
   991  0479  2C7C               	goto	u3715
   992  047A  3005               	movlw	5
   993  047B  022E               	subwf	main@aux^(0+128),w
   994  047C                     u3715:	
   995  047C  1803               	btfsc	3,0
   996  047D  2BF2               	goto	l2447
   997                           
   998                           ;jgatoraton1.c: 85: validar();
   999  047E  120A  158A  2532  120A  118A  	fcall	_validar
  1000                           
  1001                           ;jgatoraton1.c: 86: _delay((unsigned long)((50)*(4000000/4000.0)));
  1002  0483  3041               	movlw	65
  1003  0484  1283               	bcf	3,5	;RP0=0, select bank0
  1004  0485  1303               	bcf	3,6	;RP1=0, select bank0
  1005  0486  00EE               	movwf	??_main+1
  1006  0487  30ED               	movlw	237
  1007  0488  00ED               	movwf	??_main
  1008  0489                     u3727:	
  1009  0489  0BED               	decfsz	??_main,f
  1010  048A  2C89               	goto	u3727
  1011  048B  0BEE               	decfsz	??_main+1,f
  1012  048C  2C89               	goto	u3727
  1013  048D  2C8E               	nop2
  1014                           
  1015                           ;jgatoraton1.c: 87: aux2 = RATON;
  1016  048E  1683               	bsf	3,5	;RP0=1, select bank1
  1017  048F  1303               	bcf	3,6	;RP1=0, select bank1
  1018  0490  0835               	movf	(_RATON+1)^(0+128),w
  1019  0491  00B1               	movwf	(main@aux2+1)^(0+128)
  1020  0492  0834               	movf	_RATON^(0+128),w
  1021  0493  00B0               	movwf	main@aux2^(0+128)
  1022                           
  1023                           ;jgatoraton1.c: 88: RATON = 0;
  1024  0494  01B4               	clrf	_RATON^(0+128)
  1025  0495  01B5               	clrf	(_RATON+1)^(0+128)
  1026                           
  1027                           ;jgatoraton1.c: 89: validar();
  1028  0496  120A  158A  2532  120A  118A  	fcall	_validar
  1029                           
  1030                           ;jgatoraton1.c: 90: _delay((unsigned long)((50)*(4000000/4000.0)));
  1031  049B  3041               	movlw	65
  1032  049C  1283               	bcf	3,5	;RP0=0, select bank0
  1033  049D  1303               	bcf	3,6	;RP1=0, select bank0
  1034  049E  00EE               	movwf	??_main+1
  1035  049F  30ED               	movlw	237
  1036  04A0  00ED               	movwf	??_main
  1037  04A1                     u3737:	
  1038  04A1  0BED               	decfsz	??_main,f
  1039  04A2  2CA1               	goto	u3737
  1040  04A3  0BEE               	decfsz	??_main+1,f
  1041  04A4  2CA1               	goto	u3737
  1042  04A5  2CA6               	nop2
  1043                           
  1044                           ;jgatoraton1.c: 91: RATON = aux2;
  1045  04A6  1683               	bsf	3,5	;RP0=1, select bank1
  1046  04A7  1303               	bcf	3,6	;RP1=0, select bank1
  1047  04A8  0831               	movf	(main@aux2+1)^(0+128),w
  1048  04A9  00B5               	movwf	(_RATON+1)^(0+128)
  1049  04AA  0830               	movf	main@aux2^(0+128),w
  1050  04AB  00B4               	movwf	_RATON^(0+128)
  1051                           
  1052                           ;jgatoraton1.c: 92: aux++;
  1053  04AC  3001               	movlw	1
  1054  04AD  07AE               	addwf	main@aux^(0+128),f
  1055  04AE  1803               	skipnc
  1056  04AF  0AAF               	incf	(main@aux+1)^(0+128),f
  1057  04B0  3000               	movlw	0
  1058  04B1  07AF               	addwf	(main@aux+1)^(0+128),f
  1059  04B2  2C73               	goto	l2473
  1060  04B3                     __end_of_main:	
  1061                           
  1062                           	psect	text1
  1063  0D32                     __ptext1:	
  1064 ;; *************** function _validar *****************
  1065 ;; Defined at:
  1066 ;;		line 41 in file "jgatoraton1.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;		None
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, status,2, status,0
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1080 ;;      Params:         0       0       0       0       0
  1081 ;;      Locals:         0       0       0       0       0
  1082 ;;      Temps:          0       3       0       0       0
  1083 ;;      Totals:         0       3       0       0       0
  1084 ;;Total ram usage:        3 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; Hardware stack levels required when called:    1
  1087 ;; This function calls:
  1088 ;;		Nothing
  1089 ;; This function is called by:
  1090 ;;		_main
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           
  1095                           ;psect for function _validar
  1096  0D32                     _validar:	
  1097                           
  1098                           ;jgatoraton1.c: 42: if(RATON==GATO){
  1099                           
  1100                           ;incstack = 0
  1101                           ; Regs used in _validar: [wreg+status,2+status,0]
  1102  0D32  1683               	bsf	3,5	;RP0=1, select bank1
  1103  0D33  1303               	bcf	3,6	;RP1=0, select bank1
  1104  0D34  0833               	movf	(_GATO+1)^(0+128),w
  1105  0D35  0635               	xorwf	(_RATON+1)^(0+128),w
  1106  0D36  1D03               	skipz
  1107  0D37  2D3A               	goto	u2415
  1108  0D38  0832               	movf	_GATO^(0+128),w
  1109  0D39  0634               	xorwf	_RATON^(0+128),w
  1110  0D3A                     u2415:	
  1111  0D3A  1D03               	skipz
  1112  0D3B  2D53               	goto	l40
  1113                           
  1114                           ;jgatoraton1.c: 43: PORTC = RATON;
  1115  0D3C  0834               	movf	_RATON^(0+128),w
  1116  0D3D  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0D3E  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0D3F  0087               	movwf	7	;volatile
  1119                           
  1120                           ;jgatoraton1.c: 44: PORTDbits.RD0 = 1;
  1121  0D40  1408               	bsf	8,0	;volatile
  1122                           
  1123                           ;jgatoraton1.c: 45: _delay((unsigned long)((3000)*(4000000/4000.0)));
  1124  0D41  3010               	movlw	16
  1125  0D42  1283               	bcf	3,5	;RP0=0, select bank0
  1126  0D43  1303               	bcf	3,6	;RP1=0, select bank0
  1127  0D44  00A2               	movwf	??_validar+2
  1128  0D45  3039               	movlw	57
  1129  0D46  00A1               	movwf	??_validar+1
  1130  0D47  300D               	movlw	13
  1131  0D48  00A0               	movwf	??_validar
  1132  0D49                     u3747:	
  1133  0D49  0BA0               	decfsz	??_validar,f
  1134  0D4A  2D49               	goto	u3747
  1135  0D4B  0BA1               	decfsz	??_validar+1,f
  1136  0D4C  2D49               	goto	u3747
  1137  0D4D  0BA2               	decfsz	??_validar+2,f
  1138  0D4E  2D49               	goto	u3747
  1139                           
  1140                           ;jgatoraton1.c: 46: PORTDbits.RD0 = 0;
  1141  0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0D50  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0D51  1008               	bcf	8,0	;volatile
  1144                           
  1145                           ;jgatoraton1.c: 47: }
  1146  0D52  2D6D               	goto	l41
  1147  0D53                     l40:	
  1148                           
  1149                           ;jgatoraton1.c: 48: else if(PORTBbits.RB7 == 1)
  1150  0D53  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0D54  1303               	bcf	3,6	;RP1=0, select bank0
  1152  0D55  1F86               	btfss	6,7	;volatile
  1153  0D56  2D66               	goto	l1807
  1154  0D57                     l43:	
  1155                           ;jgatoraton1.c: 50: {
  1156                           ;jgatoraton1.c: 51: do{}while(PORTBbits.RB7!=0);
  1157                           
  1158  0D57  1B86               	btfsc	6,7	;volatile
  1159  0D58  2D57               	goto	l43
  1160                           
  1161                           ;jgatoraton1.c: 52: if(GATO!=128)
  1162  0D59  3080               	movlw	128
  1163  0D5A  1683               	bsf	3,5	;RP0=1, select bank1
  1164  0D5B  1303               	bcf	3,6	;RP1=0, select bank1
  1165  0D5C  0632               	xorwf	_GATO^(0+128),w
  1166  0D5D  0433               	iorwf	(_GATO+1)^(0+128),w
  1167  0D5E  1903               	btfsc	3,2
  1168  0D5F  2D6D               	goto	l41
  1169                           
  1170                           ;jgatoraton1.c: 53: GATO = GATO*2;
  1171  0D60  1003               	clrc
  1172  0D61  0D32               	rlf	_GATO^(0+128),w
  1173  0D62  00B2               	movwf	_GATO^(0+128)
  1174  0D63  0D33               	rlf	(_GATO+1)^(0+128),w
  1175  0D64  00B3               	movwf	(_GATO+1)^(0+128)
  1176                           
  1177                           ;jgatoraton1.c: 56: }
  1178  0D65  2D6D               	goto	l41
  1179  0D66                     l1807:	
  1180                           
  1181                           ;jgatoraton1.c: 57: else
  1182                           ;jgatoraton1.c: 58: PORTC = RATON + GATO;
  1183  0D66  1683               	bsf	3,5	;RP0=1, select bank1
  1184  0D67  1303               	bcf	3,6	;RP1=0, select bank1
  1185  0D68  0832               	movf	_GATO^(0+128),w
  1186  0D69  0734               	addwf	_RATON^(0+128),w
  1187  0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0D6B  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0D6C  0087               	movwf	7	;volatile
  1190  0D6D                     l41:	
  1191                           
  1192                           ;jgatoraton1.c: 59: PORTC = RATON + GATO;
  1193  0D6D  1683               	bsf	3,5	;RP0=1, select bank1
  1194  0D6E  1303               	bcf	3,6	;RP1=0, select bank1
  1195  0D6F  0832               	movf	_GATO^(0+128),w
  1196  0D70  0734               	addwf	_RATON^(0+128),w
  1197  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0D72  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0D73  0087               	movwf	7	;volatile
  1200  0D74  0008               	return
  1201  0D75                     __end_of_validar:	
  1202                           
  1203                           	psect	text2
  1204  0D75                     __ptext2:	
  1205 ;; *************** function _rand *****************
  1206 ;; Defined at:
  1207 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\rand.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  2   13[BANK0 ] int 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0, pclath, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         0       2       0       0       0
  1222 ;;      Locals:         0       0       0       0       0
  1223 ;;      Temps:          0       5       0       0       0
  1224 ;;      Totals:         0       7       0       0       0
  1225 ;;Total ram usage:        7 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:    2
  1228 ;; This function calls:
  1229 ;;		___lmul
  1230 ;; This function is called by:
  1231 ;;		_main
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           
  1236                           ;psect for function _rand
  1237  0D75                     _rand:	
  1238                           
  1239                           ;incstack = 0
  1240                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  1241  0D75  0879               	movf	_randx+3,w
  1242  0D76  1283               	bcf	3,5	;RP0=0, select bank0
  1243  0D77  1303               	bcf	3,6	;RP1=0, select bank0
  1244  0D78  00A3               	movwf	___lmul@multiplier+3
  1245  0D79  0878               	movf	_randx+2,w
  1246  0D7A  00A2               	movwf	___lmul@multiplier+2
  1247  0D7B  0877               	movf	_randx+1,w
  1248  0D7C  00A1               	movwf	___lmul@multiplier+1
  1249  0D7D  0876               	movf	_randx,w
  1250  0D7E  00A0               	movwf	___lmul@multiplier
  1251  0D7F  3041               	movlw	65
  1252  0D80  00A7               	movwf	___lmul@multiplicand+3
  1253  0D81  30C6               	movlw	198
  1254  0D82  00A6               	movwf	___lmul@multiplicand+2
  1255  0D83  304E               	movlw	78
  1256  0D84  00A5               	movwf	___lmul@multiplicand+1
  1257  0D85  306D               	movlw	109
  1258  0D86  00A4               	movwf	___lmul@multiplicand
  1259  0D87  120A  158A  246D  120A  158A  	fcall	___lmul
  1260  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  1261  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  1262  0D8E  0823               	movf	?___lmul+3,w
  1263  0D8F  00F9               	movwf	_randx+3
  1264  0D90  0822               	movf	?___lmul+2,w
  1265  0D91  00F8               	movwf	_randx+2
  1266  0D92  0821               	movf	?___lmul+1,w
  1267  0D93  00F7               	movwf	_randx+1
  1268  0D94  0820               	movf	?___lmul,w
  1269  0D95  00F6               	movwf	_randx
  1270  0D96  3039               	movlw	57
  1271  0D97  07F6               	addwf	_randx,f
  1272  0D98  3030               	movlw	48
  1273  0D99  1803               	skipnc
  1274  0D9A  3031               	movlw	49
  1275  0D9B  07F7               	addwf	_randx+1,f
  1276  0D9C  3000               	movlw	0
  1277  0D9D  1803               	skipnc
  1278  0D9E  3001               	movlw	1
  1279  0D9F  07F8               	addwf	_randx+2,f
  1280  0DA0  3000               	movlw	0
  1281  0DA1  1803               	skipnc
  1282  0DA2  3001               	movlw	1
  1283  0DA3  07F9               	addwf	_randx+3,f
  1284  0DA4  0876               	movf	_randx,w
  1285  0DA5  00AF               	movwf	??_rand
  1286  0DA6  0877               	movf	_randx+1,w
  1287  0DA7  00B0               	movwf	??_rand+1
  1288  0DA8  0878               	movf	_randx+2,w
  1289  0DA9  00B1               	movwf	??_rand+2
  1290  0DAA  0879               	movf	_randx+3,w
  1291  0DAB  00B2               	movwf	??_rand+3
  1292  0DAC  3010               	movlw	16
  1293  0DAD  00B3               	movwf	??_rand+4
  1294  0DAE                     u3545:	
  1295  0DAE  0D32               	rlf	??_rand+3,w
  1296  0DAF  0CB2               	rrf	??_rand+3,f
  1297  0DB0  0CB1               	rrf	??_rand+2,f
  1298  0DB1  0CB0               	rrf	??_rand+1,f
  1299  0DB2  0CAF               	rrf	??_rand,f
  1300  0DB3  0BB3               	decfsz	??_rand+4,f
  1301  0DB4  2DAE               	goto	u3545
  1302  0DB5  30FF               	movlw	255
  1303  0DB6  052F               	andwf	??_rand,w
  1304  0DB7  00AD               	movwf	?_rand
  1305  0DB8  307F               	movlw	127
  1306  0DB9  0530               	andwf	??_rand+1,w
  1307  0DBA  00AE               	movwf	?_rand+1
  1308  0DBB  0008               	return
  1309  0DBC                     __end_of_rand:	
  1310                           
  1311                           	psect	text3
  1312  0C6D                     __ptext3:	
  1313 ;; *************** function ___lmul *****************
  1314 ;; Defined at:
  1315 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul32.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1318 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  product         4    9[BANK0 ] unsigned long 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  4    0[BANK0 ] unsigned long 
  1323 ;; Registers used:
  1324 ;;		wreg, status,2, status,0
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1330 ;;      Params:         0       8       0       0       0
  1331 ;;      Locals:         0       4       0       0       0
  1332 ;;      Temps:          0       1       0       0       0
  1333 ;;      Totals:         0      13       0       0       0
  1334 ;;Total ram usage:       13 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; Hardware stack levels required when called:    1
  1337 ;; This function calls:
  1338 ;;		Nothing
  1339 ;; This function is called by:
  1340 ;;		_rand
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           
  1345                           ;psect for function ___lmul
  1346  0C6D                     ___lmul:	
  1347                           
  1348                           ;incstack = 0
  1349                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1350  0C6D  3000               	movlw	0
  1351  0C6E  1283               	bcf	3,5	;RP0=0, select bank0
  1352  0C6F  1303               	bcf	3,6	;RP1=0, select bank0
  1353  0C70  00AC               	movwf	___lmul@product+3
  1354  0C71  3000               	movlw	0
  1355  0C72  00AB               	movwf	___lmul@product+2
  1356  0C73  3000               	movlw	0
  1357  0C74  00AA               	movwf	___lmul@product+1
  1358  0C75  3000               	movlw	0
  1359  0C76  00A9               	movwf	___lmul@product
  1360  0C77                     l2257:	
  1361  0C77  1C20               	btfss	___lmul@multiplier,0
  1362  0C78  2C8D               	goto	l2261
  1363  0C79  0824               	movf	___lmul@multiplicand,w
  1364  0C7A  07A9               	addwf	___lmul@product,f
  1365  0C7B  0825               	movf	___lmul@multiplicand+1,w
  1366  0C7C  1103               	clrz
  1367  0C7D  1803               	skipnc
  1368  0C7E  3E01               	addlw	1
  1369  0C7F  1D03               	btfss	3,2
  1370  0C80  07AA               	addwf	___lmul@product+1,f
  1371  0C81  0826               	movf	___lmul@multiplicand+2,w
  1372  0C82  1103               	clrz
  1373  0C83  1803               	skipnc
  1374  0C84  3E01               	addlw	1
  1375  0C85  1D03               	btfss	3,2
  1376  0C86  07AB               	addwf	___lmul@product+2,f
  1377  0C87  0827               	movf	___lmul@multiplicand+3,w
  1378  0C88  1103               	clrz
  1379  0C89  1803               	skipnc
  1380  0C8A  3E01               	addlw	1
  1381  0C8B  1D03               	btfss	3,2
  1382  0C8C  07AC               	addwf	___lmul@product+3,f
  1383  0C8D                     l2261:	
  1384  0C8D  3001               	movlw	1
  1385  0C8E  00A8               	movwf	??___lmul
  1386  0C8F                     u3395:	
  1387  0C8F  1003               	clrc
  1388  0C90  0DA4               	rlf	___lmul@multiplicand,f
  1389  0C91  0DA5               	rlf	___lmul@multiplicand+1,f
  1390  0C92  0DA6               	rlf	___lmul@multiplicand+2,f
  1391  0C93  0DA7               	rlf	___lmul@multiplicand+3,f
  1392  0C94  0BA8               	decfsz	??___lmul,f
  1393  0C95  2C8F               	goto	u3395
  1394  0C96  3001               	movlw	1
  1395  0C97                     u3405:	
  1396  0C97  1003               	clrc
  1397  0C98  0CA3               	rrf	___lmul@multiplier+3,f
  1398  0C99  0CA2               	rrf	___lmul@multiplier+2,f
  1399  0C9A  0CA1               	rrf	___lmul@multiplier+1,f
  1400  0C9B  0CA0               	rrf	___lmul@multiplier,f
  1401  0C9C  3EFF               	addlw	-1
  1402  0C9D  1D03               	skipz
  1403  0C9E  2C97               	goto	u3405
  1404  0C9F  0823               	movf	___lmul@multiplier+3,w
  1405  0CA0  0422               	iorwf	___lmul@multiplier+2,w
  1406  0CA1  0421               	iorwf	___lmul@multiplier+1,w
  1407  0CA2  0420               	iorwf	___lmul@multiplier,w
  1408  0CA3  1D03               	skipz
  1409  0CA4  2C77               	goto	l2257
  1410  0CA5  082C               	movf	___lmul@product+3,w
  1411  0CA6  00A3               	movwf	?___lmul+3
  1412  0CA7  082B               	movf	___lmul@product+2,w
  1413  0CA8  00A2               	movwf	?___lmul+2
  1414  0CA9  082A               	movf	___lmul@product+1,w
  1415  0CAA  00A1               	movwf	?___lmul+1
  1416  0CAB  0829               	movf	___lmul@product,w
  1417  0CAC  00A0               	movwf	?___lmul
  1418  0CAD  0008               	return
  1419  0CAE                     __end_of___lmul:	
  1420                           
  1421                           	psect	text4
  1422  004B                     __ptext4:	
  1423 ;; *************** function _pow *****************
  1424 ;; Defined at:
  1425 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\pow.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  x               3   70[BANK0 ] unsigned long 
  1428 ;;  y               3   73[BANK0 ] unsigned long 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  yi              4    7[BANK1 ] unsigned long 
  1431 ;;  sign            1    6[BANK1 ] unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  3   70[BANK0 ] unsigned char 
  1434 ;; Registers used:
  1435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1441 ;;      Params:         0       6       0       0       0
  1442 ;;      Locals:         0       0      11       0       0
  1443 ;;      Temps:          0       1       0       0       0
  1444 ;;      Totals:         0       7      11       0       0
  1445 ;;Total ram usage:       18 bytes
  1446 ;; Hardware stack levels used:    1
  1447 ;; Hardware stack levels required when called:    5
  1448 ;; This function calls:
  1449 ;;		___ftge
  1450 ;;		___ftmul
  1451 ;;		___ftneg
  1452 ;;		___fttol
  1453 ;;		___lltoft
  1454 ;;		_exp
  1455 ;;		_log
  1456 ;; This function is called by:
  1457 ;;		_main
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           
  1462                           ;psect for function _pow
  1463  004B                     _pow:	
  1464                           
  1465                           ;incstack = 0
  1466                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1467  004B  1683               	bsf	3,5	;RP0=1, select bank1
  1468  004C  1303               	bcf	3,6	;RP1=0, select bank1
  1469  004D  01A6               	clrf	pow@sign^(0+128)
  1470  004E  1283               	bcf	3,5	;RP0=0, select bank0
  1471  004F  1303               	bcf	3,6	;RP1=0, select bank0
  1472  0050  0868               	movf	pow@x+2,w
  1473  0051  0467               	iorwf	pow@x+1,w
  1474  0052  0466               	iorwf	pow@x,w
  1475  0053  1D03               	skipz
  1476  0054  2875               	goto	l2365
  1477  0055  3000               	movlw	0
  1478  0056  00A0               	movwf	___ftge@ff1
  1479  0057  3000               	movlw	0
  1480  0058  00A1               	movwf	___ftge@ff1+1
  1481  0059  3000               	movlw	0
  1482  005A  00A2               	movwf	___ftge@ff1+2
  1483  005B  0869               	movf	pow@y,w
  1484  005C  00A3               	movwf	___ftge@ff2
  1485  005D  086A               	movf	pow@y+1,w
  1486  005E  00A4               	movwf	___ftge@ff2+1
  1487  005F  086B               	movf	pow@y+2,w
  1488  0060  00A5               	movwf	___ftge@ff2+2
  1489  0061  120A  118A  279F  120A  118A  	fcall	___ftge
  1490  0066  1C03               	btfss	3,0
  1491  0067  286C               	goto	l508
  1492  0068  3021               	movlw	33
  1493  0069  00FA               	movwf	_errno
  1494  006A  3000               	movlw	0
  1495  006B  00FB               	movwf	_errno+1
  1496  006C                     l508:	
  1497  006C  3000               	movlw	0
  1498  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1499  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1500  006F  00E6               	movwf	?_pow
  1501  0070  3000               	movlw	0
  1502  0071  00E7               	movwf	?_pow+1
  1503  0072  3000               	movlw	0
  1504  0073  00E8               	movwf	?_pow+2
  1505  0074  0008               	return
  1506  0075                     l2365:	
  1507  0075  086B               	movf	pow@y+2,w
  1508  0076  046A               	iorwf	pow@y+1,w
  1509  0077  0469               	iorwf	pow@y,w
  1510  0078  1D03               	skipz
  1511  0079  2881               	goto	l2371
  1512  007A  3000               	movlw	0
  1513  007B  00E6               	movwf	?_pow
  1514  007C  3080               	movlw	128
  1515  007D  00E7               	movwf	?_pow+1
  1516  007E  303F               	movlw	63
  1517  007F  00E8               	movwf	?_pow+2
  1518  0080  0008               	return
  1519  0081                     l2371:	
  1520  0081  0866               	movf	pow@x,w
  1521  0082  00A0               	movwf	___ftge@ff1
  1522  0083  0867               	movf	pow@x+1,w
  1523  0084  00A1               	movwf	___ftge@ff1+1
  1524  0085  0868               	movf	pow@x+2,w
  1525  0086  00A2               	movwf	___ftge@ff1+2
  1526  0087  3000               	movlw	0
  1527  0088  00A3               	movwf	___ftge@ff2
  1528  0089  3000               	movlw	0
  1529  008A  00A4               	movwf	___ftge@ff2+1
  1530  008B  3000               	movlw	0
  1531  008C  00A5               	movwf	___ftge@ff2+2
  1532  008D  120A  118A  279F  120A  118A  	fcall	___ftge
  1533  0092  1803               	btfsc	3,0
  1534  0093  290D               	goto	l2383
  1535  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1536  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1537  0096  0869               	movf	pow@y,w
  1538  0097  00AC               	movwf	___fttol@f1
  1539  0098  086A               	movf	pow@y+1,w
  1540  0099  00AD               	movwf	___fttol@f1+1
  1541  009A  086B               	movf	pow@y+2,w
  1542  009B  00AE               	movwf	___fttol@f1+2
  1543  009C  120A  158A  2772  120A  118A  	fcall	___fttol
  1544  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1545  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1546  00A3  082F               	movf	?___fttol+3,w
  1547  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  1548  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  1549  00A6  00AA               	movwf	(pow@yi+3)^(0+128)
  1550  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1551  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1552  00A9  082E               	movf	?___fttol+2,w
  1553  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  1554  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  1555  00AC  00A9               	movwf	(pow@yi+2)^(0+128)
  1556  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1557  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1558  00AF  082D               	movf	?___fttol+1,w
  1559  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  1560  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  1561  00B2  00A8               	movwf	(pow@yi+1)^(0+128)
  1562  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1563  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1564  00B5  082C               	movf	?___fttol,w
  1565  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  1566  00B7  1303               	bcf	3,6	;RP1=0, select bank1
  1567  00B8  00A7               	movwf	pow@yi^(0+128)
  1568  00B9  082A               	movf	(pow@yi+3)^(0+128),w
  1569  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1570  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1571  00BC  00AB               	movwf	___lltoft@c+3
  1572  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  1573  00BE  1303               	bcf	3,6	;RP1=0, select bank1
  1574  00BF  0829               	movf	(pow@yi+2)^(0+128),w
  1575  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1576  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1577  00C2  00AA               	movwf	___lltoft@c+2
  1578  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1579  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  1580  00C5  0828               	movf	(pow@yi+1)^(0+128),w
  1581  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1582  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1583  00C8  00A9               	movwf	___lltoft@c+1
  1584  00C9  1683               	bsf	3,5	;RP0=1, select bank1
  1585  00CA  1303               	bcf	3,6	;RP1=0, select bank1
  1586  00CB  0827               	movf	pow@yi^(0+128),w
  1587  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1588  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1589  00CE  00A8               	movwf	___lltoft@c
  1590  00CF  120A  158A  243E  120A  118A  	fcall	___lltoft
  1591  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1592  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1593  00D6  086B               	movf	pow@y+2,w
  1594  00D7  062A               	xorwf	?___lltoft+2,w
  1595  00D8  1D03               	skipz
  1596  00D9  28E0               	goto	u3595
  1597  00DA  086A               	movf	pow@y+1,w
  1598  00DB  0629               	xorwf	?___lltoft+1,w
  1599  00DC  1D03               	skipz
  1600  00DD  28E0               	goto	u3595
  1601  00DE  0869               	movf	pow@y,w
  1602  00DF  0628               	xorwf	?___lltoft,w
  1603  00E0                     u3595:	
  1604  00E0  1903               	skipnz
  1605  00E1  28ED               	goto	l2379
  1606  00E2  3021               	movlw	33
  1607  00E3  00FA               	movwf	_errno
  1608  00E4  3000               	movlw	0
  1609  00E5  00FB               	movwf	_errno+1
  1610  00E6  3000               	movlw	0
  1611  00E7  00E6               	movwf	?_pow
  1612  00E8  3000               	movlw	0
  1613  00E9  00E7               	movwf	?_pow+1
  1614  00EA  3000               	movlw	0
  1615  00EB  00E8               	movwf	?_pow+2
  1616  00EC  0008               	return
  1617  00ED                     l2379:	
  1618  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  1619  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  1620  00EF  0827               	movf	pow@yi^(0+128),w
  1621  00F0  3901               	andlw	1
  1622  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1623  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1624  00F3  00EC               	movwf	??_pow
  1625  00F4  086C               	movf	??_pow,w
  1626  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  1627  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  1628  00F7  00A6               	movwf	pow@sign^(0+128)
  1629  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1630  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1631  00FA  0866               	movf	pow@x,w
  1632  00FB  00A0               	movwf	___ftneg@f1
  1633  00FC  0867               	movf	pow@x+1,w
  1634  00FD  00A1               	movwf	___ftneg@f1+1
  1635  00FE  0868               	movf	pow@x+2,w
  1636  00FF  00A2               	movwf	___ftneg@f1+2
  1637  0100  120A  158A  23A3  120A  118A  	fcall	___ftneg
  1638  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1639  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1640  0107  0820               	movf	?___ftneg,w
  1641  0108  00E6               	movwf	pow@x
  1642  0109  0821               	movf	?___ftneg+1,w
  1643  010A  00E7               	movwf	pow@x+1
  1644  010B  0822               	movf	?___ftneg+2,w
  1645  010C  00E8               	movwf	pow@x+2
  1646  010D                     l2383:	
  1647  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1648  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1649  010F  0866               	movf	pow@x,w
  1650  0110  00D5               	movwf	log@x
  1651  0111  0867               	movf	pow@x+1,w
  1652  0112  00D6               	movwf	log@x+1
  1653  0113  0868               	movf	pow@x+2,w
  1654  0114  00D7               	movwf	log@x+2
  1655  0115  120A  118A  2586  120A  118A  	fcall	_log
  1656  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1657  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1658  011C  0855               	movf	?_log,w
  1659  011D  1683               	bsf	3,5	;RP0=1, select bank1
  1660  011E  1303               	bcf	3,6	;RP1=0, select bank1
  1661  011F  00A0               	movwf	_pow$644^(0+128)
  1662  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0122  0856               	movf	?_log+1,w
  1665  0123  1683               	bsf	3,5	;RP0=1, select bank1
  1666  0124  1303               	bcf	3,6	;RP1=0, select bank1
  1667  0125  00A1               	movwf	(_pow$644+1)^(0+128)
  1668  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1669  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1670  0128  0857               	movf	?_log+2,w
  1671  0129  1683               	bsf	3,5	;RP0=1, select bank1
  1672  012A  1303               	bcf	3,6	;RP1=0, select bank1
  1673  012B  00A2               	movwf	(_pow$644+2)^(0+128)
  1674  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1675  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1676  012E  0869               	movf	pow@y,w
  1677  012F  00AE               	movwf	___ftmul@f1
  1678  0130  086A               	movf	pow@y+1,w
  1679  0131  00AF               	movwf	___ftmul@f1+1
  1680  0132  086B               	movf	pow@y+2,w
  1681  0133  00B0               	movwf	___ftmul@f1+2
  1682  0134  1683               	bsf	3,5	;RP0=1, select bank1
  1683  0135  1303               	bcf	3,6	;RP1=0, select bank1
  1684  0136  0820               	movf	_pow$644^(0+128),w
  1685  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0139  00B1               	movwf	___ftmul@f2
  1688  013A  1683               	bsf	3,5	;RP0=1, select bank1
  1689  013B  1303               	bcf	3,6	;RP1=0, select bank1
  1690  013C  0821               	movf	(_pow$644+1)^(0+128),w
  1691  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1692  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1693  013F  00B2               	movwf	___ftmul@f2+1
  1694  0140  1683               	bsf	3,5	;RP0=1, select bank1
  1695  0141  1303               	bcf	3,6	;RP1=0, select bank1
  1696  0142  0822               	movf	(_pow$644+2)^(0+128),w
  1697  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1698  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1699  0145  00B3               	movwf	___ftmul@f2+2
  1700  0146  120A  118A  24B3  120A  118A  	fcall	___ftmul
  1701  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1702  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1703  014D  082E               	movf	?___ftmul,w
  1704  014E  1683               	bsf	3,5	;RP0=1, select bank1
  1705  014F  1303               	bcf	3,6	;RP1=0, select bank1
  1706  0150  00A3               	movwf	_pow$645^(0+128)
  1707  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1708  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1709  0153  082F               	movf	?___ftmul+1,w
  1710  0154  1683               	bsf	3,5	;RP0=1, select bank1
  1711  0155  1303               	bcf	3,6	;RP1=0, select bank1
  1712  0156  00A4               	movwf	(_pow$645+1)^(0+128)
  1713  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1714  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1715  0159  0830               	movf	?___ftmul+2,w
  1716  015A  1683               	bsf	3,5	;RP0=1, select bank1
  1717  015B  1303               	bcf	3,6	;RP1=0, select bank1
  1718  015C  00A5               	movwf	(_pow$645+2)^(0+128)
  1719  015D  0823               	movf	_pow$645^(0+128),w
  1720  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1721  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1722  0160  00DC               	movwf	exp@x
  1723  0161  1683               	bsf	3,5	;RP0=1, select bank1
  1724  0162  1303               	bcf	3,6	;RP1=0, select bank1
  1725  0163  0824               	movf	(_pow$645+1)^(0+128),w
  1726  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1727  0165  1303               	bcf	3,6	;RP1=0, select bank0
  1728  0166  00DD               	movwf	exp@x+1
  1729  0167  1683               	bsf	3,5	;RP0=1, select bank1
  1730  0168  1303               	bcf	3,6	;RP1=0, select bank1
  1731  0169  0825               	movf	(_pow$645+2)^(0+128),w
  1732  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1733  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1734  016C  00DE               	movwf	exp@x+2
  1735  016D  120A  118A  2193  120A  118A  	fcall	_exp
  1736  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0174  085C               	movf	?_exp,w
  1739  0175  00E6               	movwf	pow@x
  1740  0176  085D               	movf	?_exp+1,w
  1741  0177  00E7               	movwf	pow@x+1
  1742  0178  085E               	movf	?_exp+2,w
  1743  0179  00E8               	movwf	pow@x+2
  1744  017A  1683               	bsf	3,5	;RP0=1, select bank1
  1745  017B  1303               	bcf	3,6	;RP1=0, select bank1
  1746  017C  0826               	movf	pow@sign^(0+128),w
  1747  017D  1903               	btfsc	3,2
  1748  017E  0008               	return
  1749  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1750  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1751  0181  0866               	movf	pow@x,w
  1752  0182  00A0               	movwf	___ftneg@f1
  1753  0183  0867               	movf	pow@x+1,w
  1754  0184  00A1               	movwf	___ftneg@f1+1
  1755  0185  0868               	movf	pow@x+2,w
  1756  0186  00A2               	movwf	___ftneg@f1+2
  1757  0187  120A  158A  23A3   	fcall	___ftneg
  1758  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1759  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1760  018C  0820               	movf	?___ftneg,w
  1761  018D  00E6               	movwf	?_pow
  1762  018E  0821               	movf	?___ftneg+1,w
  1763  018F  00E7               	movwf	?_pow+1
  1764  0190  0822               	movf	?___ftneg+2,w
  1765  0191  00E8               	movwf	?_pow+2
  1766  0192  0008               	return
  1767  0193                     __end_of_pow:	
  1768                           
  1769                           	psect	text5
  1770  0586                     __ptext5:	
  1771 ;; *************** function _log *****************
  1772 ;; Defined at:
  1773 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\log.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  x               3   53[BANK0 ] unsigned char 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  exponent        2   57[BANK0 ] int 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  3   53[BANK0 ] int 
  1780 ;; Registers used:
  1781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1787 ;;      Params:         0       3       0       0       0
  1788 ;;      Locals:         0       2       0       0       0
  1789 ;;      Temps:          0       1       0       0       0
  1790 ;;      Totals:         0       6       0       0       0
  1791 ;;Total ram usage:        6 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; Hardware stack levels required when called:    4
  1794 ;; This function calls:
  1795 ;;		___awtoft
  1796 ;;		___ftadd
  1797 ;;		___ftge
  1798 ;;		___ftmul
  1799 ;;		_eval_poly
  1800 ;;		_frexp
  1801 ;; This function is called by:
  1802 ;;		_pow
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           
  1807                           ;psect for function _log
  1808  0586                     _log:	
  1809                           
  1810                           ;incstack = 0
  1811                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1812  0586  1283               	bcf	3,5	;RP0=0, select bank0
  1813  0587  1303               	bcf	3,6	;RP1=0, select bank0
  1814  0588  0855               	movf	log@x,w
  1815  0589  00A0               	movwf	___ftge@ff1
  1816  058A  0856               	movf	log@x+1,w
  1817  058B  00A1               	movwf	___ftge@ff1+1
  1818  058C  0857               	movf	log@x+2,w
  1819  058D  00A2               	movwf	___ftge@ff1+2
  1820  058E  3000               	movlw	0
  1821  058F  00A3               	movwf	___ftge@ff2
  1822  0590  3000               	movlw	0
  1823  0591  00A4               	movwf	___ftge@ff2+1
  1824  0592  3000               	movlw	0
  1825  0593  00A5               	movwf	___ftge@ff2+2
  1826  0594  120A  118A  279F  120A  118A  	fcall	___ftge
  1827  0599  1803               	btfsc	3,0
  1828  059A  2DA8               	goto	l2285
  1829  059B  3021               	movlw	33
  1830  059C  00FA               	movwf	_errno
  1831  059D  3000               	movlw	0
  1832  059E  00FB               	movwf	_errno+1
  1833  059F  3000               	movlw	0
  1834  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  1835  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  1836  05A2  00D5               	movwf	?_log
  1837  05A3  3000               	movlw	0
  1838  05A4  00D6               	movwf	?_log+1
  1839  05A5  3000               	movlw	0
  1840  05A6  00D7               	movwf	?_log+2
  1841  05A7  0008               	return
  1842  05A8                     l2285:	
  1843  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  1844  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  1845  05AA  0857               	movf	log@x+2,w
  1846  05AB  0456               	iorwf	log@x+1,w
  1847  05AC  0455               	iorwf	log@x,w
  1848  05AD  1D03               	skipz
  1849  05AE  2DBA               	goto	l2291
  1850  05AF  3022               	movlw	34
  1851  05B0  00FA               	movwf	_errno
  1852  05B1  3000               	movlw	0
  1853  05B2  00FB               	movwf	_errno+1
  1854  05B3  3000               	movlw	0
  1855  05B4  00D5               	movwf	?_log
  1856  05B5  3000               	movlw	0
  1857  05B6  00D6               	movwf	?_log+1
  1858  05B7  3000               	movlw	0
  1859  05B8  00D7               	movwf	?_log+2
  1860  05B9  0008               	return
  1861  05BA                     l2291:	
  1862  05BA  3000               	movlw	0
  1863  05BB  00BE               	movwf	___ftadd@f1
  1864  05BC  3080               	movlw	128
  1865  05BD  00BF               	movwf	___ftadd@f1+1
  1866  05BE  30BF               	movlw	191
  1867  05BF  00C0               	movwf	___ftadd@f1+2
  1868  05C0  3000               	movlw	0
  1869  05C1  00AE               	movwf	___ftmul@f1
  1870  05C2  3000               	movlw	0
  1871  05C3  00AF               	movwf	___ftmul@f1+1
  1872  05C4  3040               	movlw	64
  1873  05C5  00B0               	movwf	___ftmul@f1+2
  1874  05C6  3059               	movlw	(low (log@exponent| 0))& (0+255)
  1875  05C7  00D8               	movwf	??_log
  1876  05C8  0858               	movf	??_log,w
  1877  05C9  00A3               	movwf	frexp@eptr
  1878  05CA  0855               	movf	log@x,w
  1879  05CB  00A0               	movwf	frexp@value
  1880  05CC  0856               	movf	log@x+1,w
  1881  05CD  00A1               	movwf	frexp@value+1
  1882  05CE  0857               	movf	log@x+2,w
  1883  05CF  00A2               	movwf	frexp@value+2
  1884  05D0  120A  158A  24F0  120A  118A  	fcall	_frexp
  1885  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1886  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1887  05D7  0820               	movf	?_frexp,w
  1888  05D8  00B1               	movwf	___ftmul@f2
  1889  05D9  0821               	movf	?_frexp+1,w
  1890  05DA  00B2               	movwf	___ftmul@f2+1
  1891  05DB  0822               	movf	?_frexp+2,w
  1892  05DC  00B3               	movwf	___ftmul@f2+2
  1893  05DD  120A  118A  24B3  120A  118A  	fcall	___ftmul
  1894  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  1895  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  1896  05E4  082E               	movf	?___ftmul,w
  1897  05E5  00C1               	movwf	___ftadd@f2
  1898  05E6  082F               	movf	?___ftmul+1,w
  1899  05E7  00C2               	movwf	___ftadd@f2+1
  1900  05E8  0830               	movf	?___ftmul+2,w
  1901  05E9  00C3               	movwf	___ftadd@f2+2
  1902  05EA  120A  118A  22CE  120A  118A  	fcall	___ftadd
  1903  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  1904  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  1905  05F1  083E               	movf	?___ftadd,w
  1906  05F2  00D5               	movwf	log@x
  1907  05F3  083F               	movf	?___ftadd+1,w
  1908  05F4  00D6               	movwf	log@x+1
  1909  05F5  0840               	movf	?___ftadd+2,w
  1910  05F6  00D7               	movwf	log@x+2
  1911  05F7  30FF               	movlw	255
  1912  05F8  07D9               	addwf	log@exponent,f
  1913  05F9  1803               	skipnc
  1914  05FA  0ADA               	incf	log@exponent+1,f
  1915  05FB  30FF               	movlw	255
  1916  05FC  07DA               	addwf	log@exponent+1,f
  1917  05FD  0855               	movf	log@x,w
  1918  05FE  00CB               	movwf	eval_poly@x
  1919  05FF  0856               	movf	log@x+1,w
  1920  0600  00CC               	movwf	eval_poly@x+1
  1921  0601  0857               	movf	log@x+2,w
  1922  0602  00CD               	movwf	eval_poly@x+2
  1923  0603  301F               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  1924  0604  00D8               	movwf	??_log
  1925  0605  0858               	movf	??_log,w
  1926  0606  00CE               	movwf	eval_poly@d
  1927  0607  3008               	movlw	8
  1928  0608  00CF               	movwf	eval_poly@n
  1929  0609  3000               	movlw	0
  1930  060A  00D0               	movwf	eval_poly@n+1
  1931  060B  120A  158A  2677  120A  118A  	fcall	_eval_poly
  1932  0610  1283               	bcf	3,5	;RP0=0, select bank0
  1933  0611  1303               	bcf	3,6	;RP1=0, select bank0
  1934  0612  084B               	movf	?_eval_poly,w
  1935  0613  00D5               	movwf	log@x
  1936  0614  084C               	movf	?_eval_poly+1,w
  1937  0615  00D6               	movwf	log@x+1
  1938  0616  084D               	movf	?_eval_poly+2,w
  1939  0617  00D7               	movwf	log@x+2
  1940  0618  0855               	movf	log@x,w
  1941  0619  00BE               	movwf	___ftadd@f1
  1942  061A  0856               	movf	log@x+1,w
  1943  061B  00BF               	movwf	___ftadd@f1+1
  1944  061C  0857               	movf	log@x+2,w
  1945  061D  00C0               	movwf	___ftadd@f1+2
  1946  061E  3072               	movlw	114
  1947  061F  00AE               	movwf	___ftmul@f1
  1948  0620  3031               	movlw	49
  1949  0621  00AF               	movwf	___ftmul@f1+1
  1950  0622  303F               	movlw	63
  1951  0623  00B0               	movwf	___ftmul@f1+2
  1952  0624  085A               	movf	log@exponent+1,w
  1953  0625  00A9               	movwf	___awtoft@c+1
  1954  0626  0859               	movf	log@exponent,w
  1955  0627  00A8               	movwf	___awtoft@c
  1956  0628  120A  158A  2419  120A  118A  	fcall	___awtoft
  1957  062D  1283               	bcf	3,5	;RP0=0, select bank0
  1958  062E  1303               	bcf	3,6	;RP1=0, select bank0
  1959  062F  0828               	movf	?___awtoft,w
  1960  0630  00B1               	movwf	___ftmul@f2
  1961  0631  0829               	movf	?___awtoft+1,w
  1962  0632  00B2               	movwf	___ftmul@f2+1
  1963  0633  082A               	movf	?___awtoft+2,w
  1964  0634  00B3               	movwf	___ftmul@f2+2
  1965  0635  120A  118A  24B3  120A  118A  	fcall	___ftmul
  1966  063A  1283               	bcf	3,5	;RP0=0, select bank0
  1967  063B  1303               	bcf	3,6	;RP1=0, select bank0
  1968  063C  082E               	movf	?___ftmul,w
  1969  063D  00C1               	movwf	___ftadd@f2
  1970  063E  082F               	movf	?___ftmul+1,w
  1971  063F  00C2               	movwf	___ftadd@f2+1
  1972  0640  0830               	movf	?___ftmul+2,w
  1973  0641  00C3               	movwf	___ftadd@f2+2
  1974  0642  120A  118A  22CE   	fcall	___ftadd
  1975  0645  1283               	bcf	3,5	;RP0=0, select bank0
  1976  0646  1303               	bcf	3,6	;RP1=0, select bank0
  1977  0647  083E               	movf	?___ftadd,w
  1978  0648  00D5               	movwf	?_log
  1979  0649  083F               	movf	?___ftadd+1,w
  1980  064A  00D6               	movwf	?_log+1
  1981  064B  0840               	movf	?___ftadd+2,w
  1982  064C  00D7               	movwf	?_log+2
  1983  064D  0008               	return
  1984  064E                     __end_of_log:	
  1985                           
  1986                           	psect	text6
  1987  0193                     __ptext6:	
  1988 ;; *************** function _exp *****************
  1989 ;; Defined at:
  1990 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\exp.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  x               3   60[BANK0 ] int 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  exponent        2   67[BANK0 ] int 
  1995 ;;  sign            1   69[BANK0 ] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  3   60[BANK0 ] unsigned char 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2005 ;;      Params:         0       3       0       0       0
  2006 ;;      Locals:         0       6       0       0       0
  2007 ;;      Temps:          0       1       0       0       0
  2008 ;;      Totals:         0      10       0       0       0
  2009 ;;Total ram usage:       10 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:    4
  2012 ;; This function calls:
  2013 ;;		___awtoft
  2014 ;;		___ftdiv
  2015 ;;		___ftge
  2016 ;;		___ftmul
  2017 ;;		___ftneg
  2018 ;;		___ftsub
  2019 ;;		___fttol
  2020 ;;		_eval_poly
  2021 ;;		_floor
  2022 ;;		_ldexp
  2023 ;; This function is called by:
  2024 ;;		_pow
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           
  2029                           ;psect for function _exp
  2030  0193                     _exp:	
  2031                           
  2032                           ;incstack = 0
  2033                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2034  0193  1283               	bcf	3,5	;RP0=0, select bank0
  2035  0194  1303               	bcf	3,6	;RP1=0, select bank0
  2036  0195  085E               	movf	exp@x+2,w
  2037  0196  045D               	iorwf	exp@x+1,w
  2038  0197  045C               	iorwf	exp@x,w
  2039  0198  1D03               	skipz
  2040  0199  29A1               	goto	l2307
  2041  019A  3000               	movlw	0
  2042  019B  00DC               	movwf	?_exp
  2043  019C  3080               	movlw	128
  2044  019D  00DD               	movwf	?_exp+1
  2045  019E  303F               	movlw	63
  2046  019F  00DE               	movwf	?_exp+2
  2047  01A0  0008               	return
  2048  01A1                     l2307:	
  2049  01A1  3072               	movlw	114
  2050  01A2  00A0               	movwf	___ftge@ff1
  2051  01A3  3031               	movlw	49
  2052  01A4  00A1               	movwf	___ftge@ff1+1
  2053  01A5  3044               	movlw	68
  2054  01A6  00A2               	movwf	___ftge@ff1+2
  2055  01A7  085C               	movf	exp@x,w
  2056  01A8  00A3               	movwf	___ftge@ff2
  2057  01A9  085D               	movf	exp@x+1,w
  2058  01AA  00A4               	movwf	___ftge@ff2+1
  2059  01AB  085E               	movf	exp@x+2,w
  2060  01AC  00A5               	movwf	___ftge@ff2+2
  2061  01AD  120A  118A  279F  120A  118A  	fcall	___ftge
  2062  01B2  1803               	btfsc	3,0
  2063  01B3  29C1               	goto	l2313
  2064  01B4  3022               	movlw	34
  2065  01B5  00FA               	movwf	_errno
  2066  01B6  3000               	movlw	0
  2067  01B7  00FB               	movwf	_errno+1
  2068  01B8  30FF               	movlw	255
  2069  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  2070  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  2071  01BB  00DC               	movwf	?_exp
  2072  01BC  307F               	movlw	127
  2073  01BD  00DD               	movwf	?_exp+1
  2074  01BE  307F               	movlw	127
  2075  01BF  00DE               	movwf	?_exp+2
  2076  01C0  0008               	return
  2077  01C1                     l2313:	
  2078  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2079  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2080  01C3  085C               	movf	exp@x,w
  2081  01C4  00A0               	movwf	___ftge@ff1
  2082  01C5  085D               	movf	exp@x+1,w
  2083  01C6  00A1               	movwf	___ftge@ff1+1
  2084  01C7  085E               	movf	exp@x+2,w
  2085  01C8  00A2               	movwf	___ftge@ff1+2
  2086  01C9  3049               	movlw	73
  2087  01CA  00A3               	movwf	___ftge@ff2
  2088  01CB  303A               	movlw	58
  2089  01CC  00A4               	movwf	___ftge@ff2+1
  2090  01CD  30C4               	movlw	196
  2091  01CE  00A5               	movwf	___ftge@ff2+2
  2092  01CF  120A  118A  279F  120A  118A  	fcall	___ftge
  2093  01D4  1803               	btfsc	3,0
  2094  01D5  29E3               	goto	l2319
  2095  01D6  3022               	movlw	34
  2096  01D7  00FA               	movwf	_errno
  2097  01D8  3000               	movlw	0
  2098  01D9  00FB               	movwf	_errno+1
  2099  01DA  3000               	movlw	0
  2100  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2101  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2102  01DD  00DC               	movwf	?_exp
  2103  01DE  3000               	movlw	0
  2104  01DF  00DD               	movwf	?_exp+1
  2105  01E0  3000               	movlw	0
  2106  01E1  00DE               	movwf	?_exp+2
  2107  01E2  0008               	return
  2108  01E3                     l2319:	
  2109  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2110  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  2111  01E5  085C               	movf	exp@x,w
  2112  01E6  00A0               	movwf	___ftge@ff1
  2113  01E7  085D               	movf	exp@x+1,w
  2114  01E8  00A1               	movwf	___ftge@ff1+1
  2115  01E9  085E               	movf	exp@x+2,w
  2116  01EA  00A2               	movwf	___ftge@ff1+2
  2117  01EB  3000               	movlw	0
  2118  01EC  00A3               	movwf	___ftge@ff2
  2119  01ED  3000               	movlw	0
  2120  01EE  00A4               	movwf	___ftge@ff2+1
  2121  01EF  3000               	movlw	0
  2122  01F0  00A5               	movwf	___ftge@ff2+2
  2123  01F1  120A  118A  279F  120A  118A  	fcall	___ftge
  2124  01F6  1803               	btfsc	3,0
  2125  01F7  29FA               	goto	u3490
  2126  01F8  3001               	movlw	1
  2127  01F9  29FB               	goto	u3500
  2128  01FA                     u3490:	
  2129  01FA  3000               	movlw	0
  2130  01FB                     u3500:	
  2131  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2132  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2133  01FD  00DF               	movwf	??_exp
  2134  01FE  085F               	movf	??_exp,w
  2135  01FF  00E5               	movwf	exp@sign
  2136  0200  0865               	movf	exp@sign,w
  2137  0201  1903               	btfsc	3,2
  2138  0202  2A16               	goto	l2325
  2139  0203  085C               	movf	exp@x,w
  2140  0204  00A0               	movwf	___ftneg@f1
  2141  0205  085D               	movf	exp@x+1,w
  2142  0206  00A1               	movwf	___ftneg@f1+1
  2143  0207  085E               	movf	exp@x+2,w
  2144  0208  00A2               	movwf	___ftneg@f1+2
  2145  0209  120A  158A  23A3  120A  118A  	fcall	___ftneg
  2146  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2147  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2148  0210  0820               	movf	?___ftneg,w
  2149  0211  00DC               	movwf	exp@x
  2150  0212  0821               	movf	?___ftneg+1,w
  2151  0213  00DD               	movwf	exp@x+1
  2152  0214  0822               	movf	?___ftneg+2,w
  2153  0215  00DE               	movwf	exp@x+2
  2154  0216                     l2325:	
  2155  0216  30AA               	movlw	170
  2156  0217  00AE               	movwf	___ftmul@f1
  2157  0218  30B8               	movlw	184
  2158  0219  00AF               	movwf	___ftmul@f1+1
  2159  021A  303F               	movlw	63
  2160  021B  00B0               	movwf	___ftmul@f1+2
  2161  021C  085C               	movf	exp@x,w
  2162  021D  00B1               	movwf	___ftmul@f2
  2163  021E  085D               	movf	exp@x+1,w
  2164  021F  00B2               	movwf	___ftmul@f2+1
  2165  0220  085E               	movf	exp@x+2,w
  2166  0221  00B3               	movwf	___ftmul@f2+2
  2167  0222  120A  118A  24B3  120A  118A  	fcall	___ftmul
  2168  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0229  082E               	movf	?___ftmul,w
  2171  022A  00DC               	movwf	exp@x
  2172  022B  082F               	movf	?___ftmul+1,w
  2173  022C  00DD               	movwf	exp@x+1
  2174  022D  0830               	movf	?___ftmul+2,w
  2175  022E  00DE               	movwf	exp@x+2
  2176  022F  085C               	movf	exp@x,w
  2177  0230  00CB               	movwf	floor@x
  2178  0231  085D               	movf	exp@x+1,w
  2179  0232  00CC               	movwf	floor@x+1
  2180  0233  085E               	movf	exp@x+2,w
  2181  0234  00CD               	movwf	floor@x+2
  2182  0235  120A  118A  2706  120A  118A  	fcall	_floor
  2183  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2184  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2185  023C  084B               	movf	?_floor,w
  2186  023D  00E0               	movwf	_exp$646
  2187  023E  084C               	movf	?_floor+1,w
  2188  023F  00E1               	movwf	_exp$646+1
  2189  0240  084D               	movf	?_floor+2,w
  2190  0241  00E2               	movwf	_exp$646+2
  2191  0242  0860               	movf	_exp$646,w
  2192  0243  00AC               	movwf	___fttol@f1
  2193  0244  0861               	movf	_exp$646+1,w
  2194  0245  00AD               	movwf	___fttol@f1+1
  2195  0246  0862               	movf	_exp$646+2,w
  2196  0247  00AE               	movwf	___fttol@f1+2
  2197  0248  120A  158A  2772  120A  118A  	fcall	___fttol
  2198  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2199  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2200  024F  082D               	movf	?___fttol+1,w
  2201  0250  00E4               	movwf	exp@exponent+1
  2202  0251  082C               	movf	?___fttol,w
  2203  0252  00E3               	movwf	exp@exponent
  2204  0253  0864               	movf	exp@exponent+1,w
  2205  0254  00A9               	movwf	___awtoft@c+1
  2206  0255  0863               	movf	exp@exponent,w
  2207  0256  00A8               	movwf	___awtoft@c
  2208  0257  120A  158A  2419  120A  118A  	fcall	___awtoft
  2209  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2210  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2211  025E  0828               	movf	?___awtoft,w
  2212  025F  00CB               	movwf	___ftsub@f2
  2213  0260  0829               	movf	?___awtoft+1,w
  2214  0261  00CC               	movwf	___ftsub@f2+1
  2215  0262  082A               	movf	?___awtoft+2,w
  2216  0263  00CD               	movwf	___ftsub@f2+2
  2217  0264  085C               	movf	exp@x,w
  2218  0265  00CE               	movwf	___ftsub@f1
  2219  0266  085D               	movf	exp@x+1,w
  2220  0267  00CF               	movwf	___ftsub@f1+1
  2221  0268  085E               	movf	exp@x+2,w
  2222  0269  00D0               	movwf	___ftsub@f1+2
  2223  026A  120A  158A  23F8  120A  118A  	fcall	___ftsub
  2224  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0271  084B               	movf	?___ftsub,w
  2227  0272  00DC               	movwf	exp@x
  2228  0273  084C               	movf	?___ftsub+1,w
  2229  0274  00DD               	movwf	exp@x+1
  2230  0275  084D               	movf	?___ftsub+2,w
  2231  0276  00DE               	movwf	exp@x+2
  2232  0277  085C               	movf	exp@x,w
  2233  0278  00CB               	movwf	eval_poly@x
  2234  0279  085D               	movf	exp@x+1,w
  2235  027A  00CC               	movwf	eval_poly@x+1
  2236  027B  085E               	movf	exp@x+2,w
  2237  027C  00CD               	movwf	eval_poly@x+2
  2238  027D  3001               	movlw	(low ((exp@coeff-__stringbase)| (0+32768)))& (0+255)
  2239  027E  00DF               	movwf	??_exp
  2240  027F  085F               	movf	??_exp,w
  2241  0280  00CE               	movwf	eval_poly@d
  2242  0281  3009               	movlw	9
  2243  0282  00CF               	movwf	eval_poly@n
  2244  0283  3000               	movlw	0
  2245  0284  00D0               	movwf	eval_poly@n+1
  2246  0285  120A  158A  2677  120A  118A  	fcall	_eval_poly
  2247  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2248  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2249  028C  084B               	movf	?_eval_poly,w
  2250  028D  00D5               	movwf	ldexp@value
  2251  028E  084C               	movf	?_eval_poly+1,w
  2252  028F  00D6               	movwf	ldexp@value+1
  2253  0290  084D               	movf	?_eval_poly+2,w
  2254  0291  00D7               	movwf	ldexp@value+2
  2255  0292  0864               	movf	exp@exponent+1,w
  2256  0293  00D9               	movwf	ldexp@newexp+1
  2257  0294  0863               	movf	exp@exponent,w
  2258  0295  00D8               	movwf	ldexp@newexp
  2259  0296  120A  158A  26F0  120A  118A  	fcall	_ldexp
  2260  029B  1283               	bcf	3,5	;RP0=0, select bank0
  2261  029C  1303               	bcf	3,6	;RP1=0, select bank0
  2262  029D  0855               	movf	?_ldexp,w
  2263  029E  00DC               	movwf	exp@x
  2264  029F  0856               	movf	?_ldexp+1,w
  2265  02A0  00DD               	movwf	exp@x+1
  2266  02A1  0857               	movf	?_ldexp+2,w
  2267  02A2  00DE               	movwf	exp@x+2
  2268  02A3  0865               	movf	exp@sign,w
  2269  02A4  1903               	btfsc	3,2
  2270  02A5  0008               	return
  2271  02A6  0A5C               	incf	exp@x,w
  2272  02A7  307F               	movlw	127
  2273  02A8  1903               	skipnz
  2274  02A9  065D               	xorwf	exp@x+1,w
  2275  02AA  307F               	movlw	127
  2276  02AB  1903               	skipnz
  2277  02AC  065E               	xorwf	exp@x+2,w
  2278  02AD  1D03               	btfss	3,2
  2279  02AE  2AB6               	goto	l2343
  2280  02AF  3000               	movlw	0
  2281  02B0  00DC               	movwf	?_exp
  2282  02B1  3000               	movlw	0
  2283  02B2  00DD               	movwf	?_exp+1
  2284  02B3  3000               	movlw	0
  2285  02B4  00DE               	movwf	?_exp+2
  2286  02B5  0008               	return
  2287  02B6                     l2343:	
  2288  02B6  085C               	movf	exp@x,w
  2289  02B7  00A8               	movwf	___ftdiv@f2
  2290  02B8  085D               	movf	exp@x+1,w
  2291  02B9  00A9               	movwf	___ftdiv@f2+1
  2292  02BA  085E               	movf	exp@x+2,w
  2293  02BB  00AA               	movwf	___ftdiv@f2+2
  2294  02BC  3000               	movlw	0
  2295  02BD  00AB               	movwf	___ftdiv@f1
  2296  02BE  3080               	movlw	128
  2297  02BF  00AC               	movwf	___ftdiv@f1+1
  2298  02C0  303F               	movlw	63
  2299  02C1  00AD               	movwf	___ftdiv@f1+2
  2300  02C2  120A  118A  264E   	fcall	___ftdiv
  2301  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2302  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2303  02C7  0828               	movf	?___ftdiv,w
  2304  02C8  00DC               	movwf	?_exp
  2305  02C9  0829               	movf	?___ftdiv+1,w
  2306  02CA  00DD               	movwf	?_exp+1
  2307  02CB  082A               	movf	?___ftdiv+2,w
  2308  02CC  00DE               	movwf	?_exp+2
  2309  02CD  0008               	return
  2310  02CE                     __end_of_exp:	
  2311                           
  2312                           	psect	text7
  2313  0EF0                     __ptext7:	
  2314 ;; *************** function _ldexp *****************
  2315 ;; Defined at:
  2316 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  value           3   53[BANK0 ] unsigned char 
  2319 ;;  newexp          2   56[BANK0 ] int 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;		None
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  3   53[BANK0 ] int 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2331 ;;      Params:         0       5       0       0       0
  2332 ;;      Locals:         0       0       0       0       0
  2333 ;;      Temps:          0       2       0       0       0
  2334 ;;      Totals:         0       7       0       0       0
  2335 ;;Total ram usage:        7 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:    2
  2338 ;; This function calls:
  2339 ;;		___ftge
  2340 ;; This function is called by:
  2341 ;;		_exp
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           
  2346                           ;psect for function _ldexp
  2347  0EF0                     _ldexp:	
  2348                           
  2349                           ;incstack = 0
  2350                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2351  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  2352  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  2353  0EF2  0857               	movf	ldexp@value+2,w
  2354  0EF3  0456               	iorwf	ldexp@value+1,w
  2355  0EF4  0455               	iorwf	ldexp@value,w
  2356  0EF5  1D03               	skipz
  2357  0EF6  2EFE               	goto	l1671
  2358  0EF7  3000               	movlw	0
  2359  0EF8  00D5               	movwf	?_ldexp
  2360  0EF9  3000               	movlw	0
  2361  0EFA  00D6               	movwf	?_ldexp+1
  2362  0EFB  3000               	movlw	0
  2363  0EFC  00D7               	movwf	?_ldexp+2
  2364  0EFD  0008               	return
  2365  0EFE                     l1671:	
  2366  0EFE  0857               	movf	ldexp@value+2,w
  2367  0EFF  397F               	andlw	127
  2368  0F00  00DA               	movwf	??_ldexp
  2369  0F01  01DB               	clrf	??_ldexp+1
  2370  0F02  1003               	clrc
  2371  0F03  0DDA               	rlf	??_ldexp,f
  2372  0F04  0DDB               	rlf	??_ldexp+1,f
  2373  0F05  085A               	movf	??_ldexp,w
  2374  0F06  07D8               	addwf	ldexp@newexp,f
  2375  0F07  1803               	skipnc
  2376  0F08  0AD9               	incf	ldexp@newexp+1,f
  2377  0F09  085B               	movf	??_ldexp+1,w
  2378  0F0A  07D9               	addwf	ldexp@newexp+1,f
  2379  0F0B  0D56               	rlf	ldexp@value+1,w
  2380  0F0C  0D56               	rlf	ldexp@value+1,w
  2381  0F0D  3901               	andlw	1
  2382  0F0E  00DA               	movwf	??_ldexp
  2383  0F0F  01DB               	clrf	??_ldexp+1
  2384  0F10  085A               	movf	??_ldexp,w
  2385  0F11  07D8               	addwf	ldexp@newexp,f
  2386  0F12  1803               	skipnc
  2387  0F13  0AD9               	incf	ldexp@newexp+1,f
  2388  0F14  085B               	movf	??_ldexp+1,w
  2389  0F15  07D9               	addwf	ldexp@newexp+1,f
  2390  0F16  1FD9               	btfss	ldexp@newexp+1,7
  2391  0F17  2F23               	goto	l1681
  2392  0F18  3022               	movlw	34
  2393  0F19  00FA               	movwf	_errno
  2394  0F1A  3000               	movlw	0
  2395  0F1B  00FB               	movwf	_errno+1
  2396  0F1C  3000               	movlw	0
  2397  0F1D  00D5               	movwf	?_ldexp
  2398  0F1E  3000               	movlw	0
  2399  0F1F  00D6               	movwf	?_ldexp+1
  2400  0F20  3000               	movlw	0
  2401  0F21  00D7               	movwf	?_ldexp+2
  2402  0F22  0008               	return
  2403  0F23                     l1681:	
  2404  0F23  0859               	movf	ldexp@newexp+1,w
  2405  0F24  3A80               	xorlw	128
  2406  0F25  00FF               	movwf	127
  2407  0F26  3081               	movlw	129
  2408  0F27  027F               	subwf	127,w
  2409  0F28  1D03               	skipz
  2410  0F29  2F2C               	goto	u2225
  2411  0F2A  3000               	movlw	0
  2412  0F2B  0258               	subwf	ldexp@newexp,w
  2413  0F2C                     u2225:	
  2414  0F2C  1C03               	skipc
  2415  0F2D  2F59               	goto	l1697
  2416  0F2E  3022               	movlw	34
  2417  0F2F  00FA               	movwf	_errno
  2418  0F30  3000               	movlw	0
  2419  0F31  00FB               	movwf	_errno+1
  2420  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  2421  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  2422  0F34  0855               	movf	ldexp@value,w
  2423  0F35  00A0               	movwf	___ftge@ff1
  2424  0F36  0856               	movf	ldexp@value+1,w
  2425  0F37  00A1               	movwf	___ftge@ff1+1
  2426  0F38  0857               	movf	ldexp@value+2,w
  2427  0F39  00A2               	movwf	___ftge@ff1+2
  2428  0F3A  3000               	movlw	0
  2429  0F3B  00A3               	movwf	___ftge@ff2
  2430  0F3C  3000               	movlw	0
  2431  0F3D  00A4               	movwf	___ftge@ff2+1
  2432  0F3E  3000               	movlw	0
  2433  0F3F  00A5               	movwf	___ftge@ff2+2
  2434  0F40  120A  118A  279F  120A  158A  	fcall	___ftge
  2435  0F45  1803               	btfsc	3,0
  2436  0F46  2F50               	goto	l1693
  2437  0F47  30FF               	movlw	255
  2438  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  2439  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  2440  0F4A  00D5               	movwf	?_ldexp
  2441  0F4B  307F               	movlw	127
  2442  0F4C  00D6               	movwf	?_ldexp+1
  2443  0F4D  30FF               	movlw	255
  2444  0F4E  00D7               	movwf	?_ldexp+2
  2445  0F4F  0008               	return
  2446  0F50                     l1693:	
  2447  0F50  30FF               	movlw	255
  2448  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  2449  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  2450  0F53  00D5               	movwf	?_ldexp
  2451  0F54  307F               	movlw	127
  2452  0F55  00D6               	movwf	?_ldexp+1
  2453  0F56  307F               	movlw	127
  2454  0F57  00D7               	movwf	?_ldexp+2
  2455  0F58  0008               	return
  2456  0F59                     l1697:	
  2457  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  2458  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2459  0F5B  0859               	movf	ldexp@newexp+1,w
  2460  0F5C  00DB               	movwf	??_ldexp+1
  2461  0F5D  0858               	movf	ldexp@newexp,w
  2462  0F5E  00DA               	movwf	??_ldexp
  2463  0F5F  0D5B               	rlf	??_ldexp+1,w
  2464  0F60  0CDB               	rrf	??_ldexp+1,f
  2465  0F61  0CDA               	rrf	??_ldexp,f
  2466  0F62  0857               	movf	ldexp@value+2,w
  2467  0F63  065A               	xorwf	??_ldexp,w
  2468  0F64  3980               	andlw	-128
  2469  0F65  065A               	xorwf	??_ldexp,w
  2470  0F66  00D7               	movwf	ldexp@value+2
  2471  0F67  0858               	movf	ldexp@newexp,w
  2472  0F68  3901               	andlw	1
  2473  0F69  00DA               	movwf	??_ldexp
  2474  0F6A  0CDA               	rrf	??_ldexp,f
  2475  0F6B  0CDA               	rrf	??_ldexp,f
  2476  0F6C  0856               	movf	ldexp@value+1,w
  2477  0F6D  065A               	xorwf	??_ldexp,w
  2478  0F6E  397F               	andlw	-129
  2479  0F6F  065A               	xorwf	??_ldexp,w
  2480  0F70  00D6               	movwf	ldexp@value+1
  2481  0F71  0008               	return
  2482  0F72                     __end_of_ldexp:	
  2483                           
  2484                           	psect	text8
  2485  0706                     __ptext8:	
  2486 ;; *************** function _floor *****************
  2487 ;; Defined at:
  2488 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\floor.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  x               3   43[BANK0 ] int 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  i               3   47[BANK0 ] int 
  2493 ;;  expon           2   50[BANK0 ] int 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  3   43[BANK0 ] int 
  2496 ;; Registers used:
  2497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2503 ;;      Params:         0       3       0       0       0
  2504 ;;      Locals:         0       5       0       0       0
  2505 ;;      Temps:          0       1       0       0       0
  2506 ;;      Totals:         0       9       0       0       0
  2507 ;;Total ram usage:        9 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    3
  2510 ;; This function calls:
  2511 ;;		___altoft
  2512 ;;		___ftadd
  2513 ;;		___ftge
  2514 ;;		___fttol
  2515 ;;		_frexp
  2516 ;; This function is called by:
  2517 ;;		_exp
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           
  2522                           ;psect for function _floor
  2523  0706                     _floor:	
  2524                           
  2525                           ;incstack = 0
  2526                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2527  0706  1283               	bcf	3,5	;RP0=0, select bank0
  2528  0707  1303               	bcf	3,6	;RP1=0, select bank0
  2529  0708  084B               	movf	floor@x,w
  2530  0709  00A0               	movwf	frexp@value
  2531  070A  084C               	movf	floor@x+1,w
  2532  070B  00A1               	movwf	frexp@value+1
  2533  070C  084D               	movf	floor@x+2,w
  2534  070D  00A2               	movwf	frexp@value+2
  2535  070E  3052               	movlw	(low (floor@expon| 0))& (0+255)
  2536  070F  00CE               	movwf	??_floor
  2537  0710  084E               	movf	??_floor,w
  2538  0711  00A3               	movwf	frexp@eptr
  2539  0712  120A  158A  24F0  120A  118A  	fcall	_frexp
  2540  0717  1283               	bcf	3,5	;RP0=0, select bank0
  2541  0718  1303               	bcf	3,6	;RP1=0, select bank0
  2542  0719  1FD3               	btfss	floor@expon+1,7
  2543  071A  2F40               	goto	l2231
  2544  071B  084B               	movf	floor@x,w
  2545  071C  00A0               	movwf	___ftge@ff1
  2546  071D  084C               	movf	floor@x+1,w
  2547  071E  00A1               	movwf	___ftge@ff1+1
  2548  071F  084D               	movf	floor@x+2,w
  2549  0720  00A2               	movwf	___ftge@ff1+2
  2550  0721  3000               	movlw	0
  2551  0722  00A3               	movwf	___ftge@ff2
  2552  0723  3000               	movlw	0
  2553  0724  00A4               	movwf	___ftge@ff2+1
  2554  0725  3000               	movlw	0
  2555  0726  00A5               	movwf	___ftge@ff2+2
  2556  0727  120A  118A  279F  120A  118A  	fcall	___ftge
  2557  072C  1803               	btfsc	3,0
  2558  072D  2F37               	goto	l2227
  2559  072E  3000               	movlw	0
  2560  072F  1283               	bcf	3,5	;RP0=0, select bank0
  2561  0730  1303               	bcf	3,6	;RP1=0, select bank0
  2562  0731  00CB               	movwf	?_floor
  2563  0732  3080               	movlw	128
  2564  0733  00CC               	movwf	?_floor+1
  2565  0734  30BF               	movlw	191
  2566  0735  00CD               	movwf	?_floor+2
  2567  0736  0008               	return
  2568  0737                     l2227:	
  2569  0737  3000               	movlw	0
  2570  0738  1283               	bcf	3,5	;RP0=0, select bank0
  2571  0739  1303               	bcf	3,6	;RP1=0, select bank0
  2572  073A  00CB               	movwf	?_floor
  2573  073B  3000               	movlw	0
  2574  073C  00CC               	movwf	?_floor+1
  2575  073D  3000               	movlw	0
  2576  073E  00CD               	movwf	?_floor+2
  2577  073F  0008               	return
  2578  0740                     l2231:	
  2579  0740  3000               	movlw	0
  2580  0741  0253               	subwf	floor@expon+1,w
  2581  0742  3015               	movlw	21
  2582  0743  1903               	skipnz
  2583  0744  0252               	subwf	floor@expon,w
  2584  0745  1803               	btfsc	3,0
  2585  0746  0008               	return
  2586  0747  084B               	movf	floor@x,w
  2587  0748  00AC               	movwf	___fttol@f1
  2588  0749  084C               	movf	floor@x+1,w
  2589  074A  00AD               	movwf	___fttol@f1+1
  2590  074B  084D               	movf	floor@x+2,w
  2591  074C  00AE               	movwf	___fttol@f1+2
  2592  074D  120A  158A  2772  120A  118A  	fcall	___fttol
  2593  0752  1283               	bcf	3,5	;RP0=0, select bank0
  2594  0753  1303               	bcf	3,6	;RP1=0, select bank0
  2595  0754  082F               	movf	?___fttol+3,w
  2596  0755  00BD               	movwf	___altoft@c+3
  2597  0756  082E               	movf	?___fttol+2,w
  2598  0757  00BC               	movwf	___altoft@c+2
  2599  0758  082D               	movf	?___fttol+1,w
  2600  0759  00BB               	movwf	___altoft@c+1
  2601  075A  082C               	movf	?___fttol,w
  2602  075B  00BA               	movwf	___altoft@c
  2603  075C  120A  158A  24AE  120A  118A  	fcall	___altoft
  2604  0761  1283               	bcf	3,5	;RP0=0, select bank0
  2605  0762  1303               	bcf	3,6	;RP1=0, select bank0
  2606  0763  083A               	movf	?___altoft,w
  2607  0764  00CF               	movwf	floor@i
  2608  0765  083B               	movf	?___altoft+1,w
  2609  0766  00D0               	movwf	floor@i+1
  2610  0767  083C               	movf	?___altoft+2,w
  2611  0768  00D1               	movwf	floor@i+2
  2612  0769  084B               	movf	floor@x,w
  2613  076A  00A0               	movwf	___ftge@ff1
  2614  076B  084C               	movf	floor@x+1,w
  2615  076C  00A1               	movwf	___ftge@ff1+1
  2616  076D  084D               	movf	floor@x+2,w
  2617  076E  00A2               	movwf	___ftge@ff1+2
  2618  076F  084F               	movf	floor@i,w
  2619  0770  00A3               	movwf	___ftge@ff2
  2620  0771  0850               	movf	floor@i+1,w
  2621  0772  00A4               	movwf	___ftge@ff2+1
  2622  0773  0851               	movf	floor@i+2,w
  2623  0774  00A5               	movwf	___ftge@ff2+2
  2624  0775  120A  118A  279F  120A  118A  	fcall	___ftge
  2625  077A  1803               	btfsc	3,0
  2626  077B  2F96               	goto	l2241
  2627  077C  3000               	movlw	0
  2628  077D  1283               	bcf	3,5	;RP0=0, select bank0
  2629  077E  1303               	bcf	3,6	;RP1=0, select bank0
  2630  077F  00BE               	movwf	___ftadd@f1
  2631  0780  3080               	movlw	128
  2632  0781  00BF               	movwf	___ftadd@f1+1
  2633  0782  30BF               	movlw	191
  2634  0783  00C0               	movwf	___ftadd@f1+2
  2635  0784  084F               	movf	floor@i,w
  2636  0785  00C1               	movwf	___ftadd@f2
  2637  0786  0850               	movf	floor@i+1,w
  2638  0787  00C2               	movwf	___ftadd@f2+1
  2639  0788  0851               	movf	floor@i+2,w
  2640  0789  00C3               	movwf	___ftadd@f2+2
  2641  078A  120A  118A  22CE   	fcall	___ftadd
  2642  078D  1283               	bcf	3,5	;RP0=0, select bank0
  2643  078E  1303               	bcf	3,6	;RP1=0, select bank0
  2644  078F  083E               	movf	?___ftadd,w
  2645  0790  00CB               	movwf	?_floor
  2646  0791  083F               	movf	?___ftadd+1,w
  2647  0792  00CC               	movwf	?_floor+1
  2648  0793  0840               	movf	?___ftadd+2,w
  2649  0794  00CD               	movwf	?_floor+2
  2650  0795  0008               	return
  2651  0796                     l2241:	
  2652  0796  1283               	bcf	3,5	;RP0=0, select bank0
  2653  0797  1303               	bcf	3,6	;RP1=0, select bank0
  2654  0798  084F               	movf	floor@i,w
  2655  0799  00CB               	movwf	?_floor
  2656  079A  0850               	movf	floor@i+1,w
  2657  079B  00CC               	movwf	?_floor+1
  2658  079C  0851               	movf	floor@i+2,w
  2659  079D  00CD               	movwf	?_floor+2
  2660  079E  0008               	return
  2661  079F                     __end_of_floor:	
  2662                           
  2663                           	psect	text9
  2664  0CF0                     __ptext9:	
  2665 ;; *************** function _frexp *****************
  2666 ;; Defined at:
  2667 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  value           3    0[BANK0 ] int 
  2670 ;;  eptr            1    3[BANK0 ] PTR int 
  2671 ;;		 -> log@exponent(2), floor@expon(2), 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  3    0[BANK0 ] PTR int 
  2676 ;; Registers used:
  2677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2683 ;;      Params:         0       4       0       0       0
  2684 ;;      Locals:         0       0       0       0       0
  2685 ;;      Temps:          0       2       0       0       0
  2686 ;;      Totals:         0       6       0       0       0
  2687 ;;Total ram usage:        6 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    1
  2690 ;; This function calls:
  2691 ;;		Nothing
  2692 ;; This function is called by:
  2693 ;;		_floor
  2694 ;;		_log
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           
  2699                           ;psect for function _frexp
  2700  0CF0                     _frexp:	
  2701                           
  2702                           ;incstack = 0
  2703                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  2704  0CF0  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0CF1  1303               	bcf	3,6	;RP1=0, select bank0
  2706  0CF2  0822               	movf	frexp@value+2,w
  2707  0CF3  0421               	iorwf	frexp@value+1,w
  2708  0CF4  0420               	iorwf	frexp@value,w
  2709  0CF5  1D03               	skipz
  2710  0CF6  2D04               	goto	l2135
  2711  0CF7  0823               	movf	frexp@eptr,w
  2712  0CF8  0084               	movwf	4
  2713  0CF9  1383               	bcf	3,7	;select IRP bank0
  2714  0CFA  0180               	clrf	0
  2715  0CFB  0A84               	incf	4,f
  2716  0CFC  0180               	clrf	0
  2717  0CFD  3000               	movlw	0
  2718  0CFE  00A0               	movwf	?_frexp
  2719  0CFF  3000               	movlw	0
  2720  0D00  00A1               	movwf	?_frexp+1
  2721  0D01  3000               	movlw	0
  2722  0D02  00A2               	movwf	?_frexp+2
  2723  0D03  0008               	return
  2724  0D04                     l2135:	
  2725  0D04  0822               	movf	frexp@value+2,w
  2726  0D05  397F               	andlw	127
  2727  0D06  00A4               	movwf	??_frexp
  2728  0D07  01A5               	clrf	??_frexp+1
  2729  0D08  1003               	clrc
  2730  0D09  0DA4               	rlf	??_frexp,f
  2731  0D0A  0DA5               	rlf	??_frexp+1,f
  2732  0D0B  0823               	movf	frexp@eptr,w
  2733  0D0C  0084               	movwf	4
  2734  0D0D  0824               	movf	??_frexp,w
  2735  0D0E  1383               	bcf	3,7	;select IRP bank0
  2736  0D0F  0080               	movwf	0
  2737  0D10  0A84               	incf	4,f
  2738  0D11  0825               	movf	??_frexp+1,w
  2739  0D12  0080               	movwf	0
  2740  0D13  0D21               	rlf	frexp@value+1,w
  2741  0D14  0D21               	rlf	frexp@value+1,w
  2742  0D15  3901               	andlw	1
  2743  0D16  00A4               	movwf	??_frexp
  2744  0D17  01A5               	clrf	??_frexp+1
  2745  0D18  0823               	movf	frexp@eptr,w
  2746  0D19  0084               	movwf	4
  2747  0D1A  0824               	movf	??_frexp,w
  2748  0D1B  0480               	iorwf	0,f
  2749  0D1C  0A84               	incf	4,f
  2750  0D1D  0825               	movf	??_frexp+1,w
  2751  0D1E  0480               	iorwf	0,f
  2752  0D1F  0823               	movf	frexp@eptr,w
  2753  0D20  0084               	movwf	4
  2754  0D21  3082               	movlw	130
  2755  0D22  0780               	addwf	0,f
  2756  0D23  0F84               	incfsz	4,f
  2757  0D24  0800               	movf	0,w
  2758  0D25  1803               	skipnc
  2759  0D26  0A00               	incf	0,w
  2760  0D27  00FF               	movwf	127
  2761  0D28  30FF               	movlw	255
  2762  0D29  077F               	addwf	127,w
  2763  0D2A  0080               	movwf	0
  2764  0D2B  0384               	decf	4,f
  2765  0D2C  0822               	movf	frexp@value+2,w
  2766  0D2D  3980               	andlw	-128
  2767  0D2E  383F               	iorlw	63
  2768  0D2F  00A2               	movwf	frexp@value+2
  2769  0D30  13A1               	bcf	frexp@value+1,7
  2770  0D31  0008               	return
  2771  0D32                     __end_of_frexp:	
  2772                           
  2773                           	psect	text10
  2774  0F72                     __ptext10:	
  2775 ;; *************** function ___fttol *****************
  2776 ;; Defined at:
  2777 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  f1              3   12[BANK0 ] float 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;  lval            4   21[BANK0 ] unsigned long 
  2782 ;;  exp1            1   25[BANK0 ] unsigned char 
  2783 ;;  sign1           1   20[BANK0 ] unsigned char 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  4   12[BANK0 ] long 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2793 ;;      Params:         0       4       0       0       0
  2794 ;;      Locals:         0       6       0       0       0
  2795 ;;      Temps:          0       4       0       0       0
  2796 ;;      Totals:         0      14       0       0       0
  2797 ;;Total ram usage:       14 bytes
  2798 ;; Hardware stack levels used:    1
  2799 ;; Hardware stack levels required when called:    1
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_main
  2804 ;;		_pow
  2805 ;;		_exp
  2806 ;;		_floor
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           
  2811                           ;psect for function ___fttol
  2812  0F72                     ___fttol:	
  2813                           
  2814                           ;incstack = 0
  2815                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2816  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  2817  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  2818  0F74  082C               	movf	___fttol@f1,w
  2819  0F75  00B0               	movwf	??___fttol
  2820  0F76  082D               	movf	___fttol@f1+1,w
  2821  0F77  00B1               	movwf	??___fttol+1
  2822  0F78  082E               	movf	___fttol@f1+2,w
  2823  0F79  00B2               	movwf	??___fttol+2
  2824  0F7A  1003               	clrc
  2825  0F7B  0D31               	rlf	??___fttol+1,w
  2826  0F7C  0D32               	rlf	??___fttol+2,w
  2827  0F7D  00B3               	movwf	??___fttol+3
  2828  0F7E  0833               	movf	??___fttol+3,w
  2829  0F7F  00B9               	movwf	___fttol@exp1
  2830  0F80  0839               	movf	___fttol@exp1,w
  2831  0F81  1D03               	btfss	3,2
  2832  0F82  2F8C               	goto	l1501
  2833  0F83  3000               	movlw	0
  2834  0F84  00AF               	movwf	?___fttol+3
  2835  0F85  3000               	movlw	0
  2836  0F86  00AE               	movwf	?___fttol+2
  2837  0F87  3000               	movlw	0
  2838  0F88  00AD               	movwf	?___fttol+1
  2839  0F89  3000               	movlw	0
  2840  0F8A  00AC               	movwf	?___fttol
  2841  0F8B  0008               	return
  2842  0F8C                     l1501:	
  2843  0F8C  082C               	movf	___fttol@f1,w
  2844  0F8D  00B0               	movwf	??___fttol
  2845  0F8E  082D               	movf	___fttol@f1+1,w
  2846  0F8F  00B1               	movwf	??___fttol+1
  2847  0F90  082E               	movf	___fttol@f1+2,w
  2848  0F91  00B2               	movwf	??___fttol+2
  2849  0F92  3017               	movlw	23
  2850  0F93                     u1945:	
  2851  0F93  1003               	clrc
  2852  0F94  0CB2               	rrf	??___fttol+2,f
  2853  0F95  0CB1               	rrf	??___fttol+1,f
  2854  0F96  0CB0               	rrf	??___fttol,f
  2855  0F97  3EFF               	addlw	-1
  2856  0F98  1D03               	skipz
  2857  0F99  2F93               	goto	u1945
  2858  0F9A  0830               	movf	??___fttol,w
  2859  0F9B  00B3               	movwf	??___fttol+3
  2860  0F9C  0833               	movf	??___fttol+3,w
  2861  0F9D  00B4               	movwf	___fttol@sign1
  2862  0F9E  17AD               	bsf	___fttol@f1+1,7
  2863  0F9F  30FF               	movlw	255
  2864  0FA0  05AC               	andwf	___fttol@f1,f
  2865  0FA1  30FF               	movlw	255
  2866  0FA2  05AD               	andwf	___fttol@f1+1,f
  2867  0FA3  3000               	movlw	0
  2868  0FA4  05AE               	andwf	___fttol@f1+2,f
  2869  0FA5  082C               	movf	___fttol@f1,w
  2870  0FA6  00B5               	movwf	___fttol@lval
  2871  0FA7  082D               	movf	___fttol@f1+1,w
  2872  0FA8  00B6               	movwf	___fttol@lval+1
  2873  0FA9  082E               	movf	___fttol@f1+2,w
  2874  0FAA  00B7               	movwf	___fttol@lval+2
  2875  0FAB  01B8               	clrf	___fttol@lval+3
  2876  0FAC  308E               	movlw	142
  2877  0FAD  02B9               	subwf	___fttol@exp1,f
  2878  0FAE  1FB9               	btfss	___fttol@exp1,7
  2879  0FAF  2FCE               	goto	l1521
  2880  0FB0  0839               	movf	___fttol@exp1,w
  2881  0FB1  3A80               	xorlw	128
  2882  0FB2  3E8F               	addlw	143
  2883  0FB3  1803               	skipnc
  2884  0FB4  2FBE               	goto	l1519
  2885  0FB5  3000               	movlw	0
  2886  0FB6  00AF               	movwf	?___fttol+3
  2887  0FB7  3000               	movlw	0
  2888  0FB8  00AE               	movwf	?___fttol+2
  2889  0FB9  3000               	movlw	0
  2890  0FBA  00AD               	movwf	?___fttol+1
  2891  0FBB  3000               	movlw	0
  2892  0FBC  00AC               	movwf	?___fttol
  2893  0FBD  0008               	return
  2894  0FBE                     l1519:	
  2895  0FBE  3001               	movlw	1
  2896  0FBF                     u1975:	
  2897  0FBF  1003               	clrc
  2898  0FC0  0CB8               	rrf	___fttol@lval+3,f
  2899  0FC1  0CB7               	rrf	___fttol@lval+2,f
  2900  0FC2  0CB6               	rrf	___fttol@lval+1,f
  2901  0FC3  0CB5               	rrf	___fttol@lval,f
  2902  0FC4  3EFF               	addlw	-1
  2903  0FC5  1D03               	skipz
  2904  0FC6  2FBF               	goto	u1975
  2905  0FC7  3001               	movlw	1
  2906  0FC8  00B0               	movwf	??___fttol
  2907  0FC9  0830               	movf	??___fttol,w
  2908  0FCA  07B9               	addwf	___fttol@exp1,f
  2909  0FCB  1903               	btfsc	3,2
  2910  0FCC  2FE9               	goto	l1529
  2911  0FCD  2FBE               	goto	l1519
  2912  0FCE                     l1521:	
  2913  0FCE  3018               	movlw	24
  2914  0FCF  0239               	subwf	___fttol@exp1,w
  2915  0FD0  1C03               	skipc
  2916  0FD1  2FE6               	goto	l396
  2917  0FD2  3000               	movlw	0
  2918  0FD3  00AF               	movwf	?___fttol+3
  2919  0FD4  3000               	movlw	0
  2920  0FD5  00AE               	movwf	?___fttol+2
  2921  0FD6  3000               	movlw	0
  2922  0FD7  00AD               	movwf	?___fttol+1
  2923  0FD8  3000               	movlw	0
  2924  0FD9  00AC               	movwf	?___fttol
  2925  0FDA  0008               	return
  2926  0FDB                     l1527:	
  2927  0FDB  3001               	movlw	1
  2928  0FDC  00B0               	movwf	??___fttol
  2929  0FDD                     u2005:	
  2930  0FDD  1003               	clrc
  2931  0FDE  0DB5               	rlf	___fttol@lval,f
  2932  0FDF  0DB6               	rlf	___fttol@lval+1,f
  2933  0FE0  0DB7               	rlf	___fttol@lval+2,f
  2934  0FE1  0DB8               	rlf	___fttol@lval+3,f
  2935  0FE2  0BB0               	decfsz	??___fttol,f
  2936  0FE3  2FDD               	goto	u2005
  2937  0FE4  3001               	movlw	1
  2938  0FE5  02B9               	subwf	___fttol@exp1,f
  2939  0FE6                     l396:	
  2940  0FE6  0839               	movf	___fttol@exp1,w
  2941  0FE7  1D03               	btfss	3,2
  2942  0FE8  2FDB               	goto	l1527
  2943  0FE9                     l1529:	
  2944  0FE9  0834               	movf	___fttol@sign1,w
  2945  0FEA  1903               	btfsc	3,2
  2946  0FEB  2FF7               	goto	l1533
  2947  0FEC  09B5               	comf	___fttol@lval,f
  2948  0FED  09B6               	comf	___fttol@lval+1,f
  2949  0FEE  09B7               	comf	___fttol@lval+2,f
  2950  0FEF  09B8               	comf	___fttol@lval+3,f
  2951  0FF0  0AB5               	incf	___fttol@lval,f
  2952  0FF1  1903               	skipnz
  2953  0FF2  0AB6               	incf	___fttol@lval+1,f
  2954  0FF3  1903               	skipnz
  2955  0FF4  0AB7               	incf	___fttol@lval+2,f
  2956  0FF5  1903               	skipnz
  2957  0FF6  0AB8               	incf	___fttol@lval+3,f
  2958  0FF7                     l1533:	
  2959  0FF7  0838               	movf	___fttol@lval+3,w
  2960  0FF8  00AF               	movwf	?___fttol+3
  2961  0FF9  0837               	movf	___fttol@lval+2,w
  2962  0FFA  00AE               	movwf	?___fttol+2
  2963  0FFB  0836               	movf	___fttol@lval+1,w
  2964  0FFC  00AD               	movwf	?___fttol+1
  2965  0FFD  0835               	movf	___fttol@lval,w
  2966  0FFE  00AC               	movwf	?___fttol
  2967  0FFF  0008               	return
  2968  1000                     __end_of___fttol:	
  2969                           
  2970                           	psect	text11
  2971  079F                     __ptext11:	
  2972 ;; *************** function ___ftge *****************
  2973 ;; Defined at:
  2974 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  ff1             3    0[BANK0 ] float 
  2977 ;;  ff2             3    3[BANK0 ] float 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;		None               void
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2989 ;;      Params:         0       6       0       0       0
  2990 ;;      Locals:         0       0       0       0       0
  2991 ;;      Temps:          0       6       0       0       0
  2992 ;;      Totals:         0      12       0       0       0
  2993 ;;Total ram usage:       12 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    1
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_pow
  3000 ;;		_exp
  3001 ;;		_floor
  3002 ;;		_ldexp
  3003 ;;		_log
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           
  3008                           ;psect for function ___ftge
  3009  079F                     ___ftge:	
  3010                           
  3011                           ;incstack = 0
  3012                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3013  079F  1283               	bcf	3,5	;RP0=0, select bank0
  3014  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  3015  07A1  1FA2               	btfss	___ftge@ff1+2,7
  3016  07A2  2FC8               	goto	l1429
  3017  07A3  3000               	movlw	0
  3018  07A4  00A6               	movwf	??___ftge
  3019  07A5  3000               	movlw	0
  3020  07A6  00A7               	movwf	??___ftge+1
  3021  07A7  3080               	movlw	128
  3022  07A8  00A8               	movwf	??___ftge+2
  3023  07A9  0920               	comf	___ftge@ff1,w
  3024  07AA  00A9               	movwf	??___ftge+3
  3025  07AB  0921               	comf	___ftge@ff1+1,w
  3026  07AC  00AA               	movwf	??___ftge+4
  3027  07AD  0922               	comf	___ftge@ff1+2,w
  3028  07AE  00AB               	movwf	??___ftge+5
  3029  07AF  0AA9               	incf	??___ftge+3,f
  3030  07B0  1903               	skipnz
  3031  07B1  0AAA               	incf	??___ftge+4,f
  3032  07B2  1903               	skipnz
  3033  07B3  0AAB               	incf	??___ftge+5,f
  3034  07B4  0829               	movf	??___ftge+3,w
  3035  07B5  07A6               	addwf	??___ftge,f
  3036  07B6  082A               	movf	??___ftge+4,w
  3037  07B7  1803               	skipnc
  3038  07B8  0F2A               	incfsz	??___ftge+4,w
  3039  07B9  2FBB               	goto	u1751
  3040  07BA  2FBC               	goto	u1752
  3041  07BB                     u1751:	
  3042  07BB  07A7               	addwf	??___ftge+1,f
  3043  07BC                     u1752:	
  3044  07BC  082B               	movf	??___ftge+5,w
  3045  07BD  1803               	skipnc
  3046  07BE  0F2B               	incfsz	??___ftge+5,w
  3047  07BF  2FC1               	goto	u1753
  3048  07C0  2FC2               	goto	u1754
  3049  07C1                     u1753:	
  3050  07C1  07A8               	addwf	??___ftge+2,f
  3051  07C2                     u1754:	
  3052  07C2  0826               	movf	??___ftge,w
  3053  07C3  00A0               	movwf	___ftge@ff1
  3054  07C4  0827               	movf	??___ftge+1,w
  3055  07C5  00A1               	movwf	___ftge@ff1+1
  3056  07C6  0828               	movf	??___ftge+2,w
  3057  07C7  00A2               	movwf	___ftge@ff1+2
  3058  07C8                     l1429:	
  3059  07C8  1FA5               	btfss	___ftge@ff2+2,7
  3060  07C9  2FEF               	goto	l1433
  3061  07CA  3000               	movlw	0
  3062  07CB  00A6               	movwf	??___ftge
  3063  07CC  3000               	movlw	0
  3064  07CD  00A7               	movwf	??___ftge+1
  3065  07CE  3080               	movlw	128
  3066  07CF  00A8               	movwf	??___ftge+2
  3067  07D0  0923               	comf	___ftge@ff2,w
  3068  07D1  00A9               	movwf	??___ftge+3
  3069  07D2  0924               	comf	___ftge@ff2+1,w
  3070  07D3  00AA               	movwf	??___ftge+4
  3071  07D4  0925               	comf	___ftge@ff2+2,w
  3072  07D5  00AB               	movwf	??___ftge+5
  3073  07D6  0AA9               	incf	??___ftge+3,f
  3074  07D7  1903               	skipnz
  3075  07D8  0AAA               	incf	??___ftge+4,f
  3076  07D9  1903               	skipnz
  3077  07DA  0AAB               	incf	??___ftge+5,f
  3078  07DB  0829               	movf	??___ftge+3,w
  3079  07DC  07A6               	addwf	??___ftge,f
  3080  07DD  082A               	movf	??___ftge+4,w
  3081  07DE  1803               	skipnc
  3082  07DF  0F2A               	incfsz	??___ftge+4,w
  3083  07E0  2FE2               	goto	u1771
  3084  07E1  2FE3               	goto	u1772
  3085  07E2                     u1771:	
  3086  07E2  07A7               	addwf	??___ftge+1,f
  3087  07E3                     u1772:	
  3088  07E3  082B               	movf	??___ftge+5,w
  3089  07E4  1803               	skipnc
  3090  07E5  0F2B               	incfsz	??___ftge+5,w
  3091  07E6  2FE8               	goto	u1773
  3092  07E7  2FE9               	goto	u1774
  3093  07E8                     u1773:	
  3094  07E8  07A8               	addwf	??___ftge+2,f
  3095  07E9                     u1774:	
  3096  07E9  0826               	movf	??___ftge,w
  3097  07EA  00A3               	movwf	___ftge@ff2
  3098  07EB  0827               	movf	??___ftge+1,w
  3099  07EC  00A4               	movwf	___ftge@ff2+1
  3100  07ED  0828               	movf	??___ftge+2,w
  3101  07EE  00A5               	movwf	___ftge@ff2+2
  3102  07EF                     l1433:	
  3103  07EF  3080               	movlw	128
  3104  07F0  06A2               	xorwf	___ftge@ff1+2,f
  3105  07F1  3080               	movlw	128
  3106  07F2  06A5               	xorwf	___ftge@ff2+2,f
  3107  07F3  0825               	movf	___ftge@ff2+2,w
  3108  07F4  0222               	subwf	___ftge@ff1+2,w
  3109  07F5  1D03               	skipz
  3110  07F6  0008               	return
  3111  07F7  0824               	movf	___ftge@ff2+1,w
  3112  07F8  0221               	subwf	___ftge@ff1+1,w
  3113  07F9  1D03               	skipz
  3114  07FA  0008               	return
  3115  07FB  0823               	movf	___ftge@ff2,w
  3116  07FC  0220               	subwf	___ftge@ff1,w
  3117  07FD  0008               	return
  3118  07FE                     __end_of___ftge:	
  3119                           
  3120                           	psect	text12
  3121  0CAE                     __ptext12:	
  3122 ;; *************** function ___altoft *****************
  3123 ;; Defined at:
  3124 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\altoft.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;  c               4   26[BANK0 ] long 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  sign            1   33[BANK0 ] unsigned char 
  3129 ;;  exp             1   32[BANK0 ] unsigned char 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  3   26[BANK0 ] float 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0, pclath, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3139 ;;      Params:         0       4       0       0       0
  3140 ;;      Locals:         0       2       0       0       0
  3141 ;;      Temps:          0       2       0       0       0
  3142 ;;      Totals:         0       8       0       0       0
  3143 ;;Total ram usage:        8 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    2
  3146 ;; This function calls:
  3147 ;;		___ftpack
  3148 ;; This function is called by:
  3149 ;;		_floor
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           
  3154                           ;psect for function ___altoft
  3155  0CAE                     ___altoft:	
  3156                           
  3157                           ;incstack = 0
  3158                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  3159  0CAE  1283               	bcf	3,5	;RP0=0, select bank0
  3160  0CAF  1303               	bcf	3,6	;RP1=0, select bank0
  3161  0CB0  01C1               	clrf	___altoft@sign
  3162  0CB1  308E               	movlw	142
  3163  0CB2  00BE               	movwf	??___altoft
  3164  0CB3  083E               	movf	??___altoft,w
  3165  0CB4  00C0               	movwf	___altoft@exp
  3166  0CB5  1FBD               	btfss	___altoft@c+3,7
  3167  0CB6  2CC4               	goto	l2001
  3168  0CB7  09BA               	comf	___altoft@c,f
  3169  0CB8  09BB               	comf	___altoft@c+1,f
  3170  0CB9  09BC               	comf	___altoft@c+2,f
  3171  0CBA  09BD               	comf	___altoft@c+3,f
  3172  0CBB  0ABA               	incf	___altoft@c,f
  3173  0CBC  1903               	skipnz
  3174  0CBD  0ABB               	incf	___altoft@c+1,f
  3175  0CBE  1903               	skipnz
  3176  0CBF  0ABC               	incf	___altoft@c+2,f
  3177  0CC0  1903               	skipnz
  3178  0CC1  0ABD               	incf	___altoft@c+3,f
  3179  0CC2  01C1               	clrf	___altoft@sign
  3180  0CC3  0AC1               	incf	___altoft@sign,f
  3181  0CC4                     l2001:	
  3182  0CC4  30FF               	movlw	255
  3183  0CC5  053D               	andwf	___altoft@c+3,w
  3184  0CC6  1903               	btfsc	3,2
  3185  0CC7  2CD6               	goto	l2003
  3186  0CC8  3001               	movlw	1
  3187  0CC9                     u2805:	
  3188  0CC9  1003               	clrc
  3189  0CCA  0CBD               	rrf	___altoft@c+3,f
  3190  0CCB  0CBC               	rrf	___altoft@c+2,f
  3191  0CCC  0CBB               	rrf	___altoft@c+1,f
  3192  0CCD  0CBA               	rrf	___altoft@c,f
  3193  0CCE  3EFF               	addlw	-1
  3194  0CCF  1D03               	skipz
  3195  0CD0  2CC9               	goto	u2805
  3196  0CD1  3001               	movlw	1
  3197  0CD2  00BE               	movwf	??___altoft
  3198  0CD3  083E               	movf	??___altoft,w
  3199  0CD4  07C0               	addwf	___altoft@exp,f
  3200  0CD5  2CC4               	goto	l2001
  3201  0CD6                     l2003:	
  3202  0CD6  083A               	movf	___altoft@c,w
  3203  0CD7  00A0               	movwf	___ftpack@arg
  3204  0CD8  083B               	movf	___altoft@c+1,w
  3205  0CD9  00A1               	movwf	___ftpack@arg+1
  3206  0CDA  083C               	movf	___altoft@c+2,w
  3207  0CDB  00A2               	movwf	___ftpack@arg+2
  3208  0CDC  0840               	movf	___altoft@exp,w
  3209  0CDD  00BE               	movwf	??___altoft
  3210  0CDE  083E               	movf	??___altoft,w
  3211  0CDF  00A3               	movwf	___ftpack@exp
  3212  0CE0  0841               	movf	___altoft@sign,w
  3213  0CE1  00BF               	movwf	??___altoft+1
  3214  0CE2  083F               	movf	??___altoft+1,w
  3215  0CE3  00A4               	movwf	___ftpack@sign
  3216  0CE4  120A  158A  2609   	fcall	___ftpack
  3217  0CE7  1283               	bcf	3,5	;RP0=0, select bank0
  3218  0CE8  1303               	bcf	3,6	;RP1=0, select bank0
  3219  0CE9  0820               	movf	?___ftpack,w
  3220  0CEA  00BA               	movwf	?___altoft
  3221  0CEB  0821               	movf	?___ftpack+1,w
  3222  0CEC  00BB               	movwf	?___altoft+1
  3223  0CED  0822               	movf	?___ftpack+2,w
  3224  0CEE  00BC               	movwf	?___altoft+2
  3225  0CEF  0008               	return
  3226  0CF0                     __end_of___altoft:	
  3227                           
  3228                           	psect	text13
  3229  0E77                     __ptext13:	
  3230 ;; *************** function _eval_poly *****************
  3231 ;; Defined at:
  3232 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\evalpoly.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  x               3   43[BANK0 ] float 
  3235 ;;  d               1   46[BANK0 ] PTR const 
  3236 ;;		 -> log@coeff(27), exp@coeff(30), 
  3237 ;;  n               2   47[BANK0 ] int 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;  res             3   50[BANK0 ] int 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  3   43[BANK0 ] int 
  3242 ;; Registers used:
  3243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3249 ;;      Params:         0       6       0       0       0
  3250 ;;      Locals:         0       3       0       0       0
  3251 ;;      Temps:          0       1       0       0       0
  3252 ;;      Totals:         0      10       0       0       0
  3253 ;;Total ram usage:       10 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    3
  3256 ;; This function calls:
  3257 ;;		___bmul
  3258 ;;		___ftadd
  3259 ;;		___ftmul
  3260 ;; This function is called by:
  3261 ;;		_exp
  3262 ;;		_log
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           
  3267                           ;psect for function _eval_poly
  3268  0E77                     _eval_poly:	
  3269                           
  3270                           ;incstack = 0
  3271                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3272  0E77  3003               	movlw	3
  3273  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  3274  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  3275  0E7A  00D1               	movwf	??_eval_poly
  3276  0E7B  0851               	movf	??_eval_poly,w
  3277  0E7C  00A0               	movwf	___bmul@multiplicand
  3278  0E7D  084F               	movf	eval_poly@n,w
  3279  0E7E  120A  158A  23AD  120A  158A  	fcall	___bmul
  3280  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  3281  0E84  1303               	bcf	3,6	;RP1=0, select bank0
  3282  0E85  074E               	addwf	eval_poly@d,w
  3283  0E86  0084               	movwf	4
  3284  0E87  120A  158A  2000  120A  158A  	fcall	stringdir
  3285  0E8C  00D2               	movwf	eval_poly@res
  3286  0E8D  120A  158A  2000  120A  158A  	fcall	stringdir
  3287  0E92  00D3               	movwf	eval_poly@res+1
  3288  0E93  120A  158A  2000  120A  158A  	fcall	stringdir
  3289  0E98                     L2:	
  3290  0E98  00D4               	movwf	eval_poly@res+2
  3291  0E99  084F               	movf	eval_poly@n,w
  3292  0E9A  0450               	iorwf	eval_poly@n+1,w
  3293  0E9B  1903               	btfsc	3,2
  3294  0E9C  2EE9               	goto	l2251
  3295  0E9D  3003               	movlw	3
  3296  0E9E  00D1               	movwf	??_eval_poly
  3297  0E9F  0851               	movf	??_eval_poly,w
  3298  0EA0  00A0               	movwf	___bmul@multiplicand
  3299  0EA1  30FF               	movlw	255
  3300  0EA2  07CF               	addwf	eval_poly@n,f
  3301  0EA3  1803               	skipnc
  3302  0EA4  0AD0               	incf	eval_poly@n+1,f
  3303  0EA5  30FF               	movlw	255
  3304  0EA6  07D0               	addwf	eval_poly@n+1,f
  3305  0EA7  084F               	movf	eval_poly@n,w
  3306  0EA8  120A  158A  23AD  120A  158A  	fcall	___bmul
  3307  0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  3308  0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  3309  0EAF  074E               	addwf	eval_poly@d,w
  3310  0EB0  0084               	movwf	4
  3311  0EB1  120A  158A  2000  120A  158A  	fcall	stringdir
  3312  0EB6  00BE               	movwf	___ftadd@f1
  3313  0EB7  120A  158A  2000  120A  158A  	fcall	stringdir
  3314  0EBC  00BF               	movwf	___ftadd@f1+1
  3315  0EBD  120A  158A  2000  120A  158A  	fcall	stringdir
  3316  0EC2  00C0               	movwf	___ftadd@f1+2
  3317  0EC3  0852               	movf	eval_poly@res,w
  3318  0EC4  00AE               	movwf	___ftmul@f1
  3319  0EC5  0853               	movf	eval_poly@res+1,w
  3320  0EC6  00AF               	movwf	___ftmul@f1+1
  3321  0EC7  0854               	movf	eval_poly@res+2,w
  3322  0EC8  00B0               	movwf	___ftmul@f1+2
  3323  0EC9  084B               	movf	eval_poly@x,w
  3324  0ECA  00B1               	movwf	___ftmul@f2
  3325  0ECB  084C               	movf	eval_poly@x+1,w
  3326  0ECC  00B2               	movwf	___ftmul@f2+1
  3327  0ECD  084D               	movf	eval_poly@x+2,w
  3328  0ECE  00B3               	movwf	___ftmul@f2+2
  3329  0ECF  120A  118A  24B3  120A  158A  	fcall	___ftmul
  3330  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  3331  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  3332  0ED6  082E               	movf	?___ftmul,w
  3333  0ED7  00C1               	movwf	___ftadd@f2
  3334  0ED8  082F               	movf	?___ftmul+1,w
  3335  0ED9  00C2               	movwf	___ftadd@f2+1
  3336  0EDA  0830               	movf	?___ftmul+2,w
  3337  0EDB  00C3               	movwf	___ftadd@f2+2
  3338  0EDC  120A  118A  22CE  120A  158A  	fcall	___ftadd
  3339  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3340  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  3341  0EE3  083E               	movf	?___ftadd,w
  3342  0EE4  00D2               	movwf	eval_poly@res
  3343  0EE5  083F               	movf	?___ftadd+1,w
  3344  0EE6  00D3               	movwf	eval_poly@res+1
  3345  0EE7  0840               	movf	?___ftadd+2,w
  3346  0EE8  2E98               	goto	L2
  3347  0EE9                     l2251:	
  3348  0EE9  0852               	movf	eval_poly@res,w
  3349  0EEA  00CB               	movwf	?_eval_poly
  3350  0EEB  0853               	movf	eval_poly@res+1,w
  3351  0EEC  00CC               	movwf	?_eval_poly+1
  3352  0EED  0854               	movf	eval_poly@res+2,w
  3353  0EEE  00CD               	movwf	?_eval_poly+2
  3354  0EEF  0008               	return
  3355  0EF0                     __end_of_eval_poly:	
  3356                           
  3357                           	psect	text14
  3358  04B3                     __ptext14:	
  3359 ;; *************** function ___ftmul *****************
  3360 ;; Defined at:
  3361 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  f1              3   14[BANK0 ] float 
  3364 ;;  f2              3   17[BANK0 ] float 
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  3367 ;;  sign            1   29[BANK0 ] unsigned char 
  3368 ;;  cntr            1   28[BANK0 ] unsigned char 
  3369 ;;  exp             1   24[BANK0 ] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  3   14[BANK0 ] float 
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0, pclath, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3379 ;;      Params:         0       6       0       0       0
  3380 ;;      Locals:         0       6       0       0       0
  3381 ;;      Temps:          0       4       0       0       0
  3382 ;;      Totals:         0      16       0       0       0
  3383 ;;Total ram usage:       16 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    2
  3386 ;; This function calls:
  3387 ;;		___ftpack
  3388 ;; This function is called by:
  3389 ;;		_pow
  3390 ;;		_exp
  3391 ;;		_log
  3392 ;;		_eval_poly
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           
  3397                           ;psect for function ___ftmul
  3398  04B3                     ___ftmul:	
  3399                           
  3400                           ;incstack = 0
  3401                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3402  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  3403  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  3404  04B5  082E               	movf	___ftmul@f1,w
  3405  04B6  00B4               	movwf	??___ftmul
  3406  04B7  082F               	movf	___ftmul@f1+1,w
  3407  04B8  00B5               	movwf	??___ftmul+1
  3408  04B9  0830               	movf	___ftmul@f1+2,w
  3409  04BA  00B6               	movwf	??___ftmul+2
  3410  04BB  1003               	clrc
  3411  04BC  0D35               	rlf	??___ftmul+1,w
  3412  04BD  0D36               	rlf	??___ftmul+2,w
  3413  04BE  00B7               	movwf	??___ftmul+3
  3414  04BF  0837               	movf	??___ftmul+3,w
  3415  04C0  00B8               	movwf	___ftmul@exp
  3416  04C1  0838               	movf	___ftmul@exp,w
  3417  04C2  1D03               	btfss	3,2
  3418  04C3  2CCB               	goto	l2083
  3419  04C4  3000               	movlw	0
  3420  04C5  00AE               	movwf	?___ftmul
  3421  04C6  3000               	movlw	0
  3422  04C7  00AF               	movwf	?___ftmul+1
  3423  04C8  3000               	movlw	0
  3424  04C9  00B0               	movwf	?___ftmul+2
  3425  04CA  0008               	return
  3426  04CB                     l2083:	
  3427  04CB  0831               	movf	___ftmul@f2,w
  3428  04CC  00B4               	movwf	??___ftmul
  3429  04CD  0832               	movf	___ftmul@f2+1,w
  3430  04CE  00B5               	movwf	??___ftmul+1
  3431  04CF  0833               	movf	___ftmul@f2+2,w
  3432  04D0  00B6               	movwf	??___ftmul+2
  3433  04D1  1003               	clrc
  3434  04D2  0D35               	rlf	??___ftmul+1,w
  3435  04D3  0D36               	rlf	??___ftmul+2,w
  3436  04D4  00B7               	movwf	??___ftmul+3
  3437  04D5  0837               	movf	??___ftmul+3,w
  3438  04D6  00BD               	movwf	___ftmul@sign
  3439  04D7  083D               	movf	___ftmul@sign,w
  3440  04D8  1D03               	btfss	3,2
  3441  04D9  2CE1               	goto	l2089
  3442  04DA  3000               	movlw	0
  3443  04DB  00AE               	movwf	?___ftmul
  3444  04DC  3000               	movlw	0
  3445  04DD  00AF               	movwf	?___ftmul+1
  3446  04DE  3000               	movlw	0
  3447  04DF  00B0               	movwf	?___ftmul+2
  3448  04E0  0008               	return
  3449  04E1                     l2089:	
  3450  04E1  083D               	movf	___ftmul@sign,w
  3451  04E2  3E7B               	addlw	123
  3452  04E3  00B4               	movwf	??___ftmul
  3453  04E4  0834               	movf	??___ftmul,w
  3454  04E5  07B8               	addwf	___ftmul@exp,f
  3455  04E6  082E               	movf	___ftmul@f1,w
  3456  04E7  00B4               	movwf	??___ftmul
  3457  04E8  082F               	movf	___ftmul@f1+1,w
  3458  04E9  00B5               	movwf	??___ftmul+1
  3459  04EA  0830               	movf	___ftmul@f1+2,w
  3460  04EB  00B6               	movwf	??___ftmul+2
  3461  04EC  3010               	movlw	16
  3462  04ED                     u3085:	
  3463  04ED  1003               	clrc
  3464  04EE  0CB6               	rrf	??___ftmul+2,f
  3465  04EF  0CB5               	rrf	??___ftmul+1,f
  3466  04F0  0CB4               	rrf	??___ftmul,f
  3467  04F1  3EFF               	addlw	-1
  3468  04F2  1D03               	skipz
  3469  04F3  2CED               	goto	u3085
  3470  04F4  0834               	movf	??___ftmul,w
  3471  04F5  00B7               	movwf	??___ftmul+3
  3472  04F6  0837               	movf	??___ftmul+3,w
  3473  04F7  00BD               	movwf	___ftmul@sign
  3474  04F8  0831               	movf	___ftmul@f2,w
  3475  04F9  00B4               	movwf	??___ftmul
  3476  04FA  0832               	movf	___ftmul@f2+1,w
  3477  04FB  00B5               	movwf	??___ftmul+1
  3478  04FC  0833               	movf	___ftmul@f2+2,w
  3479  04FD  00B6               	movwf	??___ftmul+2
  3480  04FE  3010               	movlw	16
  3481  04FF                     u3095:	
  3482  04FF  1003               	clrc
  3483  0500  0CB6               	rrf	??___ftmul+2,f
  3484  0501  0CB5               	rrf	??___ftmul+1,f
  3485  0502  0CB4               	rrf	??___ftmul,f
  3486  0503  3EFF               	addlw	-1
  3487  0504  1D03               	skipz
  3488  0505  2CFF               	goto	u3095
  3489  0506  0834               	movf	??___ftmul,w
  3490  0507  00B7               	movwf	??___ftmul+3
  3491  0508  0837               	movf	??___ftmul+3,w
  3492  0509  06BD               	xorwf	___ftmul@sign,f
  3493  050A  3080               	movlw	128
  3494  050B  00B4               	movwf	??___ftmul
  3495  050C  0834               	movf	??___ftmul,w
  3496  050D  05BD               	andwf	___ftmul@sign,f
  3497  050E  17AF               	bsf	___ftmul@f1+1,7
  3498  050F  17B2               	bsf	___ftmul@f2+1,7
  3499  0510  30FF               	movlw	255
  3500  0511  05B1               	andwf	___ftmul@f2,f
  3501  0512  30FF               	movlw	255
  3502  0513  05B2               	andwf	___ftmul@f2+1,f
  3503  0514  3000               	movlw	0
  3504  0515  05B3               	andwf	___ftmul@f2+2,f
  3505  0516  3000               	movlw	0
  3506  0517  00B9               	movwf	___ftmul@f3_as_product
  3507  0518  3000               	movlw	0
  3508  0519  00BA               	movwf	___ftmul@f3_as_product+1
  3509  051A  3000               	movlw	0
  3510  051B  00BB               	movwf	___ftmul@f3_as_product+2
  3511  051C  3007               	movlw	7
  3512  051D  00B4               	movwf	??___ftmul
  3513  051E  0834               	movf	??___ftmul,w
  3514  051F  00BC               	movwf	___ftmul@cntr
  3515  0520                     l2101:	
  3516  0520  1C2E               	btfss	___ftmul@f1,0
  3517  0521  2D30               	goto	l2105
  3518  0522  0831               	movf	___ftmul@f2,w
  3519  0523  07B9               	addwf	___ftmul@f3_as_product,f
  3520  0524  0832               	movf	___ftmul@f2+1,w
  3521  0525  1103               	clrz
  3522  0526  1803               	skipnc
  3523  0527  0A32               	incf	___ftmul@f2+1,w
  3524  0528  1D03               	btfss	3,2
  3525  0529  07BA               	addwf	___ftmul@f3_as_product+1,f
  3526  052A  0833               	movf	___ftmul@f2+2,w
  3527  052B  1103               	clrz
  3528  052C  1803               	skipnc
  3529  052D  0A33               	incf	___ftmul@f2+2,w
  3530  052E  1D03               	btfss	3,2
  3531  052F  07BB               	addwf	___ftmul@f3_as_product+2,f
  3532  0530                     l2105:	
  3533  0530  3001               	movlw	1
  3534  0531                     u3125:	
  3535  0531  1003               	clrc
  3536  0532  0CB0               	rrf	___ftmul@f1+2,f
  3537  0533  0CAF               	rrf	___ftmul@f1+1,f
  3538  0534  0CAE               	rrf	___ftmul@f1,f
  3539  0535  3EFF               	addlw	-1
  3540  0536  1D03               	skipz
  3541  0537  2D31               	goto	u3125
  3542  0538  3001               	movlw	1
  3543  0539                     u3135:	
  3544  0539  1003               	clrc
  3545  053A  0DB1               	rlf	___ftmul@f2,f
  3546  053B  0DB2               	rlf	___ftmul@f2+1,f
  3547  053C  0DB3               	rlf	___ftmul@f2+2,f
  3548  053D  3EFF               	addlw	-1
  3549  053E  1D03               	skipz
  3550  053F  2D39               	goto	u3135
  3551  0540  3001               	movlw	1
  3552  0541  02BC               	subwf	___ftmul@cntr,f
  3553  0542  1D03               	btfss	3,2
  3554  0543  2D20               	goto	l2101
  3555  0544  3009               	movlw	9
  3556  0545  00B4               	movwf	??___ftmul
  3557  0546  0834               	movf	??___ftmul,w
  3558  0547  00BC               	movwf	___ftmul@cntr
  3559  0548                     l2113:	
  3560  0548  1C2E               	btfss	___ftmul@f1,0
  3561  0549  2D58               	goto	l2117
  3562  054A  0831               	movf	___ftmul@f2,w
  3563  054B  07B9               	addwf	___ftmul@f3_as_product,f
  3564  054C  0832               	movf	___ftmul@f2+1,w
  3565  054D  1103               	clrz
  3566  054E  1803               	skipnc
  3567  054F  0A32               	incf	___ftmul@f2+1,w
  3568  0550  1D03               	btfss	3,2
  3569  0551  07BA               	addwf	___ftmul@f3_as_product+1,f
  3570  0552  0833               	movf	___ftmul@f2+2,w
  3571  0553  1103               	clrz
  3572  0554  1803               	skipnc
  3573  0555  0A33               	incf	___ftmul@f2+2,w
  3574  0556  1D03               	btfss	3,2
  3575  0557  07BB               	addwf	___ftmul@f3_as_product+2,f
  3576  0558                     l2117:	
  3577  0558  3001               	movlw	1
  3578  0559                     u3175:	
  3579  0559  1003               	clrc
  3580  055A  0CB0               	rrf	___ftmul@f1+2,f
  3581  055B  0CAF               	rrf	___ftmul@f1+1,f
  3582  055C  0CAE               	rrf	___ftmul@f1,f
  3583  055D  3EFF               	addlw	-1
  3584  055E  1D03               	skipz
  3585  055F  2D59               	goto	u3175
  3586  0560  3001               	movlw	1
  3587  0561                     u3185:	
  3588  0561  1003               	clrc
  3589  0562  0CBB               	rrf	___ftmul@f3_as_product+2,f
  3590  0563  0CBA               	rrf	___ftmul@f3_as_product+1,f
  3591  0564  0CB9               	rrf	___ftmul@f3_as_product,f
  3592  0565  3EFF               	addlw	-1
  3593  0566  1D03               	skipz
  3594  0567  2D61               	goto	u3185
  3595  0568  3001               	movlw	1
  3596  0569  02BC               	subwf	___ftmul@cntr,f
  3597  056A  1D03               	btfss	3,2
  3598  056B  2D48               	goto	l2113
  3599  056C  0839               	movf	___ftmul@f3_as_product,w
  3600  056D  00A0               	movwf	___ftpack@arg
  3601  056E  083A               	movf	___ftmul@f3_as_product+1,w
  3602  056F  00A1               	movwf	___ftpack@arg+1
  3603  0570  083B               	movf	___ftmul@f3_as_product+2,w
  3604  0571  00A2               	movwf	___ftpack@arg+2
  3605  0572  0838               	movf	___ftmul@exp,w
  3606  0573  00B4               	movwf	??___ftmul
  3607  0574  0834               	movf	??___ftmul,w
  3608  0575  00A3               	movwf	___ftpack@exp
  3609  0576  083D               	movf	___ftmul@sign,w
  3610  0577  00B5               	movwf	??___ftmul+1
  3611  0578  0835               	movf	??___ftmul+1,w
  3612  0579  00A4               	movwf	___ftpack@sign
  3613  057A  120A  158A  2609   	fcall	___ftpack
  3614  057D  1283               	bcf	3,5	;RP0=0, select bank0
  3615  057E  1303               	bcf	3,6	;RP1=0, select bank0
  3616  057F  0820               	movf	?___ftpack,w
  3617  0580  00AE               	movwf	?___ftmul
  3618  0581  0821               	movf	?___ftpack+1,w
  3619  0582  00AF               	movwf	?___ftmul+1
  3620  0583  0822               	movf	?___ftpack+2,w
  3621  0584  00B0               	movwf	?___ftmul+2
  3622  0585  0008               	return
  3623  0586                     __end_of___ftmul:	
  3624                           
  3625                           	psect	text15
  3626  0BAD                     __ptext15:	
  3627 ;; *************** function ___bmul *****************
  3628 ;; Defined at:
  3629 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul8.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  multiplier      1    wreg     unsigned char 
  3632 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3635 ;;  product         1    2[BANK0 ] unsigned char 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      unsigned char 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3645 ;;      Params:         0       1       0       0       0
  3646 ;;      Locals:         0       2       0       0       0
  3647 ;;      Temps:          0       1       0       0       0
  3648 ;;      Totals:         0       4       0       0       0
  3649 ;;Total ram usage:        4 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:    1
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_eval_poly
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           
  3660                           ;psect for function ___bmul
  3661  0BAD                     ___bmul:	
  3662                           
  3663                           ;incstack = 0
  3664                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3665                           ;___bmul@multiplier stored from wreg
  3666  0BAD  1283               	bcf	3,5	;RP0=0, select bank0
  3667  0BAE  1303               	bcf	3,6	;RP1=0, select bank0
  3668  0BAF  00A3               	movwf	___bmul@multiplier
  3669  0BB0  01A2               	clrf	___bmul@product
  3670  0BB1                     l1979:	
  3671  0BB1  1C23               	btfss	___bmul@multiplier,0
  3672  0BB2  2BB7               	goto	l1983
  3673  0BB3  0820               	movf	___bmul@multiplicand,w
  3674  0BB4  00A1               	movwf	??___bmul
  3675  0BB5  0821               	movf	??___bmul,w
  3676  0BB6  07A2               	addwf	___bmul@product,f
  3677  0BB7                     l1983:	
  3678  0BB7  1003               	clrc
  3679  0BB8  0DA0               	rlf	___bmul@multiplicand,f
  3680  0BB9  1003               	clrc
  3681  0BBA  0CA3               	rrf	___bmul@multiplier,f
  3682  0BBB  0823               	movf	___bmul@multiplier,w
  3683  0BBC  1D03               	btfss	3,2
  3684  0BBD  2BB1               	goto	l1979
  3685  0BBE  0822               	movf	___bmul@product,w
  3686  0BBF  0008               	return
  3687  0BC0                     __end_of___bmul:	
  3688                           
  3689                           	psect	text16
  3690  0BF8                     __ptext16:	
  3691 ;; *************** function ___ftsub *****************
  3692 ;; Defined at:
  3693 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftsub.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;  f2              3   43[BANK0 ] float 
  3696 ;;  f1              3   46[BANK0 ] float 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;		None
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  3   43[BANK0 ] float 
  3701 ;; Registers used:
  3702 ;;		wreg, status,2, status,0, pclath, cstack
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3708 ;;      Params:         0       6       0       0       0
  3709 ;;      Locals:         0       0       0       0       0
  3710 ;;      Temps:          0       0       0       0       0
  3711 ;;      Totals:         0       6       0       0       0
  3712 ;;Total ram usage:        6 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; Hardware stack levels required when called:    3
  3715 ;; This function calls:
  3716 ;;		___ftadd
  3717 ;; This function is called by:
  3718 ;;		_exp
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           
  3723                           ;psect for function ___ftsub
  3724  0BF8                     ___ftsub:	
  3725                           
  3726                           ;incstack = 0
  3727                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3728  0BF8  1283               	bcf	3,5	;RP0=0, select bank0
  3729  0BF9  1303               	bcf	3,6	;RP1=0, select bank0
  3730  0BFA  084D               	movf	___ftsub@f2+2,w
  3731  0BFB  044C               	iorwf	___ftsub@f2+1,w
  3732  0BFC  044B               	iorwf	___ftsub@f2,w
  3733  0BFD  1903               	skipnz
  3734  0BFE  2C01               	goto	l2213
  3735  0BFF  3080               	movlw	128
  3736  0C00  06CD               	xorwf	___ftsub@f2+2,f
  3737  0C01                     l2213:	
  3738  0C01  084E               	movf	___ftsub@f1,w
  3739  0C02  00BE               	movwf	___ftadd@f1
  3740  0C03  084F               	movf	___ftsub@f1+1,w
  3741  0C04  00BF               	movwf	___ftadd@f1+1
  3742  0C05  0850               	movf	___ftsub@f1+2,w
  3743  0C06  00C0               	movwf	___ftadd@f1+2
  3744  0C07  084B               	movf	___ftsub@f2,w
  3745  0C08  00C1               	movwf	___ftadd@f2
  3746  0C09  084C               	movf	___ftsub@f2+1,w
  3747  0C0A  00C2               	movwf	___ftadd@f2+1
  3748  0C0B  084D               	movf	___ftsub@f2+2,w
  3749  0C0C  00C3               	movwf	___ftadd@f2+2
  3750  0C0D  120A  118A  22CE   	fcall	___ftadd
  3751  0C10  1283               	bcf	3,5	;RP0=0, select bank0
  3752  0C11  1303               	bcf	3,6	;RP1=0, select bank0
  3753  0C12  083E               	movf	?___ftadd,w
  3754  0C13  00CB               	movwf	?___ftsub
  3755  0C14  083F               	movf	?___ftadd+1,w
  3756  0C15  00CC               	movwf	?___ftsub+1
  3757  0C16  0840               	movf	?___ftadd+2,w
  3758  0C17  00CD               	movwf	?___ftsub+2
  3759  0C18  0008               	return
  3760  0C19                     __end_of___ftsub:	
  3761                           
  3762                           	psect	text17
  3763  02CE                     __ptext17:	
  3764 ;; *************** function ___ftadd *****************
  3765 ;; Defined at:
  3766 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  f1              3   30[BANK0 ] float 
  3769 ;;  f2              3   33[BANK0 ] float 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  exp1            1   42[BANK0 ] unsigned char 
  3772 ;;  exp2            1   41[BANK0 ] unsigned char 
  3773 ;;  sign            1   40[BANK0 ] unsigned char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  3   30[BANK0 ] float 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0, pclath, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3783 ;;      Params:         0       6       0       0       0
  3784 ;;      Locals:         0       3       0       0       0
  3785 ;;      Temps:          0       4       0       0       0
  3786 ;;      Totals:         0      13       0       0       0
  3787 ;;Total ram usage:       13 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    2
  3790 ;; This function calls:
  3791 ;;		___ftpack
  3792 ;; This function is called by:
  3793 ;;		___ftsub
  3794 ;;		_floor
  3795 ;;		_log
  3796 ;;		_eval_poly
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           
  3801                           ;psect for function ___ftadd
  3802  02CE                     ___ftadd:	
  3803                           
  3804                           ;incstack = 0
  3805                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3806  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  3807  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  3808  02D0  083E               	movf	___ftadd@f1,w
  3809  02D1  00C4               	movwf	??___ftadd
  3810  02D2  083F               	movf	___ftadd@f1+1,w
  3811  02D3  00C5               	movwf	??___ftadd+1
  3812  02D4  0840               	movf	___ftadd@f1+2,w
  3813  02D5  00C6               	movwf	??___ftadd+2
  3814  02D6  1003               	clrc
  3815  02D7  0D45               	rlf	??___ftadd+1,w
  3816  02D8  0D46               	rlf	??___ftadd+2,w
  3817  02D9  00C7               	movwf	??___ftadd+3
  3818  02DA  0847               	movf	??___ftadd+3,w
  3819  02DB  00CA               	movwf	___ftadd@exp1
  3820  02DC  0841               	movf	___ftadd@f2,w
  3821  02DD  00C4               	movwf	??___ftadd
  3822  02DE  0842               	movf	___ftadd@f2+1,w
  3823  02DF  00C5               	movwf	??___ftadd+1
  3824  02E0  0843               	movf	___ftadd@f2+2,w
  3825  02E1  00C6               	movwf	??___ftadd+2
  3826  02E2  1003               	clrc
  3827  02E3  0D45               	rlf	??___ftadd+1,w
  3828  02E4  0D46               	rlf	??___ftadd+2,w
  3829  02E5  00C7               	movwf	??___ftadd+3
  3830  02E6  0847               	movf	??___ftadd+3,w
  3831  02E7  00C9               	movwf	___ftadd@exp2
  3832  02E8  084A               	movf	___ftadd@exp1,w
  3833  02E9  1903               	btfsc	3,2
  3834  02EA  2AF7               	goto	l2013
  3835  02EB  0849               	movf	___ftadd@exp2,w
  3836  02EC  024A               	subwf	___ftadd@exp1,w
  3837  02ED  1803               	skipnc
  3838  02EE  2AFE               	goto	l2017
  3839  02EF  034A               	decf	___ftadd@exp1,w
  3840  02F0  3AFF               	xorlw	255
  3841  02F1  0749               	addwf	___ftadd@exp2,w
  3842  02F2  00C4               	movwf	??___ftadd
  3843  02F3  3019               	movlw	25
  3844  02F4  0244               	subwf	??___ftadd,w
  3845  02F5  1C03               	skipc
  3846  02F6  2AFE               	goto	l2017
  3847  02F7                     l2013:	
  3848  02F7  0841               	movf	___ftadd@f2,w
  3849  02F8  00BE               	movwf	?___ftadd
  3850  02F9  0842               	movf	___ftadd@f2+1,w
  3851  02FA  00BF               	movwf	?___ftadd+1
  3852  02FB  0843               	movf	___ftadd@f2+2,w
  3853  02FC  00C0               	movwf	?___ftadd+2
  3854  02FD  0008               	return
  3855  02FE                     l2017:	
  3856  02FE  0849               	movf	___ftadd@exp2,w
  3857  02FF  1903               	btfsc	3,2
  3858  0300  0008               	return
  3859  0301  084A               	movf	___ftadd@exp1,w
  3860  0302  0249               	subwf	___ftadd@exp2,w
  3861  0303  1803               	skipnc
  3862  0304  2B0D               	goto	l2023
  3863  0305  0349               	decf	___ftadd@exp2,w
  3864  0306  3AFF               	xorlw	255
  3865  0307  074A               	addwf	___ftadd@exp1,w
  3866  0308  00C4               	movwf	??___ftadd
  3867  0309  3019               	movlw	25
  3868  030A  0244               	subwf	??___ftadd,w
  3869  030B  1803               	btfsc	3,0
  3870  030C  0008               	return
  3871  030D                     l2023:	
  3872  030D  3006               	movlw	6
  3873  030E  00C4               	movwf	??___ftadd
  3874  030F  0844               	movf	??___ftadd,w
  3875  0310  00C8               	movwf	___ftadd@sign
  3876  0311  1BC0               	btfsc	___ftadd@f1+2,7
  3877  0312  17C8               	bsf	___ftadd@sign,7
  3878  0313  1BC3               	btfsc	___ftadd@f2+2,7
  3879  0314  1748               	bsf	___ftadd@sign,6
  3880  0315  17BF               	bsf	___ftadd@f1+1,7
  3881  0316  30FF               	movlw	255
  3882  0317  05BE               	andwf	___ftadd@f1,f
  3883  0318  30FF               	movlw	255
  3884  0319  05BF               	andwf	___ftadd@f1+1,f
  3885  031A  3000               	movlw	0
  3886  031B  05C0               	andwf	___ftadd@f1+2,f
  3887  031C  17C2               	bsf	___ftadd@f2+1,7
  3888  031D  30FF               	movlw	255
  3889  031E  05C1               	andwf	___ftadd@f2,f
  3890  031F  30FF               	movlw	255
  3891  0320  05C2               	andwf	___ftadd@f2+1,f
  3892  0321  3000               	movlw	0
  3893  0322  05C3               	andwf	___ftadd@f2+2,f
  3894  0323  0849               	movf	___ftadd@exp2,w
  3895  0324  024A               	subwf	___ftadd@exp1,w
  3896  0325  1803               	skipnc
  3897  0326  2B4D               	goto	l2045
  3898  0327                     l2035:	
  3899  0327  3001               	movlw	1
  3900  0328                     u2915:	
  3901  0328  1003               	clrc
  3902  0329  0DC1               	rlf	___ftadd@f2,f
  3903  032A  0DC2               	rlf	___ftadd@f2+1,f
  3904  032B  0DC3               	rlf	___ftadd@f2+2,f
  3905  032C  3EFF               	addlw	-1
  3906  032D  1D03               	skipz
  3907  032E  2B28               	goto	u2915
  3908  032F  3001               	movlw	1
  3909  0330  02C9               	subwf	___ftadd@exp2,f
  3910  0331  0849               	movf	___ftadd@exp2,w
  3911  0332  064A               	xorwf	___ftadd@exp1,w
  3912  0333  1903               	skipnz
  3913  0334  2B48               	goto	l2043
  3914  0335  3001               	movlw	1
  3915  0336  02C8               	subwf	___ftadd@sign,f
  3916  0337  0848               	movf	___ftadd@sign,w
  3917  0338  3907               	andlw	7
  3918  0339  1903               	btfsc	3,2
  3919  033A  2B48               	goto	l2043
  3920  033B  2B27               	goto	l2035
  3921  033C                     l2041:	
  3922  033C  3001               	movlw	1
  3923  033D                     u2945:	
  3924  033D  1003               	clrc
  3925  033E  0CC0               	rrf	___ftadd@f1+2,f
  3926  033F  0CBF               	rrf	___ftadd@f1+1,f
  3927  0340  0CBE               	rrf	___ftadd@f1,f
  3928  0341  3EFF               	addlw	-1
  3929  0342  1D03               	skipz
  3930  0343  2B3D               	goto	u2945
  3931  0344  3001               	movlw	1
  3932  0345  00C4               	movwf	??___ftadd
  3933  0346  0844               	movf	??___ftadd,w
  3934  0347  07CA               	addwf	___ftadd@exp1,f
  3935  0348                     l2043:	
  3936  0348  084A               	movf	___ftadd@exp1,w
  3937  0349  0649               	xorwf	___ftadd@exp2,w
  3938  034A  1903               	btfsc	3,2
  3939  034B  2B76               	goto	l336
  3940  034C  2B3C               	goto	l2041
  3941  034D                     l2045:	
  3942  034D  084A               	movf	___ftadd@exp1,w
  3943  034E  0249               	subwf	___ftadd@exp2,w
  3944  034F  1803               	skipnc
  3945  0350  2B76               	goto	l336
  3946  0351                     l2047:	
  3947  0351  3001               	movlw	1
  3948  0352                     u2975:	
  3949  0352  1003               	clrc
  3950  0353  0DBE               	rlf	___ftadd@f1,f
  3951  0354  0DBF               	rlf	___ftadd@f1+1,f
  3952  0355  0DC0               	rlf	___ftadd@f1+2,f
  3953  0356  3EFF               	addlw	-1
  3954  0357  1D03               	skipz
  3955  0358  2B52               	goto	u2975
  3956  0359  3001               	movlw	1
  3957  035A  02CA               	subwf	___ftadd@exp1,f
  3958  035B  0849               	movf	___ftadd@exp2,w
  3959  035C  064A               	xorwf	___ftadd@exp1,w
  3960  035D  1903               	skipnz
  3961  035E  2B72               	goto	l2055
  3962  035F  3001               	movlw	1
  3963  0360  02C8               	subwf	___ftadd@sign,f
  3964  0361  0848               	movf	___ftadd@sign,w
  3965  0362  3907               	andlw	7
  3966  0363  1903               	btfsc	3,2
  3967  0364  2B72               	goto	l2055
  3968  0365  2B51               	goto	l2047
  3969  0366                     l2053:	
  3970  0366  3001               	movlw	1
  3971  0367                     u3005:	
  3972  0367  1003               	clrc
  3973  0368  0CC3               	rrf	___ftadd@f2+2,f
  3974  0369  0CC2               	rrf	___ftadd@f2+1,f
  3975  036A  0CC1               	rrf	___ftadd@f2,f
  3976  036B  3EFF               	addlw	-1
  3977  036C  1D03               	skipz
  3978  036D  2B67               	goto	u3005
  3979  036E  3001               	movlw	1
  3980  036F  00C4               	movwf	??___ftadd
  3981  0370  0844               	movf	??___ftadd,w
  3982  0371  07C9               	addwf	___ftadd@exp2,f
  3983  0372                     l2055:	
  3984  0372  084A               	movf	___ftadd@exp1,w
  3985  0373  0649               	xorwf	___ftadd@exp2,w
  3986  0374  1D03               	skipz
  3987  0375  2B66               	goto	l2053
  3988  0376                     l336:	
  3989  0376  1FC8               	btfss	___ftadd@sign,7
  3990  0377  2B88               	goto	l2059
  3991  0378  30FF               	movlw	255
  3992  0379  06BE               	xorwf	___ftadd@f1,f
  3993  037A  30FF               	movlw	255
  3994  037B  06BF               	xorwf	___ftadd@f1+1,f
  3995  037C  30FF               	movlw	255
  3996  037D  06C0               	xorwf	___ftadd@f1+2,f
  3997  037E  3001               	movlw	1
  3998  037F  07BE               	addwf	___ftadd@f1,f
  3999  0380  3000               	movlw	0
  4000  0381  1803               	skipnc
  4001  0382  3001               	movlw	1
  4002  0383  07BF               	addwf	___ftadd@f1+1,f
  4003  0384  3000               	movlw	0
  4004  0385  1803               	skipnc
  4005  0386  3001               	movlw	1
  4006  0387  07C0               	addwf	___ftadd@f1+2,f
  4007  0388                     l2059:	
  4008  0388  1F48               	btfss	___ftadd@sign,6
  4009  0389  2B9A               	goto	l2063
  4010  038A  30FF               	movlw	255
  4011  038B  06C1               	xorwf	___ftadd@f2,f
  4012  038C  30FF               	movlw	255
  4013  038D  06C2               	xorwf	___ftadd@f2+1,f
  4014  038E  30FF               	movlw	255
  4015  038F  06C3               	xorwf	___ftadd@f2+2,f
  4016  0390  3001               	movlw	1
  4017  0391  07C1               	addwf	___ftadd@f2,f
  4018  0392  3000               	movlw	0
  4019  0393  1803               	skipnc
  4020  0394  3001               	movlw	1
  4021  0395  07C2               	addwf	___ftadd@f2+1,f
  4022  0396  3000               	movlw	0
  4023  0397  1803               	skipnc
  4024  0398  3001               	movlw	1
  4025  0399  07C3               	addwf	___ftadd@f2+2,f
  4026  039A                     l2063:	
  4027  039A  01C8               	clrf	___ftadd@sign
  4028  039B  083E               	movf	___ftadd@f1,w
  4029  039C  07C1               	addwf	___ftadd@f2,f
  4030  039D  083F               	movf	___ftadd@f1+1,w
  4031  039E  1103               	clrz
  4032  039F  1803               	skipnc
  4033  03A0  0A3F               	incf	___ftadd@f1+1,w
  4034  03A1  1D03               	btfss	3,2
  4035  03A2  07C2               	addwf	___ftadd@f2+1,f
  4036  03A3  0840               	movf	___ftadd@f1+2,w
  4037  03A4  1103               	clrz
  4038  03A5  1803               	skipnc
  4039  03A6  0A40               	incf	___ftadd@f1+2,w
  4040  03A7  1D03               	btfss	3,2
  4041  03A8  07C3               	addwf	___ftadd@f2+2,f
  4042  03A9  1FC3               	btfss	___ftadd@f2+2,7
  4043  03AA  2BBD               	goto	l2073
  4044  03AB  30FF               	movlw	255
  4045  03AC  06C1               	xorwf	___ftadd@f2,f
  4046  03AD  30FF               	movlw	255
  4047  03AE  06C2               	xorwf	___ftadd@f2+1,f
  4048  03AF  30FF               	movlw	255
  4049  03B0  06C3               	xorwf	___ftadd@f2+2,f
  4050  03B1  3001               	movlw	1
  4051  03B2  07C1               	addwf	___ftadd@f2,f
  4052  03B3  3000               	movlw	0
  4053  03B4  1803               	skipnc
  4054  03B5  3001               	movlw	1
  4055  03B6  07C2               	addwf	___ftadd@f2+1,f
  4056  03B7  3000               	movlw	0
  4057  03B8  1803               	skipnc
  4058  03B9  3001               	movlw	1
  4059  03BA  07C3               	addwf	___ftadd@f2+2,f
  4060  03BB  01C8               	clrf	___ftadd@sign
  4061  03BC  0AC8               	incf	___ftadd@sign,f
  4062  03BD                     l2073:	
  4063  03BD  0841               	movf	___ftadd@f2,w
  4064  03BE  00A0               	movwf	___ftpack@arg
  4065  03BF  0842               	movf	___ftadd@f2+1,w
  4066  03C0  00A1               	movwf	___ftpack@arg+1
  4067  03C1  0843               	movf	___ftadd@f2+2,w
  4068  03C2  00A2               	movwf	___ftpack@arg+2
  4069  03C3  084A               	movf	___ftadd@exp1,w
  4070  03C4  00C4               	movwf	??___ftadd
  4071  03C5  0844               	movf	??___ftadd,w
  4072  03C6  00A3               	movwf	___ftpack@exp
  4073  03C7  0848               	movf	___ftadd@sign,w
  4074  03C8  00C5               	movwf	??___ftadd+1
  4075  03C9  0845               	movf	??___ftadd+1,w
  4076  03CA  00A4               	movwf	___ftpack@sign
  4077  03CB  120A  158A  2609   	fcall	___ftpack
  4078  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  4079  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  4080  03D0  0820               	movf	?___ftpack,w
  4081  03D1  00BE               	movwf	?___ftadd
  4082  03D2  0821               	movf	?___ftpack+1,w
  4083  03D3  00BF               	movwf	?___ftadd+1
  4084  03D4  0822               	movf	?___ftpack+2,w
  4085  03D5  00C0               	movwf	?___ftadd+2
  4086  03D6  0008               	return
  4087  03D7                     __end_of___ftadd:	
  4088                           
  4089                           	psect	text18
  4090  0BA3                     __ptext18:	
  4091 ;; *************** function ___ftneg *****************
  4092 ;; Defined at:
  4093 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftneg.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  f1              3    0[BANK0 ] float 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;		None
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  3    0[BANK0 ] float 
  4100 ;; Registers used:
  4101 ;;		wreg
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4107 ;;      Params:         0       3       0       0       0
  4108 ;;      Locals:         0       0       0       0       0
  4109 ;;      Temps:          0       0       0       0       0
  4110 ;;      Totals:         0       3       0       0       0
  4111 ;;Total ram usage:        3 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:    1
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_pow
  4118 ;;		_exp
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           
  4123                           ;psect for function ___ftneg
  4124  0BA3                     ___ftneg:	
  4125                           
  4126                           ;incstack = 0
  4127                           ; Regs used in ___ftneg: [wreg]
  4128  0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  4129  0BA4  1303               	bcf	3,6	;RP1=0, select bank0
  4130  0BA5  0822               	movf	___ftneg@f1+2,w
  4131  0BA6  0421               	iorwf	___ftneg@f1+1,w
  4132  0BA7  0420               	iorwf	___ftneg@f1,w
  4133  0BA8  1903               	skipnz
  4134  0BA9  0008               	return
  4135  0BAA  3080               	movlw	128
  4136  0BAB  06A2               	xorwf	___ftneg@f1+2,f
  4137  0BAC  0008               	return
  4138  0BAD                     __end_of___ftneg:	
  4139                           
  4140                           	psect	text19
  4141  064E                     __ptext19:	
  4142 ;; *************** function ___ftdiv *****************
  4143 ;; Defined at:
  4144 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  f2              3    8[BANK0 ] float 
  4147 ;;  f1              3   11[BANK0 ] float 
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;  f3              3   19[BANK0 ] float 
  4150 ;;  sign            1   23[BANK0 ] unsigned char 
  4151 ;;  exp             1   22[BANK0 ] unsigned char 
  4152 ;;  cntr            1   18[BANK0 ] unsigned char 
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  3    8[BANK0 ] float 
  4155 ;; Registers used:
  4156 ;;		wreg, status,2, status,0, pclath, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4162 ;;      Params:         0       6       0       0       0
  4163 ;;      Locals:         0       6       0       0       0
  4164 ;;      Temps:          0       4       0       0       0
  4165 ;;      Totals:         0      16       0       0       0
  4166 ;;Total ram usage:       16 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:    2
  4169 ;; This function calls:
  4170 ;;		___ftpack
  4171 ;; This function is called by:
  4172 ;;		_exp
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           
  4177                           ;psect for function ___ftdiv
  4178  064E                     ___ftdiv:	
  4179                           
  4180                           ;incstack = 0
  4181                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4182  064E  1283               	bcf	3,5	;RP0=0, select bank0
  4183  064F  1303               	bcf	3,6	;RP1=0, select bank0
  4184  0650  082B               	movf	___ftdiv@f1,w
  4185  0651  00AE               	movwf	??___ftdiv
  4186  0652  082C               	movf	___ftdiv@f1+1,w
  4187  0653  00AF               	movwf	??___ftdiv+1
  4188  0654  082D               	movf	___ftdiv@f1+2,w
  4189  0655  00B0               	movwf	??___ftdiv+2
  4190  0656  1003               	clrc
  4191  0657  0D2F               	rlf	??___ftdiv+1,w
  4192  0658  0D30               	rlf	??___ftdiv+2,w
  4193  0659  00B1               	movwf	??___ftdiv+3
  4194  065A  0831               	movf	??___ftdiv+3,w
  4195  065B  00B6               	movwf	___ftdiv@exp
  4196  065C  0836               	movf	___ftdiv@exp,w
  4197  065D  1D03               	btfss	3,2
  4198  065E  2E66               	goto	l2165
  4199  065F  3000               	movlw	0
  4200  0660  00A8               	movwf	?___ftdiv
  4201  0661  3000               	movlw	0
  4202  0662  00A9               	movwf	?___ftdiv+1
  4203  0663  3000               	movlw	0
  4204  0664  00AA               	movwf	?___ftdiv+2
  4205  0665  0008               	return
  4206  0666                     l2165:	
  4207  0666  0828               	movf	___ftdiv@f2,w
  4208  0667  00AE               	movwf	??___ftdiv
  4209  0668  0829               	movf	___ftdiv@f2+1,w
  4210  0669  00AF               	movwf	??___ftdiv+1
  4211  066A  082A               	movf	___ftdiv@f2+2,w
  4212  066B  00B0               	movwf	??___ftdiv+2
  4213  066C  1003               	clrc
  4214  066D  0D2F               	rlf	??___ftdiv+1,w
  4215  066E  0D30               	rlf	??___ftdiv+2,w
  4216  066F  00B1               	movwf	??___ftdiv+3
  4217  0670  0831               	movf	??___ftdiv+3,w
  4218  0671  00B7               	movwf	___ftdiv@sign
  4219  0672  0837               	movf	___ftdiv@sign,w
  4220  0673  1D03               	btfss	3,2
  4221  0674  2E7C               	goto	l2171
  4222  0675  3000               	movlw	0
  4223  0676  00A8               	movwf	?___ftdiv
  4224  0677  3000               	movlw	0
  4225  0678  00A9               	movwf	?___ftdiv+1
  4226  0679  3000               	movlw	0
  4227  067A  00AA               	movwf	?___ftdiv+2
  4228  067B  0008               	return
  4229  067C                     l2171:	
  4230  067C  3000               	movlw	0
  4231  067D  00B3               	movwf	___ftdiv@f3
  4232  067E  3000               	movlw	0
  4233  067F  00B4               	movwf	___ftdiv@f3+1
  4234  0680  3000               	movlw	0
  4235  0681  00B5               	movwf	___ftdiv@f3+2
  4236  0682  3089               	movlw	137
  4237  0683  0737               	addwf	___ftdiv@sign,w
  4238  0684  00AE               	movwf	??___ftdiv
  4239  0685  082E               	movf	??___ftdiv,w
  4240  0686  02B6               	subwf	___ftdiv@exp,f
  4241  0687  082B               	movf	___ftdiv@f1,w
  4242  0688  00AE               	movwf	??___ftdiv
  4243  0689  082C               	movf	___ftdiv@f1+1,w
  4244  068A  00AF               	movwf	??___ftdiv+1
  4245  068B  082D               	movf	___ftdiv@f1+2,w
  4246  068C  00B0               	movwf	??___ftdiv+2
  4247  068D  3010               	movlw	16
  4248  068E                     u3245:	
  4249  068E  1003               	clrc
  4250  068F  0CB0               	rrf	??___ftdiv+2,f
  4251  0690  0CAF               	rrf	??___ftdiv+1,f
  4252  0691  0CAE               	rrf	??___ftdiv,f
  4253  0692  3EFF               	addlw	-1
  4254  0693  1D03               	skipz
  4255  0694  2E8E               	goto	u3245
  4256  0695  082E               	movf	??___ftdiv,w
  4257  0696  00B1               	movwf	??___ftdiv+3
  4258  0697  0831               	movf	??___ftdiv+3,w
  4259  0698  00B7               	movwf	___ftdiv@sign
  4260  0699  0828               	movf	___ftdiv@f2,w
  4261  069A  00AE               	movwf	??___ftdiv
  4262  069B  0829               	movf	___ftdiv@f2+1,w
  4263  069C  00AF               	movwf	??___ftdiv+1
  4264  069D  082A               	movf	___ftdiv@f2+2,w
  4265  069E  00B0               	movwf	??___ftdiv+2
  4266  069F  3010               	movlw	16
  4267  06A0                     u3255:	
  4268  06A0  1003               	clrc
  4269  06A1  0CB0               	rrf	??___ftdiv+2,f
  4270  06A2  0CAF               	rrf	??___ftdiv+1,f
  4271  06A3  0CAE               	rrf	??___ftdiv,f
  4272  06A4  3EFF               	addlw	-1
  4273  06A5  1D03               	skipz
  4274  06A6  2EA0               	goto	u3255
  4275  06A7  082E               	movf	??___ftdiv,w
  4276  06A8  00B1               	movwf	??___ftdiv+3
  4277  06A9  0831               	movf	??___ftdiv+3,w
  4278  06AA  06B7               	xorwf	___ftdiv@sign,f
  4279  06AB  3080               	movlw	128
  4280  06AC  00AE               	movwf	??___ftdiv
  4281  06AD  082E               	movf	??___ftdiv,w
  4282  06AE  05B7               	andwf	___ftdiv@sign,f
  4283  06AF  17AC               	bsf	___ftdiv@f1+1,7
  4284  06B0  30FF               	movlw	255
  4285  06B1  05AB               	andwf	___ftdiv@f1,f
  4286  06B2  30FF               	movlw	255
  4287  06B3  05AC               	andwf	___ftdiv@f1+1,f
  4288  06B4  3000               	movlw	0
  4289  06B5  05AD               	andwf	___ftdiv@f1+2,f
  4290  06B6  17A9               	bsf	___ftdiv@f2+1,7
  4291  06B7  30FF               	movlw	255
  4292  06B8  05A8               	andwf	___ftdiv@f2,f
  4293  06B9  30FF               	movlw	255
  4294  06BA  05A9               	andwf	___ftdiv@f2+1,f
  4295  06BB  3000               	movlw	0
  4296  06BC  05AA               	andwf	___ftdiv@f2+2,f
  4297  06BD  3018               	movlw	24
  4298  06BE  00AE               	movwf	??___ftdiv
  4299  06BF  082E               	movf	??___ftdiv,w
  4300  06C0  00B2               	movwf	___ftdiv@cntr
  4301  06C1                     l2185:	
  4302  06C1  3001               	movlw	1
  4303  06C2                     u3265:	
  4304  06C2  1003               	clrc
  4305  06C3  0DB3               	rlf	___ftdiv@f3,f
  4306  06C4  0DB4               	rlf	___ftdiv@f3+1,f
  4307  06C5  0DB5               	rlf	___ftdiv@f3+2,f
  4308  06C6  3EFF               	addlw	-1
  4309  06C7  1D03               	skipz
  4310  06C8  2EC2               	goto	u3265
  4311  06C9  082A               	movf	___ftdiv@f2+2,w
  4312  06CA  022D               	subwf	___ftdiv@f1+2,w
  4313  06CB  1D03               	skipz
  4314  06CC  2ED3               	goto	u3275
  4315  06CD  0829               	movf	___ftdiv@f2+1,w
  4316  06CE  022C               	subwf	___ftdiv@f1+1,w
  4317  06CF  1D03               	skipz
  4318  06D0  2ED3               	goto	u3275
  4319  06D1  0828               	movf	___ftdiv@f2,w
  4320  06D2  022B               	subwf	___ftdiv@f1,w
  4321  06D3                     u3275:	
  4322  06D3  1C03               	skipc
  4323  06D4  2EE0               	goto	l2193
  4324  06D5  0828               	movf	___ftdiv@f2,w
  4325  06D6  02AB               	subwf	___ftdiv@f1,f
  4326  06D7  0829               	movf	___ftdiv@f2+1,w
  4327  06D8  1C03               	skipc
  4328  06D9  0F29               	incfsz	___ftdiv@f2+1,w
  4329  06DA  02AC               	subwf	___ftdiv@f1+1,f
  4330  06DB  082A               	movf	___ftdiv@f2+2,w
  4331  06DC  1C03               	skipc
  4332  06DD  0A2A               	incf	___ftdiv@f2+2,w
  4333  06DE  02AD               	subwf	___ftdiv@f1+2,f
  4334  06DF  1433               	bsf	___ftdiv@f3,0
  4335  06E0                     l2193:	
  4336  06E0  3001               	movlw	1
  4337  06E1                     u3285:	
  4338  06E1  1003               	clrc
  4339  06E2  0DAB               	rlf	___ftdiv@f1,f
  4340  06E3  0DAC               	rlf	___ftdiv@f1+1,f
  4341  06E4  0DAD               	rlf	___ftdiv@f1+2,f
  4342  06E5  3EFF               	addlw	-1
  4343  06E6  1D03               	skipz
  4344  06E7  2EE1               	goto	u3285
  4345  06E8  3001               	movlw	1
  4346  06E9  02B2               	subwf	___ftdiv@cntr,f
  4347  06EA  1D03               	btfss	3,2
  4348  06EB  2EC1               	goto	l2185
  4349  06EC  0833               	movf	___ftdiv@f3,w
  4350  06ED  00A0               	movwf	___ftpack@arg
  4351  06EE  0834               	movf	___ftdiv@f3+1,w
  4352  06EF  00A1               	movwf	___ftpack@arg+1
  4353  06F0  0835               	movf	___ftdiv@f3+2,w
  4354  06F1  00A2               	movwf	___ftpack@arg+2
  4355  06F2  0836               	movf	___ftdiv@exp,w
  4356  06F3  00AE               	movwf	??___ftdiv
  4357  06F4  082E               	movf	??___ftdiv,w
  4358  06F5  00A3               	movwf	___ftpack@exp
  4359  06F6  0837               	movf	___ftdiv@sign,w
  4360  06F7  00AF               	movwf	??___ftdiv+1
  4361  06F8  082F               	movf	??___ftdiv+1,w
  4362  06F9  00A4               	movwf	___ftpack@sign
  4363  06FA  120A  158A  2609   	fcall	___ftpack
  4364  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  4365  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  4366  06FF  0820               	movf	?___ftpack,w
  4367  0700  00A8               	movwf	?___ftdiv
  4368  0701  0821               	movf	?___ftpack+1,w
  4369  0702  00A9               	movwf	?___ftdiv+1
  4370  0703  0822               	movf	?___ftpack+2,w
  4371  0704  00AA               	movwf	?___ftdiv+2
  4372  0705  0008               	return
  4373  0706                     __end_of___ftdiv:	
  4374                           
  4375                           	psect	text20
  4376  0C19                     __ptext20:	
  4377 ;; *************** function ___awtoft *****************
  4378 ;; Defined at:
  4379 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  c               2    8[BANK0 ] int 
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;  sign            1   13[BANK0 ] unsigned char 
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  3    8[BANK0 ] float 
  4386 ;; Registers used:
  4387 ;;		wreg, status,2, status,0, pclath, cstack
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4393 ;;      Params:         0       3       0       0       0
  4394 ;;      Locals:         0       1       0       0       0
  4395 ;;      Temps:          0       2       0       0       0
  4396 ;;      Totals:         0       6       0       0       0
  4397 ;;Total ram usage:        6 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; Hardware stack levels required when called:    2
  4400 ;; This function calls:
  4401 ;;		___ftpack
  4402 ;; This function is called by:
  4403 ;;		_exp
  4404 ;;		_log
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           
  4409                           ;psect for function ___awtoft
  4410  0C19                     ___awtoft:	
  4411                           
  4412                           ;incstack = 0
  4413                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  4414  0C19  1283               	bcf	3,5	;RP0=0, select bank0
  4415  0C1A  1303               	bcf	3,6	;RP1=0, select bank0
  4416  0C1B  01AD               	clrf	___awtoft@sign
  4417  0C1C  1FA9               	btfss	___awtoft@c+1,7
  4418  0C1D  2C25               	goto	l2155
  4419  0C1E  09A8               	comf	___awtoft@c,f
  4420  0C1F  09A9               	comf	___awtoft@c+1,f
  4421  0C20  0AA8               	incf	___awtoft@c,f
  4422  0C21  1903               	skipnz
  4423  0C22  0AA9               	incf	___awtoft@c+1,f
  4424  0C23  01AD               	clrf	___awtoft@sign
  4425  0C24  0AAD               	incf	___awtoft@sign,f
  4426  0C25                     l2155:	
  4427  0C25  0828               	movf	___awtoft@c,w
  4428  0C26  00A0               	movwf	___ftpack@arg
  4429  0C27  0829               	movf	___awtoft@c+1,w
  4430  0C28  00A1               	movwf	___ftpack@arg+1
  4431  0C29  01A2               	clrf	___ftpack@arg+2
  4432  0C2A  308E               	movlw	142
  4433  0C2B  00AB               	movwf	??___awtoft
  4434  0C2C  082B               	movf	??___awtoft,w
  4435  0C2D  00A3               	movwf	___ftpack@exp
  4436  0C2E  082D               	movf	___awtoft@sign,w
  4437  0C2F  00AC               	movwf	??___awtoft+1
  4438  0C30  082C               	movf	??___awtoft+1,w
  4439  0C31  00A4               	movwf	___ftpack@sign
  4440  0C32  120A  158A  2609   	fcall	___ftpack
  4441  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4442  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4443  0C37  0820               	movf	?___ftpack,w
  4444  0C38  00A8               	movwf	?___awtoft
  4445  0C39  0821               	movf	?___ftpack+1,w
  4446  0C3A  00A9               	movwf	?___awtoft+1
  4447  0C3B  0822               	movf	?___ftpack+2,w
  4448  0C3C  00AA               	movwf	?___awtoft+2
  4449  0C3D  0008               	return
  4450  0C3E                     __end_of___awtoft:	
  4451                           
  4452                           	psect	text21
  4453  0C3E                     __ptext21:	
  4454 ;; *************** function ___lltoft *****************
  4455 ;; Defined at:
  4456 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lltoft.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  c               4    8[BANK0 ] unsigned long 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  exp             1   13[BANK0 ] unsigned char 
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  3    8[BANK0 ] float 
  4463 ;; Registers used:
  4464 ;;		wreg, status,2, status,0, pclath, cstack
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4470 ;;      Params:         0       4       0       0       0
  4471 ;;      Locals:         0       1       0       0       0
  4472 ;;      Temps:          0       1       0       0       0
  4473 ;;      Totals:         0       6       0       0       0
  4474 ;;Total ram usage:        6 bytes
  4475 ;; Hardware stack levels used:    1
  4476 ;; Hardware stack levels required when called:    2
  4477 ;; This function calls:
  4478 ;;		___ftpack
  4479 ;; This function is called by:
  4480 ;;		_pow
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           
  4485                           ;psect for function ___lltoft
  4486  0C3E                     ___lltoft:	
  4487                           
  4488                           ;incstack = 0
  4489                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4490  0C3E  308E               	movlw	142
  4491  0C3F  1283               	bcf	3,5	;RP0=0, select bank0
  4492  0C40  1303               	bcf	3,6	;RP1=0, select bank0
  4493  0C41  00AC               	movwf	??___lltoft
  4494  0C42  082C               	movf	??___lltoft,w
  4495  0C43  00AD               	movwf	___lltoft@exp
  4496  0C44                     l2273:	
  4497  0C44  30FF               	movlw	255
  4498  0C45  052B               	andwf	___lltoft@c+3,w
  4499  0C46  1903               	btfsc	3,2
  4500  0C47  2C56               	goto	l2275
  4501  0C48  3001               	movlw	1
  4502  0C49                     u3425:	
  4503  0C49  1003               	clrc
  4504  0C4A  0CAB               	rrf	___lltoft@c+3,f
  4505  0C4B  0CAA               	rrf	___lltoft@c+2,f
  4506  0C4C  0CA9               	rrf	___lltoft@c+1,f
  4507  0C4D  0CA8               	rrf	___lltoft@c,f
  4508  0C4E  3EFF               	addlw	-1
  4509  0C4F  1D03               	skipz
  4510  0C50  2C49               	goto	u3425
  4511  0C51  3001               	movlw	1
  4512  0C52  00AC               	movwf	??___lltoft
  4513  0C53  082C               	movf	??___lltoft,w
  4514  0C54  07AD               	addwf	___lltoft@exp,f
  4515  0C55  2C44               	goto	l2273
  4516  0C56                     l2275:	
  4517  0C56  0828               	movf	___lltoft@c,w
  4518  0C57  00A0               	movwf	___ftpack@arg
  4519  0C58  0829               	movf	___lltoft@c+1,w
  4520  0C59  00A1               	movwf	___ftpack@arg+1
  4521  0C5A  082A               	movf	___lltoft@c+2,w
  4522  0C5B  00A2               	movwf	___ftpack@arg+2
  4523  0C5C  082D               	movf	___lltoft@exp,w
  4524  0C5D  00AC               	movwf	??___lltoft
  4525  0C5E  082C               	movf	??___lltoft,w
  4526  0C5F  00A3               	movwf	___ftpack@exp
  4527  0C60  01A4               	clrf	___ftpack@sign
  4528  0C61  120A  158A  2609   	fcall	___ftpack
  4529  0C64  1283               	bcf	3,5	;RP0=0, select bank0
  4530  0C65  1303               	bcf	3,6	;RP1=0, select bank0
  4531  0C66  0820               	movf	?___ftpack,w
  4532  0C67  00A8               	movwf	?___lltoft
  4533  0C68  0821               	movf	?___ftpack+1,w
  4534  0C69  00A9               	movwf	?___lltoft+1
  4535  0C6A  0822               	movf	?___ftpack+2,w
  4536  0C6B  00AA               	movwf	?___lltoft+2
  4537  0C6C  0008               	return
  4538  0C6D                     __end_of___lltoft:	
  4539                           
  4540                           	psect	text22
  4541  0BC0                     __ptext22:	
  4542 ;; *************** function ___lwtoft *****************
  4543 ;; Defined at:
  4544 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwtoft.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  c               2    8[BANK0 ] unsigned int 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  3    8[BANK0 ] float 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0, pclath, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4558 ;;      Params:         0       3       0       0       0
  4559 ;;      Locals:         0       0       0       0       0
  4560 ;;      Temps:          0       1       0       0       0
  4561 ;;      Totals:         0       4       0       0       0
  4562 ;;Total ram usage:        4 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    2
  4565 ;; This function calls:
  4566 ;;		___ftpack
  4567 ;; This function is called by:
  4568 ;;		_main
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           
  4573                           ;psect for function ___lwtoft
  4574  0BC0                     ___lwtoft:	
  4575                           
  4576                           ;incstack = 0
  4577                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  4578  0BC0  1283               	bcf	3,5	;RP0=0, select bank0
  4579  0BC1  1303               	bcf	3,6	;RP1=0, select bank0
  4580  0BC2  0828               	movf	___lwtoft@c,w
  4581  0BC3  00A0               	movwf	___ftpack@arg
  4582  0BC4  0829               	movf	___lwtoft@c+1,w
  4583  0BC5  00A1               	movwf	___ftpack@arg+1
  4584  0BC6  01A2               	clrf	___ftpack@arg+2
  4585  0BC7  308E               	movlw	142
  4586  0BC8  00AB               	movwf	??___lwtoft
  4587  0BC9  082B               	movf	??___lwtoft,w
  4588  0BCA  00A3               	movwf	___ftpack@exp
  4589  0BCB  01A4               	clrf	___ftpack@sign
  4590  0BCC  120A  158A  2609   	fcall	___ftpack
  4591  0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  4592  0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  4593  0BD1  0820               	movf	?___ftpack,w
  4594  0BD2  00A8               	movwf	?___lwtoft
  4595  0BD3  0821               	movf	?___ftpack+1,w
  4596  0BD4  00A9               	movwf	?___lwtoft+1
  4597  0BD5  0822               	movf	?___ftpack+2,w
  4598  0BD6  00AA               	movwf	?___lwtoft+2
  4599  0BD7  0008               	return
  4600  0BD8                     __end_of___lwtoft:	
  4601                           
  4602                           	psect	text23
  4603  0E09                     __ptext23:	
  4604 ;; *************** function ___ftpack *****************
  4605 ;; Defined at:
  4606 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  arg             3    0[BANK0 ] unsigned um
  4609 ;;  exp             1    3[BANK0 ] unsigned char 
  4610 ;;  sign            1    4[BANK0 ] unsigned char 
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;		None
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  3    0[BANK0 ] float 
  4615 ;; Registers used:
  4616 ;;		wreg, status,2, status,0
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4622 ;;      Params:         0       5       0       0       0
  4623 ;;      Locals:         0       0       0       0       0
  4624 ;;      Temps:          0       3       0       0       0
  4625 ;;      Totals:         0       8       0       0       0
  4626 ;;Total ram usage:        8 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; Hardware stack levels required when called:    1
  4629 ;; This function calls:
  4630 ;;		Nothing
  4631 ;; This function is called by:
  4632 ;;		___altoft
  4633 ;;		___awtoft
  4634 ;;		___ftadd
  4635 ;;		___ftdiv
  4636 ;;		___ftmul
  4637 ;;		___lltoft
  4638 ;;		___lwtoft
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           
  4643                           ;psect for function ___ftpack
  4644  0E09                     ___ftpack:	
  4645                           
  4646                           ;incstack = 0
  4647                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4648  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  4649  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  4650  0E0B  0823               	movf	___ftpack@exp,w
  4651  0E0C  1903               	btfsc	3,2
  4652  0E0D  2E13               	goto	l1949
  4653  0E0E  0822               	movf	___ftpack@arg+2,w
  4654  0E0F  0421               	iorwf	___ftpack@arg+1,w
  4655  0E10  0420               	iorwf	___ftpack@arg,w
  4656  0E11  1D03               	skipz
  4657  0E12  2E26               	goto	l1955
  4658  0E13                     l1949:	
  4659  0E13  3000               	movlw	0
  4660  0E14  00A0               	movwf	?___ftpack
  4661  0E15  3000               	movlw	0
  4662  0E16  00A1               	movwf	?___ftpack+1
  4663  0E17  3000               	movlw	0
  4664  0E18  00A2               	movwf	?___ftpack+2
  4665  0E19  0008               	return
  4666  0E1A                     l1953:	
  4667  0E1A  3001               	movlw	1
  4668  0E1B  00A5               	movwf	??___ftpack
  4669  0E1C  0825               	movf	??___ftpack,w
  4670  0E1D  07A3               	addwf	___ftpack@exp,f
  4671  0E1E  3001               	movlw	1
  4672  0E1F                     u2675:	
  4673  0E1F  1003               	clrc
  4674  0E20  0CA2               	rrf	___ftpack@arg+2,f
  4675  0E21  0CA1               	rrf	___ftpack@arg+1,f
  4676  0E22  0CA0               	rrf	___ftpack@arg,f
  4677  0E23  3EFF               	addlw	-1
  4678  0E24  1D03               	skipz
  4679  0E25  2E1F               	goto	u2675
  4680  0E26                     l1955:	
  4681  0E26  30FE               	movlw	254
  4682  0E27  0522               	andwf	___ftpack@arg+2,w
  4683  0E28  1903               	btfsc	3,2
  4684  0E29  2E41               	goto	l305
  4685  0E2A  2E1A               	goto	l1953
  4686  0E2B                     l1957:	
  4687  0E2B  3001               	movlw	1
  4688  0E2C  00A5               	movwf	??___ftpack
  4689  0E2D  0825               	movf	??___ftpack,w
  4690  0E2E  07A3               	addwf	___ftpack@exp,f
  4691  0E2F  3001               	movlw	1
  4692  0E30  07A0               	addwf	___ftpack@arg,f
  4693  0E31  3000               	movlw	0
  4694  0E32  1803               	skipnc
  4695  0E33  3001               	movlw	1
  4696  0E34  07A1               	addwf	___ftpack@arg+1,f
  4697  0E35  3000               	movlw	0
  4698  0E36  1803               	skipnc
  4699  0E37  3001               	movlw	1
  4700  0E38  07A2               	addwf	___ftpack@arg+2,f
  4701  0E39  3001               	movlw	1
  4702  0E3A                     u2695:	
  4703  0E3A  1003               	clrc
  4704  0E3B  0CA2               	rrf	___ftpack@arg+2,f
  4705  0E3C  0CA1               	rrf	___ftpack@arg+1,f
  4706  0E3D  0CA0               	rrf	___ftpack@arg,f
  4707  0E3E  3EFF               	addlw	-1
  4708  0E3F  1D03               	skipz
  4709  0E40  2E3A               	goto	u2695
  4710  0E41                     l305:	
  4711  0E41  30FF               	movlw	255
  4712  0E42  0522               	andwf	___ftpack@arg+2,w
  4713  0E43  1903               	btfsc	3,2
  4714  0E44  2E50               	goto	l1965
  4715  0E45  2E2B               	goto	l1957
  4716  0E46                     l1963:	
  4717  0E46  3001               	movlw	1
  4718  0E47  02A3               	subwf	___ftpack@exp,f
  4719  0E48  3001               	movlw	1
  4720  0E49                     u2715:	
  4721  0E49  1003               	clrc
  4722  0E4A  0DA0               	rlf	___ftpack@arg,f
  4723  0E4B  0DA1               	rlf	___ftpack@arg+1,f
  4724  0E4C  0DA2               	rlf	___ftpack@arg+2,f
  4725  0E4D  3EFF               	addlw	-1
  4726  0E4E  1D03               	skipz
  4727  0E4F  2E49               	goto	u2715
  4728  0E50                     l1965:	
  4729  0E50  1BA1               	btfsc	___ftpack@arg+1,7
  4730  0E51  2E56               	goto	l312
  4731  0E52  3002               	movlw	2
  4732  0E53  0223               	subwf	___ftpack@exp,w
  4733  0E54  1803               	skipnc
  4734  0E55  2E46               	goto	l1963
  4735  0E56                     l312:	
  4736  0E56  1823               	btfsc	___ftpack@exp,0
  4737  0E57  2E5E               	goto	l313
  4738  0E58  30FF               	movlw	255
  4739  0E59  05A0               	andwf	___ftpack@arg,f
  4740  0E5A  307F               	movlw	127
  4741  0E5B  05A1               	andwf	___ftpack@arg+1,f
  4742  0E5C  30FF               	movlw	255
  4743  0E5D  05A2               	andwf	___ftpack@arg+2,f
  4744  0E5E                     l313:	
  4745  0E5E  1003               	clrc
  4746  0E5F  0CA3               	rrf	___ftpack@exp,f
  4747  0E60  0823               	movf	___ftpack@exp,w
  4748  0E61  00A5               	movwf	??___ftpack
  4749  0E62  01A6               	clrf	??___ftpack+1
  4750  0E63  01A7               	clrf	??___ftpack+2
  4751  0E64  3010               	movlw	16
  4752  0E65                     u2755:	
  4753  0E65  1003               	clrc
  4754  0E66  0DA5               	rlf	??___ftpack,f
  4755  0E67  0DA6               	rlf	??___ftpack+1,f
  4756  0E68  0DA7               	rlf	??___ftpack+2,f
  4757  0E69  3EFF               	addlw	-1
  4758  0E6A  1D03               	skipz
  4759  0E6B  2E65               	goto	u2755
  4760  0E6C  0825               	movf	??___ftpack,w
  4761  0E6D  04A0               	iorwf	___ftpack@arg,f
  4762  0E6E  0826               	movf	??___ftpack+1,w
  4763  0E6F  04A1               	iorwf	___ftpack@arg+1,f
  4764  0E70  0827               	movf	??___ftpack+2,w
  4765  0E71  04A2               	iorwf	___ftpack@arg+2,f
  4766  0E72  0824               	movf	___ftpack@sign,w
  4767  0E73  1903               	btfsc	3,2
  4768  0E74  0008               	return
  4769  0E75  17A2               	bsf	___ftpack@arg+2,7
  4770  0E76  0008               	return
  4771  0E77                     __end_of___ftpack:	
  4772                           
  4773                           	psect	text24
  4774  0DBC                     __ptext24:	
  4775 ;; *************** function ___awmod *****************
  4776 ;; Defined at:
  4777 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awmod.c"
  4778 ;; Parameters:    Size  Location     Type
  4779 ;;  divisor         2   20[BANK0 ] int 
  4780 ;;  dividend        2   22[BANK0 ] int 
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;  sign            1   26[BANK0 ] unsigned char 
  4783 ;;  counter         1   25[BANK0 ] unsigned char 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  2   20[BANK0 ] int 
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4793 ;;      Params:         0       4       0       0       0
  4794 ;;      Locals:         0       2       0       0       0
  4795 ;;      Temps:          0       1       0       0       0
  4796 ;;      Totals:         0       7       0       0       0
  4797 ;;Total ram usage:        7 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    1
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_main
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           
  4808                           ;psect for function ___awmod
  4809  0DBC                     ___awmod:	
  4810                           
  4811                           ;incstack = 0
  4812                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4813  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  4814  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  4815  0DBE  01BA               	clrf	___awmod@sign
  4816  0DBF  1FB7               	btfss	___awmod@dividend+1,7
  4817  0DC0  2DC8               	goto	l2403
  4818  0DC1  09B6               	comf	___awmod@dividend,f
  4819  0DC2  09B7               	comf	___awmod@dividend+1,f
  4820  0DC3  0AB6               	incf	___awmod@dividend,f
  4821  0DC4  1903               	skipnz
  4822  0DC5  0AB7               	incf	___awmod@dividend+1,f
  4823  0DC6  01BA               	clrf	___awmod@sign
  4824  0DC7  0ABA               	incf	___awmod@sign,f
  4825  0DC8                     l2403:	
  4826  0DC8  1FB5               	btfss	___awmod@divisor+1,7
  4827  0DC9  2DCF               	goto	l2407
  4828  0DCA  09B4               	comf	___awmod@divisor,f
  4829  0DCB  09B5               	comf	___awmod@divisor+1,f
  4830  0DCC  0AB4               	incf	___awmod@divisor,f
  4831  0DCD  1903               	skipnz
  4832  0DCE  0AB5               	incf	___awmod@divisor+1,f
  4833  0DCF                     l2407:	
  4834  0DCF  0834               	movf	___awmod@divisor,w
  4835  0DD0  0435               	iorwf	___awmod@divisor+1,w
  4836  0DD1  1903               	btfsc	3,2
  4837  0DD2  2DFC               	goto	l2425
  4838  0DD3  01B9               	clrf	___awmod@counter
  4839  0DD4  0AB9               	incf	___awmod@counter,f
  4840  0DD5                     l2415:	
  4841  0DD5  1BB5               	btfsc	___awmod@divisor+1,7
  4842  0DD6  2DE3               	goto	l2417
  4843  0DD7  3001               	movlw	1
  4844  0DD8                     u3645:	
  4845  0DD8  1003               	clrc
  4846  0DD9  0DB4               	rlf	___awmod@divisor,f
  4847  0DDA  0DB5               	rlf	___awmod@divisor+1,f
  4848  0DDB  3EFF               	addlw	-1
  4849  0DDC  1D03               	skipz
  4850  0DDD  2DD8               	goto	u3645
  4851  0DDE  3001               	movlw	1
  4852  0DDF  00B8               	movwf	??___awmod
  4853  0DE0  0838               	movf	??___awmod,w
  4854  0DE1  07B9               	addwf	___awmod@counter,f
  4855  0DE2  2DD5               	goto	l2415
  4856  0DE3                     l2417:	
  4857  0DE3  0835               	movf	___awmod@divisor+1,w
  4858  0DE4  0237               	subwf	___awmod@dividend+1,w
  4859  0DE5  1D03               	skipz
  4860  0DE6  2DE9               	goto	u3665
  4861  0DE7  0834               	movf	___awmod@divisor,w
  4862  0DE8  0236               	subwf	___awmod@dividend,w
  4863  0DE9                     u3665:	
  4864  0DE9  1C03               	skipc
  4865  0DEA  2DF1               	goto	l2421
  4866  0DEB  0834               	movf	___awmod@divisor,w
  4867  0DEC  02B6               	subwf	___awmod@dividend,f
  4868  0DED  0835               	movf	___awmod@divisor+1,w
  4869  0DEE  1C03               	skipc
  4870  0DEF  03B7               	decf	___awmod@dividend+1,f
  4871  0DF0  02B7               	subwf	___awmod@dividend+1,f
  4872  0DF1                     l2421:	
  4873  0DF1  3001               	movlw	1
  4874  0DF2                     u3675:	
  4875  0DF2  1003               	clrc
  4876  0DF3  0CB5               	rrf	___awmod@divisor+1,f
  4877  0DF4  0CB4               	rrf	___awmod@divisor,f
  4878  0DF5  3EFF               	addlw	-1
  4879  0DF6  1D03               	skipz
  4880  0DF7  2DF2               	goto	u3675
  4881  0DF8  3001               	movlw	1
  4882  0DF9  02B9               	subwf	___awmod@counter,f
  4883  0DFA  1D03               	btfss	3,2
  4884  0DFB  2DE3               	goto	l2417
  4885  0DFC                     l2425:	
  4886  0DFC  083A               	movf	___awmod@sign,w
  4887  0DFD  1903               	btfsc	3,2
  4888  0DFE  2E04               	goto	l2429
  4889  0DFF  09B6               	comf	___awmod@dividend,f
  4890  0E00  09B7               	comf	___awmod@dividend+1,f
  4891  0E01  0AB6               	incf	___awmod@dividend,f
  4892  0E02  1903               	skipnz
  4893  0E03  0AB7               	incf	___awmod@dividend+1,f
  4894  0E04                     l2429:	
  4895  0E04  0837               	movf	___awmod@dividend+1,w
  4896  0E05  00B5               	movwf	?___awmod+1
  4897  0E06  0836               	movf	___awmod@dividend,w
  4898  0E07  00B4               	movwf	?___awmod
  4899  0E08  0008               	return
  4900  0E09                     __end_of___awmod:	
  4901                           
  4902                           	psect	text25
  4903  0BD8                     __ptext25:	
  4904 ;; *************** function _isr *****************
  4905 ;; Defined at:
  4906 ;;		line 21 in file "jgatoraton1.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;		None
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;		None
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  1    wreg      void 
  4913 ;; Registers used:
  4914 ;;		wreg, status,2, status,0
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4920 ;;      Params:         0       0       0       0       0
  4921 ;;      Locals:         0       0       0       0       0
  4922 ;;      Temps:          6       0       0       0       0
  4923 ;;      Totals:         6       0       0       0       0
  4924 ;;Total ram usage:        6 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		Interrupt level 1
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           
  4934                           ;psect for function _isr
  4935  0BD8                     _isr:	
  4936                           
  4937                           ;jgatoraton1.c: 31: if(INTCONbits.INTF == 1)
  4938  0BD8  1C8B               	btfss	11,1	;volatile
  4939  0BD9  2BEC               	goto	i1l37
  4940                           
  4941                           ;jgatoraton1.c: 32: {
  4942                           ;jgatoraton1.c: 33: if(GATO!=1)
  4943  0BDA  1683               	bsf	3,5	;RP0=1, select bank1
  4944  0BDB  1303               	bcf	3,6	;RP1=0, select bank1
  4945  0BDC  0332               	decf	_GATO^(0+128),w
  4946  0BDD  0433               	iorwf	(_GATO+1)^(0+128),w
  4947  0BDE  1903               	btfsc	3,2
  4948  0BDF  2BEB               	goto	i1l1905
  4949                           
  4950                           ;jgatoraton1.c: 34: GATO = GATO/2;
  4951  0BE0  0833               	movf	(_GATO+1)^(0+128),w
  4952  0BE1  00F1               	movwf	??_isr+1
  4953  0BE2  0832               	movf	_GATO^(0+128),w
  4954  0BE3  00F0               	movwf	??_isr
  4955  0BE4  1003               	clrc
  4956  0BE5  0CF1               	rrf	??_isr+1,f
  4957  0BE6  0CF0               	rrf	??_isr,f
  4958  0BE7  0870               	movf	??_isr,w
  4959  0BE8  00B2               	movwf	_GATO^(0+128)
  4960  0BE9  0871               	movf	??_isr+1,w
  4961  0BEA  00B3               	movwf	(_GATO+1)^(0+128)
  4962  0BEB                     i1l1905:	
  4963                           
  4964                           ;jgatoraton1.c: 36: INTCONbits.INTF = 0;
  4965  0BEB  108B               	bcf	11,1	;volatile
  4966  0BEC                     i1l37:	
  4967  0BEC  0875               	movf	??_isr+5,w
  4968  0BED  1283               	bcf	3,5	;RP0=0, select bank0
  4969  0BEE  00FF               	movwf	127
  4970  0BEF  0874               	movf	??_isr+4,w
  4971  0BF0  008A               	movwf	10
  4972  0BF1  0873               	movf	??_isr+3,w
  4973  0BF2  0084               	movwf	4
  4974  0BF3  0E72               	swapf	(??_isr+2)^(0+-128),w
  4975  0BF4  0083               	movwf	3
  4976  0BF5  0EFE               	swapf	126,f
  4977  0BF6  0E7E               	swapf	126,w
  4978  0BF7  0009               	retfie
  4979  0BF8                     __end_of_isr:	
  4980  007E                     btemp	set	126	;btemp
  4981  007E                     wtemp0	set	126
  4982                           
  4983                           	psect	intentry
  4984  0004                     __pintentry:	
  4985                           ;incstack = 0
  4986                           ; Regs used in _isr: [wreg+status,2+status,0]
  4987                           
  4988  0004                     interrupt_function:	
  4989  007E                     saved_w	set	btemp
  4990  0004  00FE               	movwf	btemp
  4991  0005  0E03               	swapf	3,w
  4992  0006  00F2               	movwf	??_isr+2
  4993  0007  0804               	movf	4,w
  4994  0008  00F3               	movwf	??_isr+3
  4995  0009  080A               	movf	10,w
  4996  000A  00F4               	movwf	??_isr+4
  4997  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4998  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4999  000D  087F               	movf	btemp+1,w
  5000  000E  00F5               	movwf	??_isr+5
  5001  000F  120A  158A  2BD8   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    57
    Data        8
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     79      79
    BANK1            80     18      22
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(1) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_pow
    _rand->___lmul
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___ftadd
    ___fttol->___lwtoft
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lwtoft->___ftpack
    ___awmod->_rand

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_pow

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   67387
                                             77 BANK0      2     2      0
                                             11 BANK1      7     7      0
                            ___awmod
                            ___fttol
                           ___lwtoft
                                _pow
                               _rand
                            _validar
 ---------------------------------------------------------------------------------
 (1) _validar                                              3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     266
                                             13 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     266
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _pow                                                 18    12      6   63642
                                             70 BANK0      7     1      6
                                              0 BANK1     11    11      0
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                           ___lwtoft (ARG)
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   20609
                                             53 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _exp                                                 10     7      3   34681
                                             60 BANK0     10     7      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (3) _ldexp                                                7     2      5    1444
                                             53 BANK0      7     2      5
                             ___ftge
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                                9     6      3    9209
                                             43 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     582
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     464
                                             12 BANK0     14    10      4
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                              12     6      6    1090
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    2517
                                             26 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     4      6    8467
                                             43 BANK0     10     4      6
                             ___bmul
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    3476
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     224
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    4349
                                             43 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    4123
                                             30 BANK0     13     7      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     260
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2798
                                              8 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2511
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2415
                                              8 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2344
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2248
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     563
                                             20 BANK0      7     3      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   ___fttol
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _pow
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
     ___fttol
       ___lwtoft (ARG)
         ___ftpack
     ___lltoft
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     _exp (ARG)
       ___awtoft
         ___ftpack
       ___ftdiv
         ___ftpack
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       ___fttol
         ___lwtoft (ARG)
           ___ftpack
       _eval_poly
         ___bmul
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftge
         ___fttol
           ___lwtoft (ARG)
             ___ftpack
         _frexp
       _ldexp
         ___ftge
         _eval_poly (ARG)
           ___bmul
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___bmul
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         _frexp
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___bmul
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       _frexp
   _rand
     ___lmul
   _validar

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     12      16       7       27.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      71      12        0.0%
ABS                  0      0      71       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue Oct 03 15:04:16 2017

            ___altoft@exp 0040                         pc 0002            ___bmul@product 0022  
             __CFG_CP$OFF 0000             ___altoft@sign 0041                        l40 0D53  
                      l41 0D6D                        l43 0D57                        fsr 0004  
            ___ftadd@exp1 004A              ___ftadd@exp2 0049              ___ftadd@sign 0048  
                     l312 0E56                       l313 0E5E                       l305 0E41  
                     l336 0376                       l508 006C                       l396 0FE6  
            __CFG_CPD$OFF 0000                       _exp 0193                       _log 0586  
                     _isr 0BD8                       _pow 004B                       fsr0 0004  
                     indf 0000              ___awmod@sign 003A              __CFG_LVP$OFF 0000  
            ___ftdiv@cntr 0032              ___ftdiv@sign 0037                      l2001 0CC4  
                    l2003 0CD6                      l2013 02F7                      l2101 0520  
                    l2023 030D                      l2041 033C                      l2017 02FE  
                    l2113 0548                      l2105 0530                      l2043 0348  
                    l2035 0327                      l2053 0366                      l2045 034D  
                    l2213 0C01                      l2117 0558                      l1501 0F8C  
                    l2063 039A                      l2055 0372                      l2047 0351  
                    l2135 0D04                      l2231 0740                      l2073 03BD  
                    l1433 07EF                      l1521 0FCE                      l2241 0796  
                    l2313 01C1                      l2403 0DC8                      l2155 0C25  
                    l2171 067C                      l2059 0388                      l2083 04CB  
                    l2251 0EE9                      l2227 0737                      l2307 01A1  
                    l2421 0DF1                      l2165 0666                      l1429 07C8  
                    l1533 0FF7                      l2325 0216                      l2261 0C8D  
                    l2415 0DD5                      l2407 0DCF                      l1527 0FDB  
                    l1519 0FBE                      l2343 02B6                      l2319 01E3  
                    l2417 0DE3                      l2425 0DFC                      l2273 0C44  
                    l2193 06E0                      l2185 06C1                      l2089 04E1  
                    l1529 0FE9                      l2257 0C77                      l2275 0C56  
                    l2291 05BA                      l2371 0081                      l2429 0E04  
                    l2285 05A8                      l2365 0075                      l1671 0EFE  
                    l2383 010D                      l1807 0D66                      l2447 03F2  
                    l1681 0F23                      l2473 0473                      l2379 00ED  
                    l1693 0F50                      l1953 0E1A                      l1697 0F59  
                    l1963 0E46                      l1955 0E26                      l1965 0E50  
                    l1957 0E2B                      l1949 0E13                      l1983 0BB7  
                    l1979 0BB1                      ?_exp 005C                      ?_log 0055  
                    ?_isr 0070                      ?_pow 0066              __CFG_WDTE$ON 0000  
                    _GATO 00B2                      u2005 0FDD                      u3005 0367  
                    u2225 0F2C                      u3125 0531                      u3135 0539  
                    u2415 0D3A                      u3500 01FB                      u3245 068E  
                    u3085 04ED                      u3405 0C97                      u3255 06A0  
                    u3175 0559                      u3095 04FF                      u1751 07BB  
                    u1752 07BC                      u3425 0C49                      u3265 06C2  
                    u3185 0561                      u1753 07C1                      u1754 07C2  
                    u2715 0E49                      u3275 06D3                      u1771 07E2  
                    u1772 07E3                      u3285 06E1                      u2805 0CC9  
                    u1773 07E8                      u1774 07E9                      u1945 0F93  
                    u3545 0DAE                      u3705 046F                      u3490 01FA  
                    u2755 0E65                      u2675 0E1F                      u2915 0328  
                    u3395 0C8F                      u3715 047C                      u3645 0DD8  
                    u2695 0E3A                      u1975 0FBF                      u3727 0489  
                    u3665 0DE9                      u2945 033D                      u3737 04A1  
                    u3675 0DF2                      u3595 00E0                      u3747 0D49  
                    i1l37 0BEC                      u2975 0352              __CFG_WRT$OFF 0000  
                    _main 03D7              ___ftpack@arg 0020                      _rand 0D75  
            ___ftpack@exp 0023                      btemp 007E                      exp@x 005C  
                    log@x 0055                      pow@x 0066                      pow@y 0069  
                    start 0012             __CFG_IESO$OFF 0000         ___bmul@multiplier 0023  
           __CFG_MCLRE$ON 0000              ___ftmul@cntr 003C              ___ftmul@sign 003D  
            ___fttol@exp1 0039                     ??_exp 005F                     ??_log 0058  
            ___fttol@lval 0035                     ??_isr 0070                     ??_pow 006C  
                   ?_main 0070                     ?_rand 002D           __end_of___ftadd 03D7  
         __end_of___awmod 0E09           __end_of___ftdiv 0706           __end_of___ftneg 0BAD  
                   _ANSEL 0188           __end_of___ftmul 0586           __end_of___ftsub 0C19  
         __end_of___fttol 1000                     _RATON 00B4                     _PORTC 0007  
                   _PORTD 0008                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088       ___lmul@multiplicand 0024              ___lltoft@exp 002D  
          __CFG_FCMEN$OFF 0000             ___awtoft@sign 002D                     _floor 0706  
                   _ldexp 0EF0                     _frexp 0CF0                     _errno 007A  
                   _randx 0076             ___ftpack@sign 0024            __CFG_BOREN$OFF 0000  
         __end_of_validar 0D75                     pclath 000A                     pow@yi 00A7  
                   status 0003                     wtemp0 007E               exp@exponent 0063  
             ldexp@newexp 0058           __initialization 0015               log@exponent 0059  
            __end_of_main 04B3              __end_of_rand 0DBC                    ??_main 006D  
           ___fttol@sign1 0034                    ??_rand 002F                    ?_floor 004B  
                  ?_ldexp 0055                    ?_frexp 0020          __end_of___altoft 0CF0  
        __end_of___awtoft 0C3E          __end_of___ftpack 0E77                    _ANSELH 0189  
        __end_of___lltoft 0C6D                    i1l1905 0BEB          __end_of___lwtoft 0BD8  
          __CFG_PWRTE$OFF 0000                    ___bmul 0BAD                    ___ftge 079F  
                  ___lmul 0C6D                 ??___ftadd 0044                 ??___awmod 0038  
               ??___ftdiv 002E                 ??___ftneg 0023                 ??___ftmul 0034  
               ??___ftsub 0051                 ??___fttol 0030           ___awmod@divisor 0034  
         ___awmod@counter 0039                    floor@i 004F                    floor@x 004B  
   ___ftmul@f3_as_product 0039              __pdataCOMMON 0076                    saved_w 007E  
               ??_validar 0020          __end_ofexp@coeff 0824          __end_oflog@coeff 083F  
 __end_of__initialization 0047                ___altoft@c 003A                ___ftadd@f1 003E  
              ___ftadd@f2 0041                ___ftge@ff1 0020                ___ftge@ff2 0023  
            eval_poly@res 0052                ___ftdiv@f1 002B                ___ftdiv@f2 0028  
              ___ftdiv@f3 0033                ___ftneg@f1 0020                ___awtoft@c 0028  
     ___bmul@multiplicand 0020                ___ftmul@f1 002E                ___ftmul@f2 0031  
              ___ftsub@f1 004E                ___ftsub@f2 004B                ___fttol@f1 002C  
          __pcstackCOMMON 0070              __pidataBANK1 0B9B                ___lltoft@c 0028  
           __end_of_floor 079F             __end_of_ldexp 0F72             __end_of_frexp 0D32  
              ___lwtoft@c 0028                   ??_floor 004E                   ??_ldexp 005A  
                 ??_frexp 0024        __size_of_eval_poly 0079                __pmaintext 03D7  
                 ?___bmul 0020                   ?___ftge 0020                   ?___lmul 0020  
              __pintentry 0004                 ?___altoft 003A            ___lmul@product 0029  
               ?___awtoft 0028                 ?___ftpack 0020                 ?___lltoft 0028  
               ?___lwtoft 0028                __stringtab 0800           __size_of___bmul 0013  
         __size_of___ftge 005F           __size_of___lmul 0041                   ___ftadd 02CE  
                 ___awmod 0DBC                   ___ftdiv 064E                   ___ftneg 0BA3  
                 ___ftmul 04B3                   ___ftsub 0BF8                   ___fttol 0F72  
              ??___altoft 003E                   _exp$646 0060                ??___awtoft 002B  
              ??___ftpack 0025         __end_of_eval_poly 0EF0                ??___lltoft 002C  
                 __ptext1 0D32                   __ptext2 0D75                   __ptext3 0C6D  
                 __ptext4 004B                   __ptext5 0586                   __ptext6 0193  
                 __ptext7 0EF0                   __ptext8 0706                   __ptext9 0CF0  
              ??___lwtoft 002B                   _pow$644 00A0                   _pow$645 00A3  
            __size_of_exp 013B              __size_of_log 00C8              __size_of_isr 0020  
            __size_of_pow 0148          ___awmod@dividend 0036                   _validar 0D32  
                 main@aux 00AE      end_of_initialization 0047                   exp@sign 0065  
                 pow@sign 00A6                 _PORTBbits 0006                 _PORTDbits 0008  
             ___ftdiv@exp 0036               ___ftmul@exp 0038            __end_of___bmul 0BC0  
          __end_of___ftge 07FE            __end_of___lmul 0CAE             __pidataCOMMON 0B9F  
              floor@expon 0052       start_initialization 0015                eval_poly@d 004E  
              eval_poly@n 004F                eval_poly@x 004B                ldexp@value 0055  
             __end_of_exp 02CE               __end_of_log 064E               __end_of_isr 0BF8  
             __end_of_pow 0193                frexp@value 0020  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                ??___bmul 0021                  ??___ftge 0026                  ??___lmul 0028  
             __pdataBANK1 00B2         __size_of___altoft 0042         __size_of___awtoft 0025  
       __size_of___ftpack 006E         __size_of___lltoft 002F               __pbssCOMMON 007A  
               ___latbits 0002         __size_of___lwtoft 0018             __pcstackBANK0 0020  
           __pcstackBANK1 00A0                  ?___ftadd 003E                  ?___awmod 0034  
                ?___ftdiv 0028                  ?___ftneg 0020                  ?___ftmul 002E  
                ?___ftsub 004B                  ?___fttol 002C                 __pstrings 0800  
               _eval_poly 0E77                  ?_validar 0070            __size_of_floor 0099  
          __size_of_ldexp 0082            __size_of_frexp 0042         interrupt_function 0004  
             __stringbase 0805                ?_eval_poly 004B         ___lmul@multiplier 0020  
               frexp@eptr 0023          __size_of___ftadd 0109          __size_of___awmod 004D  
        __size_of___ftdiv 00B8          __size_of___ftneg 000A                  ___altoft 0CAE  
        __size_of___ftmul 00D3          __size_of___ftsub 0021          __size_of___fttol 008E  
                ___awtoft 0C19                  ___ftpack 0E09        __end_of__stringtab 0806  
                ___lltoft 0C3E                  ___lwtoft 0BC0                  _main$643 00AB  
                __ptext10 0F72                  __ptext11 079F                  __ptext20 0C19  
                __ptext12 0CAE                  __ptext21 0C3E                  __ptext13 0E77  
                __ptext22 0BC0                  __ptext14 04B3                  __ptext23 0E09  
                __ptext15 0BAD                  __ptext24 0DBC                  __ptext16 0BF8  
                __ptext25 0BD8                  __ptext17 02CE                  __ptext18 0BA3  
                __ptext19 064E          __size_of_validar 0043         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 00DC             __size_of_rand 0047                  main@aux2 00B0  
                exp@coeff 0806                  log@coeff 0824                _INTCONbits 000B  
             ??_eval_poly 0051                  intlevel1 0000                 stringcode 0800  
                stringdir 0800                  stringtab 0800  
