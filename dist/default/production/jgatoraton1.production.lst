

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Tue Oct 03 01:32:30 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 1.43
    45                           ; Generated 25/07/2017 GMT
    46                           ; 
    47                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  0105                     	;# 
   142  0107                     	;# 
   143  0108                     	;# 
   144  0109                     	;# 
   145  010C                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  0185                     	;# 
   151  0187                     	;# 
   152  0188                     	;# 
   153  0189                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156                           
   157                           	psect	idataCOMMON
   158  0B83                     __pidataCOMMON:	
   159                           
   160                           ;initializer for _randx
   161  0B83  3401               	retlw	1
   162  0B84  3400               	retlw	0
   163  0B85  3400               	retlw	0
   164  0B86  3400               	retlw	0
   165                           
   166                           	psect	idataBANK1
   167  0B7F                     __pidataBANK1:	
   168                           
   169                           ;initializer for _GATO
   170  0B7F  3401               	retlw	1
   171  0B80  3400               	retlw	0
   172                           
   173                           ;initializer for _RATON
   174  0B81  3404               	retlw	4
   175  0B82  3400               	retlw	0
   176                           
   177                           	psect	strings
   178  0800                     __pstrings:	
   179  0800                     stringtab:	
   180  0800                     __stringtab:	
   181  0800                     stringcode:	
   182                           ;	String table - string pointers are 1 byte each
   183                           
   184  0800                     stringdir:	
   185  0800  3008               	movlw	high stringdir
   186  0801  008A               	movwf	10
   187  0802  0804               	movf	4,w
   188  0803  0A84               	incf	4,f
   189  0804  0782               	addwf	2,f
   190  0805                     __stringbase:	
   191  0805  3400               	retlw	0
   192  0806                     __end_of__stringtab:	
   193  0806                     exp@coeff:	
   194  0806  3400               	retlw	0
   195  0807  3480               	retlw	128
   196  0808  343F               	retlw	63
   197  0809  3472               	retlw	114
   198  080A  3431               	retlw	49
   199  080B  343F               	retlw	63
   200  080C  34FE               	retlw	254
   201  080D  3475               	retlw	117
   202  080E  343E               	retlw	62
   203  080F  3458               	retlw	88
   204  0810  3463               	retlw	99
   205  0811  343D               	retlw	61
   206  0812  3495               	retlw	149
   207  0813  341D               	retlw	29
   208  0814  343C               	retlw	60
   209  0815  34C5               	retlw	197
   210  0816  34AE               	retlw	174
   211  0817  343A               	retlw	58
   212  0818  3479               	retlw	121
   213  0819  3421               	retlw	33
   214  081A  3439               	retlw	57
   215  081B  3494               	retlw	148
   216  081C  3480               	retlw	128
   217  081D  3437               	retlw	55
   218  081E  3493               	retlw	147
   219  081F  34A7               	retlw	167
   220  0820  3435               	retlw	53
   221  0821  3456               	retlw	86
   222  0822  3415               	retlw	21
   223  0823  3434               	retlw	52
   224  0824                     __end_ofexp@coeff:	
   225  0824                     log@coeff:	
   226  0824  3400               	retlw	0
   227  0825  3400               	retlw	0
   228  0826  3400               	retlw	0
   229  0827  3400               	retlw	0
   230  0828  3480               	retlw	128
   231  0829  343F               	retlw	63
   232  082A  34F0               	retlw	240
   233  082B  34FF               	retlw	255
   234  082C  34BE               	retlw	190
   235  082D  34E2               	retlw	226
   236  082E  34A9               	retlw	169
   237  082F  343E               	retlw	62
   238  0830  3483               	retlw	131
   239  0831  3476               	retlw	118
   240  0832  34BE               	retlw	190
   241  0833  34AE               	retlw	174
   242  0834  342B               	retlw	43
   243  0835  343E               	retlw	62
   244  0836  343C               	retlw	60
   245  0837  34C3               	retlw	195
   246  0838  34BD               	retlw	189
   247  0839  34D2               	retlw	210
   248  083A  3413               	retlw	19
   249  083B  343D               	retlw	61
   250  083C  3478               	retlw	120
   251  083D  34D3               	retlw	211
   252  083E  34BB               	retlw	187
   253  083F                     __end_oflog@coeff:	
   254  0008                     _PORTD	set	8
   255  0006                     _PORTBbits	set	6
   256  0008                     _PORTDbits	set	8
   257  0007                     _PORTC	set	7
   258  000B                     _INTCONbits	set	11
   259  0088                     _TRISD	set	136
   260  0086                     _TRISB	set	134
   261  0087                     _TRISC	set	135
   262  0189                     _ANSELH	set	393
   263  0188                     _ANSEL	set	392
   264                           
   265                           ; #config settings
   266  0000                     
   267                           	psect	cinit
   268  0015                     start_initialization:	
   269  0015                     __initialization:	
   270                           
   271                           ; Initialize objects allocated to BANK1
   272  0015  1683               	bsf	3,5	;RP0=1, select bank1
   273  0016  1303               	bcf	3,6	;RP1=0, select bank1
   274  0017  120A  158A  237F  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   275  001C  00B2               	movwf	__pdataBANK1& (0+127)
   276  001D  120A  158A  2380  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   277  0022  00B3               	movwf	(__pdataBANK1+1)& (0+127)
   278  0023  120A  158A  2381  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   279  0028  00B4               	movwf	(__pdataBANK1+2)& (0+127)
   280  0029  120A  158A  2382  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   281  002E  00B5               	movwf	(__pdataBANK1+3)& (0+127)
   282                           
   283                           ; Initialize objects allocated to COMMON
   284  002F  120A  158A  2383  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   285  0034  00F6               	movwf	__pdataCOMMON& (0+127)
   286  0035  120A  158A  2384  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   287  003A  00F7               	movwf	(__pdataCOMMON+1)& (0+127)
   288  003B  120A  158A  2385  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   289  0040  00F8               	movwf	(__pdataCOMMON+2)& (0+127)
   290  0041  120A  158A  2386   	fcall	__pidataCOMMON+3	;fetch initializer
   291  0044  00F9               	movwf	(__pdataCOMMON+3)& (0+127)
   292                           
   293                           ; Clear objects allocated to BANK1
   294  0045  01B6               	clrf	__pbssBANK1& (0+127)
   295  0046  01B7               	clrf	(__pbssBANK1+1)& (0+127)
   296                           
   297                           ; Clear objects allocated to COMMON
   298  0047  01FA               	clrf	__pbssCOMMON& (0+127)
   299  0048  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   300  0049                     end_of_initialization:	
   301                           ;End of C runtime variable initialization code
   302                           
   303  0049                     __end_of__initialization:	
   304  0049  0183               	clrf	3
   305  004A  120A  118A  2BE3   	ljmp	_main	;jump to C main() function
   306                           
   307                           	psect	bssCOMMON
   308  007A                     __pbssCOMMON:	
   309  007A                     _x:	
   310  007A                     	ds	2
   311                           
   312                           	psect	dataCOMMON
   313  0076                     __pdataCOMMON:	
   314  0076                     _randx:	
   315  0076                     	ds	4
   316                           
   317                           	psect	bssBANK1
   318  00B6                     __pbssBANK1:	
   319  00B6                     _errno:	
   320  00B6                     	ds	2
   321                           
   322                           	psect	dataBANK1
   323  00B2                     __pdataBANK1:	
   324  00B2                     _GATO:	
   325  00B2                     	ds	2
   326  00B4                     _RATON:	
   327  00B4                     	ds	2
   328                           
   329                           	psect	cstackBANK1
   330  00A0                     __pcstackBANK1:	
   331  00A0                     _pow$645:	
   332                           
   333                           ; 3 bytes @ 0x0
   334  00A0                     	ds	3
   335  00A3                     _pow$646:	
   336                           
   337                           ; 3 bytes @ 0x3
   338  00A3                     	ds	3
   339  00A6                     pow@sign:	
   340                           
   341                           ; 1 bytes @ 0x6
   342  00A6                     	ds	1
   343  00A7                     pow@yi:	
   344                           
   345                           ; 4 bytes @ 0x7
   346  00A7                     	ds	4
   347  00AB                     _main$644:	
   348                           
   349                           ; 3 bytes @ 0xB
   350  00AB                     	ds	3
   351  00AE                     main@aux:	
   352                           
   353                           ; 2 bytes @ 0xE
   354  00AE                     	ds	2
   355  00B0                     main@aux2:	
   356                           
   357                           ; 2 bytes @ 0x10
   358  00B0                     	ds	2
   359                           
   360                           	psect	cstackCOMMON
   361  0070                     __pcstackCOMMON:	
   362  0070                     ?_isr:	
   363  0070                     ??_isr:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?_validar:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ?_main:	
   370                           ; 1 bytes @ 0x0
   371                           
   372                           
   373                           ; 1 bytes @ 0x0
   374  0070                     	ds	6
   375                           
   376                           	psect	cstackBANK0
   377  0020                     __pcstackBANK0:	
   378  0020                     ?___ftge:	
   379  0020                     ??_validar:	
   380                           ; 1 bit 
   381                           
   382  0020                     ?___bmul:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0020                     ?___ftpack:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0020                     ?_frexp:	
   389                           ; 3 bytes @ 0x0
   390                           
   391  0020                     ?___ftneg:	
   392                           ; 3 bytes @ 0x0
   393                           
   394  0020                     ?___lmul:	
   395                           ; 3 bytes @ 0x0
   396                           
   397  0020                     ___bmul@multiplicand:	
   398                           ; 4 bytes @ 0x0
   399                           
   400  0020                     ___ftpack@arg:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0020                     ___ftge@ff1:	
   404                           ; 3 bytes @ 0x0
   405                           
   406  0020                     ___ftneg@f1:	
   407                           ; 3 bytes @ 0x0
   408                           
   409  0020                     frexp@value:	
   410                           ; 3 bytes @ 0x0
   411                           
   412  0020                     ___lmul@multiplier:	
   413                           ; 3 bytes @ 0x0
   414                           
   415                           
   416                           ; 4 bytes @ 0x0
   417  0020                     	ds	1
   418  0021                     ??___bmul:	
   419                           
   420                           ; 1 bytes @ 0x1
   421  0021                     	ds	1
   422  0022                     ___bmul@product:	
   423                           
   424                           ; 1 bytes @ 0x2
   425  0022                     	ds	1
   426  0023                     ??___ftneg:	
   427  0023                     ___bmul@multiplier:	
   428                           ; 1 bytes @ 0x3
   429                           
   430  0023                     ___ftpack@exp:	
   431                           ; 1 bytes @ 0x3
   432                           
   433  0023                     frexp@eptr:	
   434                           ; 1 bytes @ 0x3
   435                           
   436  0023                     ___ftge@ff2:	
   437                           ; 1 bytes @ 0x3
   438                           
   439                           
   440                           ; 3 bytes @ 0x3
   441  0023                     	ds	1
   442  0024                     ??_frexp:	
   443  0024                     ___ftpack@sign:	
   444                           ; 1 bytes @ 0x4
   445                           
   446  0024                     ___lmul@multiplicand:	
   447                           ; 1 bytes @ 0x4
   448                           
   449                           
   450                           ; 4 bytes @ 0x4
   451  0024                     	ds	1
   452  0025                     ??___ftpack:	
   453                           
   454                           ; 1 bytes @ 0x5
   455  0025                     	ds	1
   456  0026                     ??___ftge:	
   457                           
   458                           ; 1 bytes @ 0x6
   459  0026                     	ds	2
   460  0028                     ??___lmul:	
   461  0028                     ?___awtoft:	
   462                           ; 1 bytes @ 0x8
   463                           
   464  0028                     ?___ftdiv:	
   465                           ; 3 bytes @ 0x8
   466                           
   467  0028                     ?___lltoft:	
   468                           ; 3 bytes @ 0x8
   469                           
   470  0028                     ?___lwtoft:	
   471                           ; 3 bytes @ 0x8
   472                           
   473  0028                     ___awtoft@c:	
   474                           ; 3 bytes @ 0x8
   475                           
   476  0028                     ___lwtoft@c:	
   477                           ; 2 bytes @ 0x8
   478                           
   479  0028                     ___ftdiv@f2:	
   480                           ; 2 bytes @ 0x8
   481                           
   482  0028                     ___lltoft@c:	
   483                           ; 3 bytes @ 0x8
   484                           
   485                           
   486                           ; 4 bytes @ 0x8
   487  0028                     	ds	1
   488  0029                     ___lmul@product:	
   489                           
   490                           ; 4 bytes @ 0x9
   491  0029                     	ds	2
   492  002B                     ??___awtoft:	
   493  002B                     ??___lwtoft:	
   494                           ; 1 bytes @ 0xB
   495                           
   496  002B                     ___ftdiv@f1:	
   497                           ; 1 bytes @ 0xB
   498                           
   499                           
   500                           ; 3 bytes @ 0xB
   501  002B                     	ds	1
   502  002C                     ??___lltoft:	
   503  002C                     ?___fttol:	
   504                           ; 1 bytes @ 0xC
   505                           
   506  002C                     ___fttol@f1:	
   507                           ; 4 bytes @ 0xC
   508                           
   509                           
   510                           ; 3 bytes @ 0xC
   511  002C                     	ds	1
   512  002D                     ?_rand:	
   513  002D                     ___awtoft@sign:	
   514                           ; 2 bytes @ 0xD
   515                           
   516  002D                     ___lltoft@exp:	
   517                           ; 1 bytes @ 0xD
   518                           
   519                           
   520                           ; 1 bytes @ 0xD
   521  002D                     	ds	1
   522  002E                     ??___ftdiv:	
   523  002E                     ?___ftmul:	
   524                           ; 1 bytes @ 0xE
   525                           
   526  002E                     ___ftmul@f1:	
   527                           ; 3 bytes @ 0xE
   528                           
   529                           
   530                           ; 3 bytes @ 0xE
   531  002E                     	ds	1
   532  002F                     ??_rand:	
   533                           
   534                           ; 1 bytes @ 0xF
   535  002F                     	ds	1
   536  0030                     ??___fttol:	
   537                           
   538                           ; 1 bytes @ 0x10
   539  0030                     	ds	1
   540  0031                     ___ftmul@f2:	
   541                           
   542                           ; 3 bytes @ 0x11
   543  0031                     	ds	1
   544  0032                     ___ftdiv@cntr:	
   545                           
   546                           ; 1 bytes @ 0x12
   547  0032                     	ds	1
   548  0033                     ___ftdiv@f3:	
   549                           
   550                           ; 3 bytes @ 0x13
   551  0033                     	ds	1
   552  0034                     ??___ftmul:	
   553  0034                     ?___awmod:	
   554                           ; 1 bytes @ 0x14
   555                           
   556  0034                     ___fttol@sign1:	
   557                           ; 2 bytes @ 0x14
   558                           
   559  0034                     ___awmod@divisor:	
   560                           ; 1 bytes @ 0x14
   561                           
   562                           
   563                           ; 2 bytes @ 0x14
   564  0034                     	ds	1
   565  0035                     ___fttol@lval:	
   566                           
   567                           ; 4 bytes @ 0x15
   568  0035                     	ds	1
   569  0036                     ___ftdiv@exp:	
   570  0036                     ___awmod@dividend:	
   571                           ; 1 bytes @ 0x16
   572                           
   573                           
   574                           ; 2 bytes @ 0x16
   575  0036                     	ds	1
   576  0037                     ___ftdiv@sign:	
   577                           
   578                           ; 1 bytes @ 0x17
   579  0037                     	ds	1
   580  0038                     ??___awmod:	
   581  0038                     ___ftmul@exp:	
   582                           ; 1 bytes @ 0x18
   583                           
   584                           
   585                           ; 1 bytes @ 0x18
   586  0038                     	ds	1
   587  0039                     ___awmod@counter:	
   588  0039                     ___fttol@exp1:	
   589                           ; 1 bytes @ 0x19
   590                           
   591  0039                     ___ftmul@f3_as_product:	
   592                           ; 1 bytes @ 0x19
   593                           
   594                           
   595                           ; 3 bytes @ 0x19
   596  0039                     	ds	1
   597  003A                     ?___altoft:	
   598  003A                     ___awmod@sign:	
   599                           ; 3 bytes @ 0x1A
   600                           
   601  003A                     ___altoft@c:	
   602                           ; 1 bytes @ 0x1A
   603                           
   604                           
   605                           ; 4 bytes @ 0x1A
   606  003A                     	ds	2
   607  003C                     ___ftmul@cntr:	
   608                           
   609                           ; 1 bytes @ 0x1C
   610  003C                     	ds	1
   611  003D                     ___ftmul@sign:	
   612                           
   613                           ; 1 bytes @ 0x1D
   614  003D                     	ds	1
   615  003E                     ??___altoft:	
   616  003E                     ?___ftadd:	
   617                           ; 1 bytes @ 0x1E
   618                           
   619  003E                     ___ftadd@f1:	
   620                           ; 3 bytes @ 0x1E
   621                           
   622                           
   623                           ; 3 bytes @ 0x1E
   624  003E                     	ds	2
   625  0040                     ___altoft@exp:	
   626                           
   627                           ; 1 bytes @ 0x20
   628  0040                     	ds	1
   629  0041                     ___altoft@sign:	
   630  0041                     ___ftadd@f2:	
   631                           ; 1 bytes @ 0x21
   632                           
   633                           
   634                           ; 3 bytes @ 0x21
   635  0041                     	ds	3
   636  0044                     ??___ftadd:	
   637                           
   638                           ; 1 bytes @ 0x24
   639  0044                     	ds	4
   640  0048                     ___ftadd@sign:	
   641                           
   642                           ; 1 bytes @ 0x28
   643  0048                     	ds	1
   644  0049                     ___ftadd@exp2:	
   645                           
   646                           ; 1 bytes @ 0x29
   647  0049                     	ds	1
   648  004A                     ___ftadd@exp1:	
   649                           
   650                           ; 1 bytes @ 0x2A
   651  004A                     	ds	1
   652  004B                     ?_floor:	
   653  004B                     ?_eval_poly:	
   654                           ; 3 bytes @ 0x2B
   655                           
   656  004B                     ?___ftsub:	
   657                           ; 3 bytes @ 0x2B
   658                           
   659  004B                     ___ftsub@f2:	
   660                           ; 3 bytes @ 0x2B
   661                           
   662  004B                     floor@x:	
   663                           ; 3 bytes @ 0x2B
   664                           
   665  004B                     eval_poly@x:	
   666                           ; 3 bytes @ 0x2B
   667                           
   668                           
   669                           ; 3 bytes @ 0x2B
   670  004B                     	ds	3
   671  004E                     ??_floor:	
   672  004E                     eval_poly@d:	
   673                           ; 1 bytes @ 0x2E
   674                           
   675  004E                     ___ftsub@f1:	
   676                           ; 1 bytes @ 0x2E
   677                           
   678                           
   679                           ; 3 bytes @ 0x2E
   680  004E                     	ds	1
   681  004F                     eval_poly@n:	
   682  004F                     floor@i:	
   683                           ; 2 bytes @ 0x2F
   684                           
   685                           
   686                           ; 3 bytes @ 0x2F
   687  004F                     	ds	2
   688  0051                     ??_eval_poly:	
   689  0051                     ??___ftsub:	
   690                           ; 1 bytes @ 0x31
   691                           
   692                           
   693                           ; 1 bytes @ 0x31
   694  0051                     	ds	1
   695  0052                     floor@expon:	
   696  0052                     eval_poly@res:	
   697                           ; 2 bytes @ 0x32
   698                           
   699                           
   700                           ; 3 bytes @ 0x32
   701  0052                     	ds	3
   702  0055                     ?_log:	
   703  0055                     ?_ldexp:	
   704                           ; 3 bytes @ 0x35
   705                           
   706  0055                     ldexp@value:	
   707                           ; 3 bytes @ 0x35
   708                           
   709  0055                     log@x:	
   710                           ; 3 bytes @ 0x35
   711                           
   712                           
   713                           ; 3 bytes @ 0x35
   714  0055                     	ds	3
   715  0058                     ??_log:	
   716  0058                     ldexp@newexp:	
   717                           ; 1 bytes @ 0x38
   718                           
   719                           
   720                           ; 2 bytes @ 0x38
   721  0058                     	ds	1
   722  0059                     log@exponent:	
   723                           
   724                           ; 2 bytes @ 0x39
   725  0059                     	ds	1
   726  005A                     ??_ldexp:	
   727                           
   728                           ; 1 bytes @ 0x3A
   729  005A                     	ds	2
   730  005C                     ?_exp:	
   731  005C                     exp@x:	
   732                           ; 3 bytes @ 0x3C
   733                           
   734                           
   735                           ; 3 bytes @ 0x3C
   736  005C                     	ds	3
   737  005F                     ??_exp:	
   738                           
   739                           ; 1 bytes @ 0x3F
   740  005F                     	ds	1
   741  0060                     _exp$647:	
   742                           
   743                           ; 3 bytes @ 0x40
   744  0060                     	ds	3
   745  0063                     exp@exponent:	
   746                           
   747                           ; 2 bytes @ 0x43
   748  0063                     	ds	2
   749  0065                     exp@sign:	
   750                           
   751                           ; 1 bytes @ 0x45
   752  0065                     	ds	1
   753  0066                     ?_pow:	
   754  0066                     pow@x:	
   755                           ; 3 bytes @ 0x46
   756                           
   757                           
   758                           ; 3 bytes @ 0x46
   759  0066                     	ds	3
   760  0069                     pow@y:	
   761                           
   762                           ; 3 bytes @ 0x49
   763  0069                     	ds	3
   764  006C                     ??_pow:	
   765                           
   766                           ; 1 bytes @ 0x4C
   767  006C                     	ds	1
   768  006D                     ??_main:	
   769                           
   770                           ; 1 bytes @ 0x4D
   771  006D                     	ds	2
   772                           
   773                           	psect	maintext
   774  03E3                     __pmaintext:	
   775 ;;
   776 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   777 ;;
   778 ;; *************** function _main *****************
   779 ;; Defined at:
   780 ;;		line 62 in file "jgatoraton1.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;  aux2            2   16[BANK1 ] int 
   785 ;;  aux             2   14[BANK1 ] int 
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : B00/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   795 ;;      Params:         0       0       0       0       0
   796 ;;      Locals:         0       0       7       0       0
   797 ;;      Temps:          0       2       0       0       0
   798 ;;      Totals:         0       2       7       0       0
   799 ;;Total ram usage:        9 bytes
   800 ;; Hardware stack levels required when called:    6
   801 ;; This function calls:
   802 ;;		___awmod
   803 ;;		___fttol
   804 ;;		___lwtoft
   805 ;;		_pow
   806 ;;		_rand
   807 ;;		_validar
   808 ;; This function is called by:
   809 ;;		Startup code after reset
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           
   814                           ;psect for function _main
   815  03E3                     _main:	
   816                           
   817                           ;jgatoraton1.c: 63: TRISC = 0;
   818                           
   819                           ;incstack = 0
   820                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   821  03E3  1683               	bsf	3,5	;RP0=1, select bank1
   822  03E4  1303               	bcf	3,6	;RP1=0, select bank1
   823  03E5  0187               	clrf	7	;volatile
   824                           
   825                           ;jgatoraton1.c: 64: PORTC = 1;
   826  03E6  3001               	movlw	1
   827  03E7  1283               	bcf	3,5	;RP0=0, select bank0
   828  03E8  1303               	bcf	3,6	;RP1=0, select bank0
   829  03E9  0087               	movwf	7	;volatile
   830                           
   831                           ;jgatoraton1.c: 65: TRISB = 0xFF;
   832  03EA  30FF               	movlw	255
   833  03EB  1683               	bsf	3,5	;RP0=1, select bank1
   834  03EC  1303               	bcf	3,6	;RP1=0, select bank1
   835  03ED  0086               	movwf	6	;volatile
   836                           
   837                           ;jgatoraton1.c: 66: ANSEL = 0;
   838  03EE  1683               	bsf	3,5	;RP0=1, select bank3
   839  03EF  1703               	bsf	3,6	;RP1=1, select bank3
   840  03F0  0188               	clrf	8	;volatile
   841                           
   842                           ;jgatoraton1.c: 67: ANSELH = 0;
   843  03F1  0189               	clrf	9	;volatile
   844                           
   845                           ;jgatoraton1.c: 68: TRISD = 0;
   846  03F2  1683               	bsf	3,5	;RP0=1, select bank1
   847  03F3  1303               	bcf	3,6	;RP1=0, select bank1
   848  03F4  0188               	clrf	8	;volatile
   849                           
   850                           ;jgatoraton1.c: 69: PORTD = 0;
   851  03F5  1283               	bcf	3,5	;RP0=0, select bank0
   852  03F6  1303               	bcf	3,6	;RP1=0, select bank0
   853  03F7  0188               	clrf	8	;volatile
   854                           
   855                           ;jgatoraton1.c: 71: INTCONbits.GIE = 1;
   856  03F8  178B               	bsf	11,7	;volatile
   857                           
   858                           ;jgatoraton1.c: 73: INTCONbits.INTE = 1;
   859  03F9  160B               	bsf	11,4	;volatile
   860                           
   861                           ;jgatoraton1.c: 76: int aux;
   862                           ;jgatoraton1.c: 77: int aux2=0;
   863  03FA  1683               	bsf	3,5	;RP0=1, select bank1
   864  03FB  1303               	bcf	3,6	;RP1=0, select bank1
   865  03FC  01B0               	clrf	main@aux2^(0+128)
   866  03FD  01B1               	clrf	(main@aux2+1)^(0+128)
   867  03FE                     l2453:	
   868                           ;jgatoraton1.c: 79: do
   869                           
   870                           ;jgatoraton1.c: 78: while (1){
   871                           
   872                           
   873                           ;jgatoraton1.c: 80: {RATON = rand()%7;
   874  03FE  3007               	movlw	7
   875  03FF  1283               	bcf	3,5	;RP0=0, select bank0
   876  0400  1303               	bcf	3,6	;RP1=0, select bank0
   877  0401  00B4               	movwf	___awmod@divisor
   878  0402  3000               	movlw	0
   879  0403  00B5               	movwf	___awmod@divisor+1
   880  0404  120A  158A  255D  120A  118A  	fcall	_rand
   881  0409  1283               	bcf	3,5	;RP0=0, select bank0
   882  040A  1303               	bcf	3,6	;RP1=0, select bank0
   883  040B  082E               	movf	?_rand+1,w
   884  040C  00B7               	movwf	___awmod@dividend+1
   885  040D  082D               	movf	?_rand,w
   886  040E  00B6               	movwf	___awmod@dividend
   887  040F  120A  118A  27B1  120A  118A  	fcall	___awmod
   888  0414  1283               	bcf	3,5	;RP0=0, select bank0
   889  0415  1303               	bcf	3,6	;RP1=0, select bank0
   890  0416  0835               	movf	?___awmod+1,w
   891  0417  1683               	bsf	3,5	;RP0=1, select bank1
   892  0418  1303               	bcf	3,6	;RP1=0, select bank1
   893  0419  00B5               	movwf	(_RATON+1)^(0+128)
   894  041A  1283               	bcf	3,5	;RP0=0, select bank0
   895  041B  1303               	bcf	3,6	;RP1=0, select bank0
   896  041C  0834               	movf	?___awmod,w
   897  041D  1683               	bsf	3,5	;RP0=1, select bank1
   898  041E  1303               	bcf	3,6	;RP1=0, select bank1
   899  041F  00B4               	movwf	_RATON^(0+128)
   900                           
   901                           ;jgatoraton1.c: 81: RATON = pow(2, RATON);
   902  0420  0835               	movf	(_RATON+1)^(0+128),w
   903  0421  1283               	bcf	3,5	;RP0=0, select bank0
   904  0422  1303               	bcf	3,6	;RP1=0, select bank0
   905  0423  00A9               	movwf	___lwtoft@c+1
   906  0424  1683               	bsf	3,5	;RP0=1, select bank1
   907  0425  1303               	bcf	3,6	;RP1=0, select bank1
   908  0426  0834               	movf	_RATON^(0+128),w
   909  0427  1283               	bcf	3,5	;RP0=0, select bank0
   910  0428  1303               	bcf	3,6	;RP1=0, select bank0
   911  0429  00A8               	movwf	___lwtoft@c
   912  042A  120A  158A  23A4  120A  118A  	fcall	___lwtoft
   913  042F  1283               	bcf	3,5	;RP0=0, select bank0
   914  0430  1303               	bcf	3,6	;RP1=0, select bank0
   915  0431  0828               	movf	?___lwtoft,w
   916  0432  00E9               	movwf	pow@y
   917  0433  0829               	movf	?___lwtoft+1,w
   918  0434  00EA               	movwf	pow@y+1
   919  0435  082A               	movf	?___lwtoft+2,w
   920  0436  00EB               	movwf	pow@y+2
   921  0437  3000               	movlw	0
   922  0438  00E6               	movwf	pow@x
   923  0439  3000               	movlw	0
   924  043A  00E7               	movwf	pow@x+1
   925  043B  3040               	movlw	64
   926  043C  00E8               	movwf	pow@x+2
   927  043D  120A  118A  204D  120A  118A  	fcall	_pow
   928  0442  1283               	bcf	3,5	;RP0=0, select bank0
   929  0443  1303               	bcf	3,6	;RP1=0, select bank0
   930  0444  0866               	movf	?_pow,w
   931  0445  1683               	bsf	3,5	;RP0=1, select bank1
   932  0446  1303               	bcf	3,6	;RP1=0, select bank1
   933  0447  00AB               	movwf	_main$644^(0+128)
   934  0448  1283               	bcf	3,5	;RP0=0, select bank0
   935  0449  1303               	bcf	3,6	;RP1=0, select bank0
   936  044A  0867               	movf	?_pow+1,w
   937  044B  1683               	bsf	3,5	;RP0=1, select bank1
   938  044C  1303               	bcf	3,6	;RP1=0, select bank1
   939  044D  00AC               	movwf	(_main$644+1)^(0+128)
   940  044E  1283               	bcf	3,5	;RP0=0, select bank0
   941  044F  1303               	bcf	3,6	;RP1=0, select bank0
   942  0450  0868               	movf	?_pow+2,w
   943  0451  1683               	bsf	3,5	;RP0=1, select bank1
   944  0452  1303               	bcf	3,6	;RP1=0, select bank1
   945  0453  00AD               	movwf	(_main$644+2)^(0+128)
   946                           
   947                           ;jgatoraton1.c: 81: RATON = pow(2, RATON);
   948  0454  082B               	movf	_main$644^(0+128),w
   949  0455  1283               	bcf	3,5	;RP0=0, select bank0
   950  0456  1303               	bcf	3,6	;RP1=0, select bank0
   951  0457  00AC               	movwf	___fttol@f1
   952  0458  1683               	bsf	3,5	;RP0=1, select bank1
   953  0459  1303               	bcf	3,6	;RP1=0, select bank1
   954  045A  082C               	movf	(_main$644+1)^(0+128),w
   955  045B  1283               	bcf	3,5	;RP0=0, select bank0
   956  045C  1303               	bcf	3,6	;RP1=0, select bank0
   957  045D  00AD               	movwf	___fttol@f1+1
   958  045E  1683               	bsf	3,5	;RP0=1, select bank1
   959  045F  1303               	bcf	3,6	;RP1=0, select bank1
   960  0460  082D               	movf	(_main$644+2)^(0+128),w
   961  0461  1283               	bcf	3,5	;RP0=0, select bank0
   962  0462  1303               	bcf	3,6	;RP1=0, select bank0
   963  0463  00AE               	movwf	___fttol@f1+2
   964  0464  120A  158A  2772  120A  118A  	fcall	___fttol
   965  0469  1283               	bcf	3,5	;RP0=0, select bank0
   966  046A  1303               	bcf	3,6	;RP1=0, select bank0
   967  046B  082D               	movf	?___fttol+1,w
   968  046C  1683               	bsf	3,5	;RP0=1, select bank1
   969  046D  1303               	bcf	3,6	;RP1=0, select bank1
   970  046E  00B5               	movwf	(_RATON+1)^(0+128)
   971  046F  1283               	bcf	3,5	;RP0=0, select bank0
   972  0470  1303               	bcf	3,6	;RP1=0, select bank0
   973  0471  082C               	movf	?___fttol,w
   974  0472  1683               	bsf	3,5	;RP0=1, select bank1
   975  0473  1303               	bcf	3,6	;RP1=0, select bank1
   976  0474  00B4               	movwf	_RATON^(0+128)
   977                           
   978                           ;jgatoraton1.c: 82: }while(RATON == GATO);
   979  0475  0833               	movf	(_GATO+1)^(0+128),w
   980  0476  0635               	xorwf	(_RATON+1)^(0+128),w
   981  0477  1D03               	skipz
   982  0478  2C7B               	goto	u3705
   983  0479  0832               	movf	_GATO^(0+128),w
   984  047A  0634               	xorwf	_RATON^(0+128),w
   985  047B                     u3705:	
   986  047B  1903               	skipnz
   987  047C  2BFE               	goto	l2453
   988                           
   989                           ;jgatoraton1.c: 83: aux = 0;
   990  047D  01AE               	clrf	main@aux^(0+128)
   991  047E  01AF               	clrf	(main@aux+1)^(0+128)
   992  047F                     l2479:	
   993                           ;jgatoraton1.c: 84: while(aux<5){
   994                           
   995  047F  082F               	movf	(main@aux+1)^(0+128),w
   996  0480  3A80               	xorlw	128
   997  0481  00FF               	movwf	127
   998  0482  3080               	movlw	128
   999  0483  027F               	subwf	127,w
  1000  0484  1D03               	skipz
  1001  0485  2C88               	goto	u3715
  1002  0486  3005               	movlw	5
  1003  0487  022E               	subwf	main@aux^(0+128),w
  1004  0488                     u3715:	
  1005  0488  1803               	btfsc	3,0
  1006  0489  2BFE               	goto	l2453
  1007                           
  1008                           ;jgatoraton1.c: 85: validar();
  1009  048A  120A  158A  251A  120A  118A  	fcall	_validar
  1010                           
  1011                           ;jgatoraton1.c: 86: _delay((unsigned long)((50)*(4000000/4000.0)));
  1012  048F  3041               	movlw	65
  1013  0490  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0491  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0492  00EE               	movwf	??_main+1
  1016  0493  30ED               	movlw	237
  1017  0494  00ED               	movwf	??_main
  1018  0495                     u3727:	
  1019  0495  0BED               	decfsz	??_main,f
  1020  0496  2C95               	goto	u3727
  1021  0497  0BEE               	decfsz	??_main+1,f
  1022  0498  2C95               	goto	u3727
  1023  0499  2C9A               	nop2
  1024                           
  1025                           ;jgatoraton1.c: 87: aux2 = RATON;
  1026  049A  1683               	bsf	3,5	;RP0=1, select bank1
  1027  049B  1303               	bcf	3,6	;RP1=0, select bank1
  1028  049C  0835               	movf	(_RATON+1)^(0+128),w
  1029  049D  00B1               	movwf	(main@aux2+1)^(0+128)
  1030  049E  0834               	movf	_RATON^(0+128),w
  1031  049F  00B0               	movwf	main@aux2^(0+128)
  1032                           
  1033                           ;jgatoraton1.c: 88: RATON = 0;
  1034  04A0  01B4               	clrf	_RATON^(0+128)
  1035  04A1  01B5               	clrf	(_RATON+1)^(0+128)
  1036                           
  1037                           ;jgatoraton1.c: 89: validar();
  1038  04A2  120A  158A  251A  120A  118A  	fcall	_validar
  1039                           
  1040                           ;jgatoraton1.c: 90: _delay((unsigned long)((50)*(4000000/4000.0)));
  1041  04A7  3041               	movlw	65
  1042  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  1043  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1044  04AA  00EE               	movwf	??_main+1
  1045  04AB  30ED               	movlw	237
  1046  04AC  00ED               	movwf	??_main
  1047  04AD                     u3737:	
  1048  04AD  0BED               	decfsz	??_main,f
  1049  04AE  2CAD               	goto	u3737
  1050  04AF  0BEE               	decfsz	??_main+1,f
  1051  04B0  2CAD               	goto	u3737
  1052  04B1  2CB2               	nop2
  1053                           
  1054                           ;jgatoraton1.c: 91: RATON = aux2;
  1055  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  1056  04B3  1303               	bcf	3,6	;RP1=0, select bank1
  1057  04B4  0831               	movf	(main@aux2+1)^(0+128),w
  1058  04B5  00B5               	movwf	(_RATON+1)^(0+128)
  1059  04B6  0830               	movf	main@aux2^(0+128),w
  1060  04B7  00B4               	movwf	_RATON^(0+128)
  1061                           
  1062                           ;jgatoraton1.c: 92: aux++;
  1063  04B8  3001               	movlw	1
  1064  04B9  07AE               	addwf	main@aux^(0+128),f
  1065  04BA  1803               	skipnc
  1066  04BB  0AAF               	incf	(main@aux+1)^(0+128),f
  1067  04BC  3000               	movlw	0
  1068  04BD  07AF               	addwf	(main@aux+1)^(0+128),f
  1069  04BE  2C7F               	goto	l2479
  1070  04BF                     __end_of_main:	
  1071                           
  1072                           	psect	text1
  1073  0D1A                     __ptext1:	
  1074 ;; *************** function _validar *****************
  1075 ;; Defined at:
  1076 ;;		line 41 in file "jgatoraton1.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, status,2, status,0
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1090 ;;      Params:         0       0       0       0       0
  1091 ;;      Locals:         0       0       0       0       0
  1092 ;;      Temps:          0       3       0       0       0
  1093 ;;      Totals:         0       3       0       0       0
  1094 ;;Total ram usage:        3 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:    1
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_main
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           
  1105                           ;psect for function _validar
  1106  0D1A                     _validar:	
  1107                           
  1108                           ;jgatoraton1.c: 42: if(RATON==GATO){
  1109                           
  1110                           ;incstack = 0
  1111                           ; Regs used in _validar: [wreg+status,2+status,0]
  1112  0D1A  1683               	bsf	3,5	;RP0=1, select bank1
  1113  0D1B  1303               	bcf	3,6	;RP1=0, select bank1
  1114  0D1C  0833               	movf	(_GATO+1)^(0+128),w
  1115  0D1D  0635               	xorwf	(_RATON+1)^(0+128),w
  1116  0D1E  1D03               	skipz
  1117  0D1F  2D22               	goto	u2415
  1118  0D20  0832               	movf	_GATO^(0+128),w
  1119  0D21  0634               	xorwf	_RATON^(0+128),w
  1120  0D22                     u2415:	
  1121  0D22  1D03               	skipz
  1122  0D23  2D3B               	goto	l42
  1123                           
  1124                           ;jgatoraton1.c: 43: PORTC = RATON;
  1125  0D24  0834               	movf	_RATON^(0+128),w
  1126  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  1127  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  1128  0D27  0087               	movwf	7	;volatile
  1129                           
  1130                           ;jgatoraton1.c: 44: PORTDbits.RD0 = 1;
  1131  0D28  1408               	bsf	8,0	;volatile
  1132                           
  1133                           ;jgatoraton1.c: 45: _delay((unsigned long)((3000)*(4000000/4000.0)));
  1134  0D29  3010               	movlw	16
  1135  0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  1136  0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  1137  0D2C  00A2               	movwf	??_validar+2
  1138  0D2D  3039               	movlw	57
  1139  0D2E  00A1               	movwf	??_validar+1
  1140  0D2F  300D               	movlw	13
  1141  0D30  00A0               	movwf	??_validar
  1142  0D31                     u3747:	
  1143  0D31  0BA0               	decfsz	??_validar,f
  1144  0D32  2D31               	goto	u3747
  1145  0D33  0BA1               	decfsz	??_validar+1,f
  1146  0D34  2D31               	goto	u3747
  1147  0D35  0BA2               	decfsz	??_validar+2,f
  1148  0D36  2D31               	goto	u3747
  1149                           
  1150                           ;jgatoraton1.c: 46: PORTDbits.RD0 = 0;
  1151  0D37  1283               	bcf	3,5	;RP0=0, select bank0
  1152  0D38  1303               	bcf	3,6	;RP1=0, select bank0
  1153  0D39  1008               	bcf	8,0	;volatile
  1154                           
  1155                           ;jgatoraton1.c: 47: }
  1156  0D3A  2D55               	goto	l43
  1157  0D3B                     l42:	
  1158                           
  1159                           ;jgatoraton1.c: 48: else if(PORTBbits.RB7 == 1)
  1160  0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0D3D  1F86               	btfss	6,7	;volatile
  1163  0D3E  2D4E               	goto	l1811
  1164  0D3F                     l45:	
  1165                           ;jgatoraton1.c: 50: {
  1166                           ;jgatoraton1.c: 51: do{}while(PORTBbits.RB7!=0);
  1167                           
  1168  0D3F  1B86               	btfsc	6,7	;volatile
  1169  0D40  2D3F               	goto	l45
  1170                           
  1171                           ;jgatoraton1.c: 52: if(GATO!=128)
  1172  0D41  3080               	movlw	128
  1173  0D42  1683               	bsf	3,5	;RP0=1, select bank1
  1174  0D43  1303               	bcf	3,6	;RP1=0, select bank1
  1175  0D44  0632               	xorwf	_GATO^(0+128),w
  1176  0D45  0433               	iorwf	(_GATO+1)^(0+128),w
  1177  0D46  1903               	btfsc	3,2
  1178  0D47  2D55               	goto	l43
  1179                           
  1180                           ;jgatoraton1.c: 53: GATO = GATO*2;
  1181  0D48  1003               	clrc
  1182  0D49  0D32               	rlf	_GATO^(0+128),w
  1183  0D4A  00B2               	movwf	_GATO^(0+128)
  1184  0D4B  0D33               	rlf	(_GATO+1)^(0+128),w
  1185  0D4C  00B3               	movwf	(_GATO+1)^(0+128)
  1186                           
  1187                           ;jgatoraton1.c: 56: }
  1188  0D4D  2D55               	goto	l43
  1189  0D4E                     l1811:	
  1190                           
  1191                           ;jgatoraton1.c: 57: else
  1192                           ;jgatoraton1.c: 58: PORTC = RATON + GATO;
  1193  0D4E  1683               	bsf	3,5	;RP0=1, select bank1
  1194  0D4F  1303               	bcf	3,6	;RP1=0, select bank1
  1195  0D50  0832               	movf	_GATO^(0+128),w
  1196  0D51  0734               	addwf	_RATON^(0+128),w
  1197  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0D54  0087               	movwf	7	;volatile
  1200  0D55                     l43:	
  1201                           
  1202                           ;jgatoraton1.c: 59: PORTC = RATON + GATO;
  1203  0D55  1683               	bsf	3,5	;RP0=1, select bank1
  1204  0D56  1303               	bcf	3,6	;RP1=0, select bank1
  1205  0D57  0832               	movf	_GATO^(0+128),w
  1206  0D58  0734               	addwf	_RATON^(0+128),w
  1207  0D59  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0D5B  0087               	movwf	7	;volatile
  1210  0D5C  0008               	return
  1211  0D5D                     __end_of_validar:	
  1212                           
  1213                           	psect	text2
  1214  0D5D                     __ptext2:	
  1215 ;; *************** function _rand *****************
  1216 ;; Defined at:
  1217 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\rand.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  2   13[BANK0 ] int 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0, pclath, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1231 ;;      Params:         0       2       0       0       0
  1232 ;;      Locals:         0       0       0       0       0
  1233 ;;      Temps:          0       5       0       0       0
  1234 ;;      Totals:         0       7       0       0       0
  1235 ;;Total ram usage:        7 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    2
  1238 ;; This function calls:
  1239 ;;		___lmul
  1240 ;; This function is called by:
  1241 ;;		_main
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           
  1246                           ;psect for function _rand
  1247  0D5D                     _rand:	
  1248                           
  1249                           ;incstack = 0
  1250                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  1251  0D5D  0879               	movf	_randx+3,w
  1252  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0D60  00A3               	movwf	___lmul@multiplier+3
  1255  0D61  0878               	movf	_randx+2,w
  1256  0D62  00A2               	movwf	___lmul@multiplier+2
  1257  0D63  0877               	movf	_randx+1,w
  1258  0D64  00A1               	movwf	___lmul@multiplier+1
  1259  0D65  0876               	movf	_randx,w
  1260  0D66  00A0               	movwf	___lmul@multiplier
  1261  0D67  3041               	movlw	65
  1262  0D68  00A7               	movwf	___lmul@multiplicand+3
  1263  0D69  30C6               	movlw	198
  1264  0D6A  00A6               	movwf	___lmul@multiplicand+2
  1265  0D6B  304E               	movlw	78
  1266  0D6C  00A5               	movwf	___lmul@multiplicand+1
  1267  0D6D  306D               	movlw	109
  1268  0D6E  00A4               	movwf	___lmul@multiplicand
  1269  0D6F  120A  158A  2455  120A  158A  	fcall	___lmul
  1270  0D74  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0D75  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0D76  0823               	movf	?___lmul+3,w
  1273  0D77  00F9               	movwf	_randx+3
  1274  0D78  0822               	movf	?___lmul+2,w
  1275  0D79  00F8               	movwf	_randx+2
  1276  0D7A  0821               	movf	?___lmul+1,w
  1277  0D7B  00F7               	movwf	_randx+1
  1278  0D7C  0820               	movf	?___lmul,w
  1279  0D7D  00F6               	movwf	_randx
  1280  0D7E  3039               	movlw	57
  1281  0D7F  07F6               	addwf	_randx,f
  1282  0D80  3030               	movlw	48
  1283  0D81  1803               	skipnc
  1284  0D82  3031               	movlw	49
  1285  0D83  07F7               	addwf	_randx+1,f
  1286  0D84  3000               	movlw	0
  1287  0D85  1803               	skipnc
  1288  0D86  3001               	movlw	1
  1289  0D87  07F8               	addwf	_randx+2,f
  1290  0D88  3000               	movlw	0
  1291  0D89  1803               	skipnc
  1292  0D8A  3001               	movlw	1
  1293  0D8B  07F9               	addwf	_randx+3,f
  1294  0D8C  0876               	movf	_randx,w
  1295  0D8D  00AF               	movwf	??_rand
  1296  0D8E  0877               	movf	_randx+1,w
  1297  0D8F  00B0               	movwf	??_rand+1
  1298  0D90  0878               	movf	_randx+2,w
  1299  0D91  00B1               	movwf	??_rand+2
  1300  0D92  0879               	movf	_randx+3,w
  1301  0D93  00B2               	movwf	??_rand+3
  1302  0D94  3010               	movlw	16
  1303  0D95  00B3               	movwf	??_rand+4
  1304  0D96                     u3545:	
  1305  0D96  0D32               	rlf	??_rand+3,w
  1306  0D97  0CB2               	rrf	??_rand+3,f
  1307  0D98  0CB1               	rrf	??_rand+2,f
  1308  0D99  0CB0               	rrf	??_rand+1,f
  1309  0D9A  0CAF               	rrf	??_rand,f
  1310  0D9B  0BB3               	decfsz	??_rand+4,f
  1311  0D9C  2D96               	goto	u3545
  1312  0D9D  30FF               	movlw	255
  1313  0D9E  052F               	andwf	??_rand,w
  1314  0D9F  00AD               	movwf	?_rand
  1315  0DA0  307F               	movlw	127
  1316  0DA1  0530               	andwf	??_rand+1,w
  1317  0DA2  00AE               	movwf	?_rand+1
  1318  0DA3  0008               	return
  1319  0DA4                     __end_of_rand:	
  1320                           
  1321                           	psect	text3
  1322  0C55                     __ptext3:	
  1323 ;; *************** function ___lmul *****************
  1324 ;; Defined at:
  1325 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul32.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1328 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;  product         4    9[BANK0 ] unsigned long 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  4    0[BANK0 ] unsigned long 
  1333 ;; Registers used:
  1334 ;;		wreg, status,2, status,0
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1340 ;;      Params:         0       8       0       0       0
  1341 ;;      Locals:         0       4       0       0       0
  1342 ;;      Temps:          0       1       0       0       0
  1343 ;;      Totals:         0      13       0       0       0
  1344 ;;Total ram usage:       13 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; Hardware stack levels required when called:    1
  1347 ;; This function calls:
  1348 ;;		Nothing
  1349 ;; This function is called by:
  1350 ;;		_rand
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           
  1355                           ;psect for function ___lmul
  1356  0C55                     ___lmul:	
  1357                           
  1358                           ;incstack = 0
  1359                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1360  0C55  3000               	movlw	0
  1361  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0C57  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0C58  00AC               	movwf	___lmul@product+3
  1364  0C59  3000               	movlw	0
  1365  0C5A  00AB               	movwf	___lmul@product+2
  1366  0C5B  3000               	movlw	0
  1367  0C5C  00AA               	movwf	___lmul@product+1
  1368  0C5D  3000               	movlw	0
  1369  0C5E  00A9               	movwf	___lmul@product
  1370  0C5F                     l2263:	
  1371  0C5F  1C20               	btfss	___lmul@multiplier,0
  1372  0C60  2C75               	goto	l2267
  1373  0C61  0824               	movf	___lmul@multiplicand,w
  1374  0C62  07A9               	addwf	___lmul@product,f
  1375  0C63  0825               	movf	___lmul@multiplicand+1,w
  1376  0C64  1103               	clrz
  1377  0C65  1803               	skipnc
  1378  0C66  3E01               	addlw	1
  1379  0C67  1D03               	btfss	3,2
  1380  0C68  07AA               	addwf	___lmul@product+1,f
  1381  0C69  0826               	movf	___lmul@multiplicand+2,w
  1382  0C6A  1103               	clrz
  1383  0C6B  1803               	skipnc
  1384  0C6C  3E01               	addlw	1
  1385  0C6D  1D03               	btfss	3,2
  1386  0C6E  07AB               	addwf	___lmul@product+2,f
  1387  0C6F  0827               	movf	___lmul@multiplicand+3,w
  1388  0C70  1103               	clrz
  1389  0C71  1803               	skipnc
  1390  0C72  3E01               	addlw	1
  1391  0C73  1D03               	btfss	3,2
  1392  0C74  07AC               	addwf	___lmul@product+3,f
  1393  0C75                     l2267:	
  1394  0C75  3001               	movlw	1
  1395  0C76  00A8               	movwf	??___lmul
  1396  0C77                     u3395:	
  1397  0C77  1003               	clrc
  1398  0C78  0DA4               	rlf	___lmul@multiplicand,f
  1399  0C79  0DA5               	rlf	___lmul@multiplicand+1,f
  1400  0C7A  0DA6               	rlf	___lmul@multiplicand+2,f
  1401  0C7B  0DA7               	rlf	___lmul@multiplicand+3,f
  1402  0C7C  0BA8               	decfsz	??___lmul,f
  1403  0C7D  2C77               	goto	u3395
  1404  0C7E  3001               	movlw	1
  1405  0C7F                     u3405:	
  1406  0C7F  1003               	clrc
  1407  0C80  0CA3               	rrf	___lmul@multiplier+3,f
  1408  0C81  0CA2               	rrf	___lmul@multiplier+2,f
  1409  0C82  0CA1               	rrf	___lmul@multiplier+1,f
  1410  0C83  0CA0               	rrf	___lmul@multiplier,f
  1411  0C84  3EFF               	addlw	-1
  1412  0C85  1D03               	skipz
  1413  0C86  2C7F               	goto	u3405
  1414  0C87  0823               	movf	___lmul@multiplier+3,w
  1415  0C88  0422               	iorwf	___lmul@multiplier+2,w
  1416  0C89  0421               	iorwf	___lmul@multiplier+1,w
  1417  0C8A  0420               	iorwf	___lmul@multiplier,w
  1418  0C8B  1D03               	skipz
  1419  0C8C  2C5F               	goto	l2263
  1420  0C8D  082C               	movf	___lmul@product+3,w
  1421  0C8E  00A3               	movwf	?___lmul+3
  1422  0C8F  082B               	movf	___lmul@product+2,w
  1423  0C90  00A2               	movwf	?___lmul+2
  1424  0C91  082A               	movf	___lmul@product+1,w
  1425  0C92  00A1               	movwf	?___lmul+1
  1426  0C93  0829               	movf	___lmul@product,w
  1427  0C94  00A0               	movwf	?___lmul
  1428  0C95  0008               	return
  1429  0C96                     __end_of___lmul:	
  1430                           
  1431                           	psect	text4
  1432  004D                     __ptext4:	
  1433 ;; *************** function _pow *****************
  1434 ;; Defined at:
  1435 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\pow.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  x               3   70[BANK0 ] unsigned long 
  1438 ;;  y               3   73[BANK0 ] unsigned long 
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  yi              4    7[BANK1 ] unsigned long 
  1441 ;;  sign            1    6[BANK1 ] unsigned char 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  3   70[BANK0 ] unsigned char 
  1444 ;; Registers used:
  1445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         0       6       0       0       0
  1452 ;;      Locals:         0       0      11       0       0
  1453 ;;      Temps:          0       1       0       0       0
  1454 ;;      Totals:         0       7      11       0       0
  1455 ;;Total ram usage:       18 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; Hardware stack levels required when called:    5
  1458 ;; This function calls:
  1459 ;;		___ftge
  1460 ;;		___ftmul
  1461 ;;		___ftneg
  1462 ;;		___fttol
  1463 ;;		___lltoft
  1464 ;;		_exp
  1465 ;;		_log
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _pow
  1473  004D                     _pow:	
  1474                           
  1475                           ;incstack = 0
  1476                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1477  004D  1683               	bsf	3,5	;RP0=1, select bank1
  1478  004E  1303               	bcf	3,6	;RP1=0, select bank1
  1479  004F  01A6               	clrf	pow@sign^(0+128)
  1480  0050  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0051  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0052  0868               	movf	pow@x+2,w
  1483  0053  0467               	iorwf	pow@x+1,w
  1484  0054  0466               	iorwf	pow@x,w
  1485  0055  1D03               	skipz
  1486  0056  2879               	goto	l2371
  1487  0057  3000               	movlw	0
  1488  0058  00A0               	movwf	___ftge@ff1
  1489  0059  3000               	movlw	0
  1490  005A  00A1               	movwf	___ftge@ff1+1
  1491  005B  3000               	movlw	0
  1492  005C  00A2               	movwf	___ftge@ff1+2
  1493  005D  0869               	movf	pow@y,w
  1494  005E  00A3               	movwf	___ftge@ff2
  1495  005F  086A               	movf	pow@y+1,w
  1496  0060  00A4               	movwf	___ftge@ff2+1
  1497  0061  086B               	movf	pow@y+2,w
  1498  0062  00A5               	movwf	___ftge@ff2+2
  1499  0063  120A  158A  25A4  120A  118A  	fcall	___ftge
  1500  0068  1C03               	btfss	3,0
  1501  0069  2870               	goto	l510
  1502  006A  3021               	movlw	33
  1503  006B  1683               	bsf	3,5	;RP0=1, select bank1
  1504  006C  1303               	bcf	3,6	;RP1=0, select bank1
  1505  006D  00B6               	movwf	_errno^(0+128)
  1506  006E  3000               	movlw	0
  1507  006F  00B7               	movwf	(_errno^(0+128)+1)
  1508  0070                     l510:	
  1509  0070  3000               	movlw	0
  1510  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1511  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1512  0073  00E6               	movwf	?_pow
  1513  0074  3000               	movlw	0
  1514  0075  00E7               	movwf	?_pow+1
  1515  0076  3000               	movlw	0
  1516  0077  00E8               	movwf	?_pow+2
  1517  0078  0008               	return
  1518  0079                     l2371:	
  1519  0079  086B               	movf	pow@y+2,w
  1520  007A  046A               	iorwf	pow@y+1,w
  1521  007B  0469               	iorwf	pow@y,w
  1522  007C  1D03               	skipz
  1523  007D  2885               	goto	l2377
  1524  007E  3000               	movlw	0
  1525  007F  00E6               	movwf	?_pow
  1526  0080  3080               	movlw	128
  1527  0081  00E7               	movwf	?_pow+1
  1528  0082  303F               	movlw	63
  1529  0083  00E8               	movwf	?_pow+2
  1530  0084  0008               	return
  1531  0085                     l2377:	
  1532  0085  0866               	movf	pow@x,w
  1533  0086  00A0               	movwf	___ftge@ff1
  1534  0087  0867               	movf	pow@x+1,w
  1535  0088  00A1               	movwf	___ftge@ff1+1
  1536  0089  0868               	movf	pow@x+2,w
  1537  008A  00A2               	movwf	___ftge@ff1+2
  1538  008B  3000               	movlw	0
  1539  008C  00A3               	movwf	___ftge@ff2
  1540  008D  3000               	movlw	0
  1541  008E  00A4               	movwf	___ftge@ff2+1
  1542  008F  3000               	movlw	0
  1543  0090  00A5               	movwf	___ftge@ff2+2
  1544  0091  120A  158A  25A4  120A  118A  	fcall	___ftge
  1545  0096  1803               	btfsc	3,0
  1546  0097  2915               	goto	l2389
  1547  0098  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0099  1303               	bcf	3,6	;RP1=0, select bank0
  1549  009A  0869               	movf	pow@y,w
  1550  009B  00AC               	movwf	___fttol@f1
  1551  009C  086A               	movf	pow@y+1,w
  1552  009D  00AD               	movwf	___fttol@f1+1
  1553  009E  086B               	movf	pow@y+2,w
  1554  009F  00AE               	movwf	___fttol@f1+2
  1555  00A0  120A  158A  2772  120A  118A  	fcall	___fttol
  1556  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1557  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1558  00A7  082F               	movf	?___fttol+3,w
  1559  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  1560  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  1561  00AA  00AA               	movwf	(pow@yi+3)^(0+128)
  1562  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1563  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1564  00AD  082E               	movf	?___fttol+2,w
  1565  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  1566  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  1567  00B0  00A9               	movwf	(pow@yi+2)^(0+128)
  1568  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1569  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1570  00B3  082D               	movf	?___fttol+1,w
  1571  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  1572  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  1573  00B6  00A8               	movwf	(pow@yi+1)^(0+128)
  1574  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1575  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1576  00B9  082C               	movf	?___fttol,w
  1577  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  1578  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  1579  00BC  00A7               	movwf	pow@yi^(0+128)
  1580  00BD  082A               	movf	(pow@yi+3)^(0+128),w
  1581  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1582  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1583  00C0  00AB               	movwf	___lltoft@c+3
  1584  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  1585  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  1586  00C3  0829               	movf	(pow@yi+2)^(0+128),w
  1587  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1588  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1589  00C6  00AA               	movwf	___lltoft@c+2
  1590  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  1591  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  1592  00C9  0828               	movf	(pow@yi+1)^(0+128),w
  1593  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1594  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1595  00CC  00A9               	movwf	___lltoft@c+1
  1596  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  1597  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  1598  00CF  0827               	movf	pow@yi^(0+128),w
  1599  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1600  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1601  00D2  00A8               	movwf	___lltoft@c
  1602  00D3  120A  158A  2426  120A  118A  	fcall	___lltoft
  1603  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1604  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1605  00DA  086B               	movf	pow@y+2,w
  1606  00DB  062A               	xorwf	?___lltoft+2,w
  1607  00DC  1D03               	skipz
  1608  00DD  28E4               	goto	u3595
  1609  00DE  086A               	movf	pow@y+1,w
  1610  00DF  0629               	xorwf	?___lltoft+1,w
  1611  00E0  1D03               	skipz
  1612  00E1  28E4               	goto	u3595
  1613  00E2  0869               	movf	pow@y,w
  1614  00E3  0628               	xorwf	?___lltoft,w
  1615  00E4                     u3595:	
  1616  00E4  1903               	skipnz
  1617  00E5  28F5               	goto	l2385
  1618  00E6  3021               	movlw	33
  1619  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  1620  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  1621  00E9  00B6               	movwf	_errno^(0+128)
  1622  00EA  3000               	movlw	0
  1623  00EB  00B7               	movwf	(_errno^(0+128)+1)
  1624  00EC  3000               	movlw	0
  1625  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1626  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1627  00EF  00E6               	movwf	?_pow
  1628  00F0  3000               	movlw	0
  1629  00F1  00E7               	movwf	?_pow+1
  1630  00F2  3000               	movlw	0
  1631  00F3  00E8               	movwf	?_pow+2
  1632  00F4  0008               	return
  1633  00F5                     l2385:	
  1634  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  1635  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  1636  00F7  0827               	movf	pow@yi^(0+128),w
  1637  00F8  3901               	andlw	1
  1638  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1639  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1640  00FB  00EC               	movwf	??_pow
  1641  00FC  086C               	movf	??_pow,w
  1642  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  1643  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  1644  00FF  00A6               	movwf	pow@sign^(0+128)
  1645  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1646  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1647  0102  0866               	movf	pow@x,w
  1648  0103  00A0               	movwf	___ftneg@f1
  1649  0104  0867               	movf	pow@x+1,w
  1650  0105  00A1               	movwf	___ftneg@f1+1
  1651  0106  0868               	movf	pow@x+2,w
  1652  0107  00A2               	movwf	___ftneg@f1+2
  1653  0108  120A  158A  2387  120A  118A  	fcall	___ftneg
  1654  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1655  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1656  010F  0820               	movf	?___ftneg,w
  1657  0110  00E6               	movwf	pow@x
  1658  0111  0821               	movf	?___ftneg+1,w
  1659  0112  00E7               	movwf	pow@x+1
  1660  0113  0822               	movf	?___ftneg+2,w
  1661  0114  00E8               	movwf	pow@x+2
  1662  0115                     l2389:	
  1663  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1664  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1665  0117  0866               	movf	pow@x,w
  1666  0118  00D5               	movwf	log@x
  1667  0119  0867               	movf	pow@x+1,w
  1668  011A  00D6               	movwf	log@x+1
  1669  011B  0868               	movf	pow@x+2,w
  1670  011C  00D7               	movwf	log@x+2
  1671  011D  120A  118A  2592  120A  118A  	fcall	_log
  1672  0122  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0123  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0124  0855               	movf	?_log,w
  1675  0125  1683               	bsf	3,5	;RP0=1, select bank1
  1676  0126  1303               	bcf	3,6	;RP1=0, select bank1
  1677  0127  00A0               	movwf	_pow$645^(0+128)
  1678  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1679  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1680  012A  0856               	movf	?_log+1,w
  1681  012B  1683               	bsf	3,5	;RP0=1, select bank1
  1682  012C  1303               	bcf	3,6	;RP1=0, select bank1
  1683  012D  00A1               	movwf	(_pow$645+1)^(0+128)
  1684  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1685  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1686  0130  0857               	movf	?_log+2,w
  1687  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1688  0132  1303               	bcf	3,6	;RP1=0, select bank1
  1689  0133  00A2               	movwf	(_pow$645+2)^(0+128)
  1690  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1691  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1692  0136  0869               	movf	pow@y,w
  1693  0137  00AE               	movwf	___ftmul@f1
  1694  0138  086A               	movf	pow@y+1,w
  1695  0139  00AF               	movwf	___ftmul@f1+1
  1696  013A  086B               	movf	pow@y+2,w
  1697  013B  00B0               	movwf	___ftmul@f1+2
  1698  013C  1683               	bsf	3,5	;RP0=1, select bank1
  1699  013D  1303               	bcf	3,6	;RP1=0, select bank1
  1700  013E  0820               	movf	_pow$645^(0+128),w
  1701  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1702  0140  1303               	bcf	3,6	;RP1=0, select bank0
  1703  0141  00B1               	movwf	___ftmul@f2
  1704  0142  1683               	bsf	3,5	;RP0=1, select bank1
  1705  0143  1303               	bcf	3,6	;RP1=0, select bank1
  1706  0144  0821               	movf	(_pow$645+1)^(0+128),w
  1707  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1708  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1709  0147  00B2               	movwf	___ftmul@f2+1
  1710  0148  1683               	bsf	3,5	;RP0=1, select bank1
  1711  0149  1303               	bcf	3,6	;RP1=0, select bank1
  1712  014A  0822               	movf	(_pow$645+2)^(0+128),w
  1713  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1714  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1715  014D  00B3               	movwf	___ftmul@f2+2
  1716  014E  120A  118A  24BF  120A  118A  	fcall	___ftmul
  1717  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1718  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1719  0155  082E               	movf	?___ftmul,w
  1720  0156  1683               	bsf	3,5	;RP0=1, select bank1
  1721  0157  1303               	bcf	3,6	;RP1=0, select bank1
  1722  0158  00A3               	movwf	_pow$646^(0+128)
  1723  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1724  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1725  015B  082F               	movf	?___ftmul+1,w
  1726  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1727  015D  1303               	bcf	3,6	;RP1=0, select bank1
  1728  015E  00A4               	movwf	(_pow$646+1)^(0+128)
  1729  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1730  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1731  0161  0830               	movf	?___ftmul+2,w
  1732  0162  1683               	bsf	3,5	;RP0=1, select bank1
  1733  0163  1303               	bcf	3,6	;RP1=0, select bank1
  1734  0164  00A5               	movwf	(_pow$646+2)^(0+128)
  1735  0165  0823               	movf	_pow$646^(0+128),w
  1736  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0168  00DC               	movwf	exp@x
  1739  0169  1683               	bsf	3,5	;RP0=1, select bank1
  1740  016A  1303               	bcf	3,6	;RP1=0, select bank1
  1741  016B  0824               	movf	(_pow$646+1)^(0+128),w
  1742  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1743  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1744  016E  00DD               	movwf	exp@x+1
  1745  016F  1683               	bsf	3,5	;RP0=1, select bank1
  1746  0170  1303               	bcf	3,6	;RP1=0, select bank1
  1747  0171  0825               	movf	(_pow$646+2)^(0+128),w
  1748  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1750  0174  00DE               	movwf	exp@x+2
  1751  0175  120A  118A  219B  120A  118A  	fcall	_exp
  1752  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1753  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1754  017C  085C               	movf	?_exp,w
  1755  017D  00E6               	movwf	pow@x
  1756  017E  085D               	movf	?_exp+1,w
  1757  017F  00E7               	movwf	pow@x+1
  1758  0180  085E               	movf	?_exp+2,w
  1759  0181  00E8               	movwf	pow@x+2
  1760  0182  1683               	bsf	3,5	;RP0=1, select bank1
  1761  0183  1303               	bcf	3,6	;RP1=0, select bank1
  1762  0184  0826               	movf	pow@sign^(0+128),w
  1763  0185  1903               	btfsc	3,2
  1764  0186  0008               	return
  1765  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0189  0866               	movf	pow@x,w
  1768  018A  00A0               	movwf	___ftneg@f1
  1769  018B  0867               	movf	pow@x+1,w
  1770  018C  00A1               	movwf	___ftneg@f1+1
  1771  018D  0868               	movf	pow@x+2,w
  1772  018E  00A2               	movwf	___ftneg@f1+2
  1773  018F  120A  158A  2387   	fcall	___ftneg
  1774  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1775  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1776  0194  0820               	movf	?___ftneg,w
  1777  0195  00E6               	movwf	?_pow
  1778  0196  0821               	movf	?___ftneg+1,w
  1779  0197  00E7               	movwf	?_pow+1
  1780  0198  0822               	movf	?___ftneg+2,w
  1781  0199  00E8               	movwf	?_pow+2
  1782  019A  0008               	return
  1783  019B                     __end_of_pow:	
  1784                           
  1785                           	psect	text5
  1786  0592                     __ptext5:	
  1787 ;; *************** function _log *****************
  1788 ;; Defined at:
  1789 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\log.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;  x               3   53[BANK0 ] unsigned char 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  exponent        2   57[BANK0 ] int 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  3   53[BANK0 ] int 
  1796 ;; Registers used:
  1797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1803 ;;      Params:         0       3       0       0       0
  1804 ;;      Locals:         0       2       0       0       0
  1805 ;;      Temps:          0       1       0       0       0
  1806 ;;      Totals:         0       6       0       0       0
  1807 ;;Total ram usage:        6 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    4
  1810 ;; This function calls:
  1811 ;;		___awtoft
  1812 ;;		___ftadd
  1813 ;;		___ftge
  1814 ;;		___ftmul
  1815 ;;		_eval_poly
  1816 ;;		_frexp
  1817 ;; This function is called by:
  1818 ;;		_pow
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           
  1823                           ;psect for function _log
  1824  0592                     _log:	
  1825                           
  1826                           ;incstack = 0
  1827                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1828  0592  1283               	bcf	3,5	;RP0=0, select bank0
  1829  0593  1303               	bcf	3,6	;RP1=0, select bank0
  1830  0594  0855               	movf	log@x,w
  1831  0595  00A0               	movwf	___ftge@ff1
  1832  0596  0856               	movf	log@x+1,w
  1833  0597  00A1               	movwf	___ftge@ff1+1
  1834  0598  0857               	movf	log@x+2,w
  1835  0599  00A2               	movwf	___ftge@ff1+2
  1836  059A  3000               	movlw	0
  1837  059B  00A3               	movwf	___ftge@ff2
  1838  059C  3000               	movlw	0
  1839  059D  00A4               	movwf	___ftge@ff2+1
  1840  059E  3000               	movlw	0
  1841  059F  00A5               	movwf	___ftge@ff2+2
  1842  05A0  120A  158A  25A4  120A  118A  	fcall	___ftge
  1843  05A5  1803               	btfsc	3,0
  1844  05A6  2DB6               	goto	l2291
  1845  05A7  3021               	movlw	33
  1846  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  1847  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  1848  05AA  00B6               	movwf	_errno^(0+128)
  1849  05AB  3000               	movlw	0
  1850  05AC  00B7               	movwf	(_errno^(0+128)+1)
  1851  05AD  3000               	movlw	0
  1852  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1853  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1854  05B0  00D5               	movwf	?_log
  1855  05B1  3000               	movlw	0
  1856  05B2  00D6               	movwf	?_log+1
  1857  05B3  3000               	movlw	0
  1858  05B4  00D7               	movwf	?_log+2
  1859  05B5  0008               	return
  1860  05B6                     l2291:	
  1861  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  1862  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  1863  05B8  0857               	movf	log@x+2,w
  1864  05B9  0456               	iorwf	log@x+1,w
  1865  05BA  0455               	iorwf	log@x,w
  1866  05BB  1D03               	skipz
  1867  05BC  2DCC               	goto	l2297
  1868  05BD  3022               	movlw	34
  1869  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  1870  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  1871  05C0  00B6               	movwf	_errno^(0+128)
  1872  05C1  3000               	movlw	0
  1873  05C2  00B7               	movwf	(_errno^(0+128)+1)
  1874  05C3  3000               	movlw	0
  1875  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  1876  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  1877  05C6  00D5               	movwf	?_log
  1878  05C7  3000               	movlw	0
  1879  05C8  00D6               	movwf	?_log+1
  1880  05C9  3000               	movlw	0
  1881  05CA  00D7               	movwf	?_log+2
  1882  05CB  0008               	return
  1883  05CC                     l2297:	
  1884  05CC  3000               	movlw	0
  1885  05CD  00BE               	movwf	___ftadd@f1
  1886  05CE  3080               	movlw	128
  1887  05CF  00BF               	movwf	___ftadd@f1+1
  1888  05D0  30BF               	movlw	191
  1889  05D1  00C0               	movwf	___ftadd@f1+2
  1890  05D2  3000               	movlw	0
  1891  05D3  00AE               	movwf	___ftmul@f1
  1892  05D4  3000               	movlw	0
  1893  05D5  00AF               	movwf	___ftmul@f1+1
  1894  05D6  3040               	movlw	64
  1895  05D7  00B0               	movwf	___ftmul@f1+2
  1896  05D8  3059               	movlw	(low (log@exponent| 0))& (0+255)
  1897  05D9  00D8               	movwf	??_log
  1898  05DA  0858               	movf	??_log,w
  1899  05DB  00A3               	movwf	frexp@eptr
  1900  05DC  0855               	movf	log@x,w
  1901  05DD  00A0               	movwf	frexp@value
  1902  05DE  0856               	movf	log@x+1,w
  1903  05DF  00A1               	movwf	frexp@value+1
  1904  05E0  0857               	movf	log@x+2,w
  1905  05E1  00A2               	movwf	frexp@value+2
  1906  05E2  120A  158A  24D8  120A  118A  	fcall	_frexp
  1907  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1908  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1909  05E9  0820               	movf	?_frexp,w
  1910  05EA  00B1               	movwf	___ftmul@f2
  1911  05EB  0821               	movf	?_frexp+1,w
  1912  05EC  00B2               	movwf	___ftmul@f2+1
  1913  05ED  0822               	movf	?_frexp+2,w
  1914  05EE  00B3               	movwf	___ftmul@f2+2
  1915  05EF  120A  118A  24BF  120A  118A  	fcall	___ftmul
  1916  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  1917  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  1918  05F6  082E               	movf	?___ftmul,w
  1919  05F7  00C1               	movwf	___ftadd@f2
  1920  05F8  082F               	movf	?___ftmul+1,w
  1921  05F9  00C2               	movwf	___ftadd@f2+1
  1922  05FA  0830               	movf	?___ftmul+2,w
  1923  05FB  00C3               	movwf	___ftadd@f2+2
  1924  05FC  120A  118A  22DA  120A  118A  	fcall	___ftadd
  1925  0601  1283               	bcf	3,5	;RP0=0, select bank0
  1926  0602  1303               	bcf	3,6	;RP1=0, select bank0
  1927  0603  083E               	movf	?___ftadd,w
  1928  0604  00D5               	movwf	log@x
  1929  0605  083F               	movf	?___ftadd+1,w
  1930  0606  00D6               	movwf	log@x+1
  1931  0607  0840               	movf	?___ftadd+2,w
  1932  0608  00D7               	movwf	log@x+2
  1933  0609  30FF               	movlw	255
  1934  060A  07D9               	addwf	log@exponent,f
  1935  060B  1803               	skipnc
  1936  060C  0ADA               	incf	log@exponent+1,f
  1937  060D  30FF               	movlw	255
  1938  060E  07DA               	addwf	log@exponent+1,f
  1939  060F  0855               	movf	log@x,w
  1940  0610  00CB               	movwf	eval_poly@x
  1941  0611  0856               	movf	log@x+1,w
  1942  0612  00CC               	movwf	eval_poly@x+1
  1943  0613  0857               	movf	log@x+2,w
  1944  0614  00CD               	movwf	eval_poly@x+2
  1945  0615  301F               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  1946  0616  00D8               	movwf	??_log
  1947  0617  0858               	movf	??_log,w
  1948  0618  00CE               	movwf	eval_poly@d
  1949  0619  3008               	movlw	8
  1950  061A  00CF               	movwf	eval_poly@n
  1951  061B  3000               	movlw	0
  1952  061C  00D0               	movwf	eval_poly@n+1
  1953  061D  120A  158A  2671  120A  118A  	fcall	_eval_poly
  1954  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1955  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1956  0624  084B               	movf	?_eval_poly,w
  1957  0625  00D5               	movwf	log@x
  1958  0626  084C               	movf	?_eval_poly+1,w
  1959  0627  00D6               	movwf	log@x+1
  1960  0628  084D               	movf	?_eval_poly+2,w
  1961  0629  00D7               	movwf	log@x+2
  1962  062A  0855               	movf	log@x,w
  1963  062B  00BE               	movwf	___ftadd@f1
  1964  062C  0856               	movf	log@x+1,w
  1965  062D  00BF               	movwf	___ftadd@f1+1
  1966  062E  0857               	movf	log@x+2,w
  1967  062F  00C0               	movwf	___ftadd@f1+2
  1968  0630  3072               	movlw	114
  1969  0631  00AE               	movwf	___ftmul@f1
  1970  0632  3031               	movlw	49
  1971  0633  00AF               	movwf	___ftmul@f1+1
  1972  0634  303F               	movlw	63
  1973  0635  00B0               	movwf	___ftmul@f1+2
  1974  0636  085A               	movf	log@exponent+1,w
  1975  0637  00A9               	movwf	___awtoft@c+1
  1976  0638  0859               	movf	log@exponent,w
  1977  0639  00A8               	movwf	___awtoft@c
  1978  063A  120A  158A  2401  120A  118A  	fcall	___awtoft
  1979  063F  1283               	bcf	3,5	;RP0=0, select bank0
  1980  0640  1303               	bcf	3,6	;RP1=0, select bank0
  1981  0641  0828               	movf	?___awtoft,w
  1982  0642  00B1               	movwf	___ftmul@f2
  1983  0643  0829               	movf	?___awtoft+1,w
  1984  0644  00B2               	movwf	___ftmul@f2+1
  1985  0645  082A               	movf	?___awtoft+2,w
  1986  0646  00B3               	movwf	___ftmul@f2+2
  1987  0647  120A  118A  24BF  120A  118A  	fcall	___ftmul
  1988  064C  1283               	bcf	3,5	;RP0=0, select bank0
  1989  064D  1303               	bcf	3,6	;RP1=0, select bank0
  1990  064E  082E               	movf	?___ftmul,w
  1991  064F  00C1               	movwf	___ftadd@f2
  1992  0650  082F               	movf	?___ftmul+1,w
  1993  0651  00C2               	movwf	___ftadd@f2+1
  1994  0652  0830               	movf	?___ftmul+2,w
  1995  0653  00C3               	movwf	___ftadd@f2+2
  1996  0654  120A  118A  22DA   	fcall	___ftadd
  1997  0657  1283               	bcf	3,5	;RP0=0, select bank0
  1998  0658  1303               	bcf	3,6	;RP1=0, select bank0
  1999  0659  083E               	movf	?___ftadd,w
  2000  065A  00D5               	movwf	?_log
  2001  065B  083F               	movf	?___ftadd+1,w
  2002  065C  00D6               	movwf	?_log+1
  2003  065D  0840               	movf	?___ftadd+2,w
  2004  065E  00D7               	movwf	?_log+2
  2005  065F  0008               	return
  2006  0660                     __end_of_log:	
  2007                           
  2008                           	psect	text6
  2009  019B                     __ptext6:	
  2010 ;; *************** function _exp *****************
  2011 ;; Defined at:
  2012 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\exp.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  x               3   60[BANK0 ] int 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  exponent        2   67[BANK0 ] int 
  2017 ;;  sign            1   69[BANK0 ] unsigned char 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  3   60[BANK0 ] unsigned char 
  2020 ;; Registers used:
  2021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2027 ;;      Params:         0       3       0       0       0
  2028 ;;      Locals:         0       6       0       0       0
  2029 ;;      Temps:          0       1       0       0       0
  2030 ;;      Totals:         0      10       0       0       0
  2031 ;;Total ram usage:       10 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; Hardware stack levels required when called:    4
  2034 ;; This function calls:
  2035 ;;		___awtoft
  2036 ;;		___ftdiv
  2037 ;;		___ftge
  2038 ;;		___ftmul
  2039 ;;		___ftneg
  2040 ;;		___ftsub
  2041 ;;		___fttol
  2042 ;;		_eval_poly
  2043 ;;		_floor
  2044 ;;		_ldexp
  2045 ;; This function is called by:
  2046 ;;		_pow
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           
  2051                           ;psect for function _exp
  2052  019B                     _exp:	
  2053                           
  2054                           ;incstack = 0
  2055                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2056  019B  1283               	bcf	3,5	;RP0=0, select bank0
  2057  019C  1303               	bcf	3,6	;RP1=0, select bank0
  2058  019D  085E               	movf	exp@x+2,w
  2059  019E  045D               	iorwf	exp@x+1,w
  2060  019F  045C               	iorwf	exp@x,w
  2061  01A0  1D03               	skipz
  2062  01A1  29A9               	goto	l2313
  2063  01A2  3000               	movlw	0
  2064  01A3  00DC               	movwf	?_exp
  2065  01A4  3080               	movlw	128
  2066  01A5  00DD               	movwf	?_exp+1
  2067  01A6  303F               	movlw	63
  2068  01A7  00DE               	movwf	?_exp+2
  2069  01A8  0008               	return
  2070  01A9                     l2313:	
  2071  01A9  3072               	movlw	114
  2072  01AA  00A0               	movwf	___ftge@ff1
  2073  01AB  3031               	movlw	49
  2074  01AC  00A1               	movwf	___ftge@ff1+1
  2075  01AD  3044               	movlw	68
  2076  01AE  00A2               	movwf	___ftge@ff1+2
  2077  01AF  085C               	movf	exp@x,w
  2078  01B0  00A3               	movwf	___ftge@ff2
  2079  01B1  085D               	movf	exp@x+1,w
  2080  01B2  00A4               	movwf	___ftge@ff2+1
  2081  01B3  085E               	movf	exp@x+2,w
  2082  01B4  00A5               	movwf	___ftge@ff2+2
  2083  01B5  120A  158A  25A4  120A  118A  	fcall	___ftge
  2084  01BA  1803               	btfsc	3,0
  2085  01BB  29CB               	goto	l2319
  2086  01BC  3022               	movlw	34
  2087  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  2088  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  2089  01BF  00B6               	movwf	_errno^(0+128)
  2090  01C0  3000               	movlw	0
  2091  01C1  00B7               	movwf	(_errno^(0+128)+1)
  2092  01C2  30FF               	movlw	255
  2093  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2094  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2095  01C5  00DC               	movwf	?_exp
  2096  01C6  307F               	movlw	127
  2097  01C7  00DD               	movwf	?_exp+1
  2098  01C8  307F               	movlw	127
  2099  01C9  00DE               	movwf	?_exp+2
  2100  01CA  0008               	return
  2101  01CB                     l2319:	
  2102  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  2103  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  2104  01CD  085C               	movf	exp@x,w
  2105  01CE  00A0               	movwf	___ftge@ff1
  2106  01CF  085D               	movf	exp@x+1,w
  2107  01D0  00A1               	movwf	___ftge@ff1+1
  2108  01D1  085E               	movf	exp@x+2,w
  2109  01D2  00A2               	movwf	___ftge@ff1+2
  2110  01D3  3049               	movlw	73
  2111  01D4  00A3               	movwf	___ftge@ff2
  2112  01D5  303A               	movlw	58
  2113  01D6  00A4               	movwf	___ftge@ff2+1
  2114  01D7  30C4               	movlw	196
  2115  01D8  00A5               	movwf	___ftge@ff2+2
  2116  01D9  120A  158A  25A4  120A  118A  	fcall	___ftge
  2117  01DE  1803               	btfsc	3,0
  2118  01DF  29EF               	goto	l2325
  2119  01E0  3022               	movlw	34
  2120  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  2121  01E2  1303               	bcf	3,6	;RP1=0, select bank1
  2122  01E3  00B6               	movwf	_errno^(0+128)
  2123  01E4  3000               	movlw	0
  2124  01E5  00B7               	movwf	(_errno^(0+128)+1)
  2125  01E6  3000               	movlw	0
  2126  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2127  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  2128  01E9  00DC               	movwf	?_exp
  2129  01EA  3000               	movlw	0
  2130  01EB  00DD               	movwf	?_exp+1
  2131  01EC  3000               	movlw	0
  2132  01ED  00DE               	movwf	?_exp+2
  2133  01EE  0008               	return
  2134  01EF                     l2325:	
  2135  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2136  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2137  01F1  085C               	movf	exp@x,w
  2138  01F2  00A0               	movwf	___ftge@ff1
  2139  01F3  085D               	movf	exp@x+1,w
  2140  01F4  00A1               	movwf	___ftge@ff1+1
  2141  01F5  085E               	movf	exp@x+2,w
  2142  01F6  00A2               	movwf	___ftge@ff1+2
  2143  01F7  3000               	movlw	0
  2144  01F8  00A3               	movwf	___ftge@ff2
  2145  01F9  3000               	movlw	0
  2146  01FA  00A4               	movwf	___ftge@ff2+1
  2147  01FB  3000               	movlw	0
  2148  01FC  00A5               	movwf	___ftge@ff2+2
  2149  01FD  120A  158A  25A4  120A  118A  	fcall	___ftge
  2150  0202  1803               	btfsc	3,0
  2151  0203  2A06               	goto	u3490
  2152  0204  3001               	movlw	1
  2153  0205  2A07               	goto	u3500
  2154  0206                     u3490:	
  2155  0206  3000               	movlw	0
  2156  0207                     u3500:	
  2157  0207  1283               	bcf	3,5	;RP0=0, select bank0
  2158  0208  1303               	bcf	3,6	;RP1=0, select bank0
  2159  0209  00DF               	movwf	??_exp
  2160  020A  085F               	movf	??_exp,w
  2161  020B  00E5               	movwf	exp@sign
  2162  020C  0865               	movf	exp@sign,w
  2163  020D  1903               	btfsc	3,2
  2164  020E  2A22               	goto	l2331
  2165  020F  085C               	movf	exp@x,w
  2166  0210  00A0               	movwf	___ftneg@f1
  2167  0211  085D               	movf	exp@x+1,w
  2168  0212  00A1               	movwf	___ftneg@f1+1
  2169  0213  085E               	movf	exp@x+2,w
  2170  0214  00A2               	movwf	___ftneg@f1+2
  2171  0215  120A  158A  2387  120A  118A  	fcall	___ftneg
  2172  021A  1283               	bcf	3,5	;RP0=0, select bank0
  2173  021B  1303               	bcf	3,6	;RP1=0, select bank0
  2174  021C  0820               	movf	?___ftneg,w
  2175  021D  00DC               	movwf	exp@x
  2176  021E  0821               	movf	?___ftneg+1,w
  2177  021F  00DD               	movwf	exp@x+1
  2178  0220  0822               	movf	?___ftneg+2,w
  2179  0221  00DE               	movwf	exp@x+2
  2180  0222                     l2331:	
  2181  0222  30AA               	movlw	170
  2182  0223  00AE               	movwf	___ftmul@f1
  2183  0224  30B8               	movlw	184
  2184  0225  00AF               	movwf	___ftmul@f1+1
  2185  0226  303F               	movlw	63
  2186  0227  00B0               	movwf	___ftmul@f1+2
  2187  0228  085C               	movf	exp@x,w
  2188  0229  00B1               	movwf	___ftmul@f2
  2189  022A  085D               	movf	exp@x+1,w
  2190  022B  00B2               	movwf	___ftmul@f2+1
  2191  022C  085E               	movf	exp@x+2,w
  2192  022D  00B3               	movwf	___ftmul@f2+2
  2193  022E  120A  118A  24BF  120A  118A  	fcall	___ftmul
  2194  0233  1283               	bcf	3,5	;RP0=0, select bank0
  2195  0234  1303               	bcf	3,6	;RP1=0, select bank0
  2196  0235  082E               	movf	?___ftmul,w
  2197  0236  00DC               	movwf	exp@x
  2198  0237  082F               	movf	?___ftmul+1,w
  2199  0238  00DD               	movwf	exp@x+1
  2200  0239  0830               	movf	?___ftmul+2,w
  2201  023A  00DE               	movwf	exp@x+2
  2202  023B  085C               	movf	exp@x,w
  2203  023C  00CB               	movwf	floor@x
  2204  023D  085D               	movf	exp@x+1,w
  2205  023E  00CC               	movwf	floor@x+1
  2206  023F  085E               	movf	exp@x+2,w
  2207  0240  00CD               	movwf	floor@x+2
  2208  0241  120A  118A  2718  120A  118A  	fcall	_floor
  2209  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2210  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2211  0248  084B               	movf	?_floor,w
  2212  0249  00E0               	movwf	_exp$647
  2213  024A  084C               	movf	?_floor+1,w
  2214  024B  00E1               	movwf	_exp$647+1
  2215  024C  084D               	movf	?_floor+2,w
  2216  024D  00E2               	movwf	_exp$647+2
  2217  024E  0860               	movf	_exp$647,w
  2218  024F  00AC               	movwf	___fttol@f1
  2219  0250  0861               	movf	_exp$647+1,w
  2220  0251  00AD               	movwf	___fttol@f1+1
  2221  0252  0862               	movf	_exp$647+2,w
  2222  0253  00AE               	movwf	___fttol@f1+2
  2223  0254  120A  158A  2772  120A  118A  	fcall	___fttol
  2224  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2225  025A  1303               	bcf	3,6	;RP1=0, select bank0
  2226  025B  082D               	movf	?___fttol+1,w
  2227  025C  00E4               	movwf	exp@exponent+1
  2228  025D  082C               	movf	?___fttol,w
  2229  025E  00E3               	movwf	exp@exponent
  2230  025F  0864               	movf	exp@exponent+1,w
  2231  0260  00A9               	movwf	___awtoft@c+1
  2232  0261  0863               	movf	exp@exponent,w
  2233  0262  00A8               	movwf	___awtoft@c
  2234  0263  120A  158A  2401  120A  118A  	fcall	___awtoft
  2235  0268  1283               	bcf	3,5	;RP0=0, select bank0
  2236  0269  1303               	bcf	3,6	;RP1=0, select bank0
  2237  026A  0828               	movf	?___awtoft,w
  2238  026B  00CB               	movwf	___ftsub@f2
  2239  026C  0829               	movf	?___awtoft+1,w
  2240  026D  00CC               	movwf	___ftsub@f2+1
  2241  026E  082A               	movf	?___awtoft+2,w
  2242  026F  00CD               	movwf	___ftsub@f2+2
  2243  0270  085C               	movf	exp@x,w
  2244  0271  00CE               	movwf	___ftsub@f1
  2245  0272  085D               	movf	exp@x+1,w
  2246  0273  00CF               	movwf	___ftsub@f1+1
  2247  0274  085E               	movf	exp@x+2,w
  2248  0275  00D0               	movwf	___ftsub@f1+2
  2249  0276  120A  158A  23BC  120A  118A  	fcall	___ftsub
  2250  027B  1283               	bcf	3,5	;RP0=0, select bank0
  2251  027C  1303               	bcf	3,6	;RP1=0, select bank0
  2252  027D  084B               	movf	?___ftsub,w
  2253  027E  00DC               	movwf	exp@x
  2254  027F  084C               	movf	?___ftsub+1,w
  2255  0280  00DD               	movwf	exp@x+1
  2256  0281  084D               	movf	?___ftsub+2,w
  2257  0282  00DE               	movwf	exp@x+2
  2258  0283  085C               	movf	exp@x,w
  2259  0284  00CB               	movwf	eval_poly@x
  2260  0285  085D               	movf	exp@x+1,w
  2261  0286  00CC               	movwf	eval_poly@x+1
  2262  0287  085E               	movf	exp@x+2,w
  2263  0288  00CD               	movwf	eval_poly@x+2
  2264  0289  3001               	movlw	(low ((exp@coeff-__stringbase)| (0+32768)))& (0+255)
  2265  028A  00DF               	movwf	??_exp
  2266  028B  085F               	movf	??_exp,w
  2267  028C  00CE               	movwf	eval_poly@d
  2268  028D  3009               	movlw	9
  2269  028E  00CF               	movwf	eval_poly@n
  2270  028F  3000               	movlw	0
  2271  0290  00D0               	movwf	eval_poly@n+1
  2272  0291  120A  158A  2671  120A  118A  	fcall	_eval_poly
  2273  0296  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0297  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0298  084B               	movf	?_eval_poly,w
  2276  0299  00D5               	movwf	ldexp@value
  2277  029A  084C               	movf	?_eval_poly+1,w
  2278  029B  00D6               	movwf	ldexp@value+1
  2279  029C  084D               	movf	?_eval_poly+2,w
  2280  029D  00D7               	movwf	ldexp@value+2
  2281  029E  0864               	movf	exp@exponent+1,w
  2282  029F  00D9               	movwf	ldexp@newexp+1
  2283  02A0  0863               	movf	exp@exponent,w
  2284  02A1  00D8               	movwf	ldexp@newexp
  2285  02A2  120A  158A  26EA  120A  118A  	fcall	_ldexp
  2286  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2287  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  2288  02A9  0855               	movf	?_ldexp,w
  2289  02AA  00DC               	movwf	exp@x
  2290  02AB  0856               	movf	?_ldexp+1,w
  2291  02AC  00DD               	movwf	exp@x+1
  2292  02AD  0857               	movf	?_ldexp+2,w
  2293  02AE  00DE               	movwf	exp@x+2
  2294  02AF  0865               	movf	exp@sign,w
  2295  02B0  1903               	btfsc	3,2
  2296  02B1  0008               	return
  2297  02B2  0A5C               	incf	exp@x,w
  2298  02B3  307F               	movlw	127
  2299  02B4  1903               	skipnz
  2300  02B5  065D               	xorwf	exp@x+1,w
  2301  02B6  307F               	movlw	127
  2302  02B7  1903               	skipnz
  2303  02B8  065E               	xorwf	exp@x+2,w
  2304  02B9  1D03               	btfss	3,2
  2305  02BA  2AC2               	goto	l2349
  2306  02BB  3000               	movlw	0
  2307  02BC  00DC               	movwf	?_exp
  2308  02BD  3000               	movlw	0
  2309  02BE  00DD               	movwf	?_exp+1
  2310  02BF  3000               	movlw	0
  2311  02C0  00DE               	movwf	?_exp+2
  2312  02C1  0008               	return
  2313  02C2                     l2349:	
  2314  02C2  085C               	movf	exp@x,w
  2315  02C3  00A8               	movwf	___ftdiv@f2
  2316  02C4  085D               	movf	exp@x+1,w
  2317  02C5  00A9               	movwf	___ftdiv@f2+1
  2318  02C6  085E               	movf	exp@x+2,w
  2319  02C7  00AA               	movwf	___ftdiv@f2+2
  2320  02C8  3000               	movlw	0
  2321  02C9  00AB               	movwf	___ftdiv@f1
  2322  02CA  3080               	movlw	128
  2323  02CB  00AC               	movwf	___ftdiv@f1+1
  2324  02CC  303F               	movlw	63
  2325  02CD  00AD               	movwf	___ftdiv@f1+2
  2326  02CE  120A  118A  2660   	fcall	___ftdiv
  2327  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  2328  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  2329  02D3  0828               	movf	?___ftdiv,w
  2330  02D4  00DC               	movwf	?_exp
  2331  02D5  0829               	movf	?___ftdiv+1,w
  2332  02D6  00DD               	movwf	?_exp+1
  2333  02D7  082A               	movf	?___ftdiv+2,w
  2334  02D8  00DE               	movwf	?_exp+2
  2335  02D9  0008               	return
  2336  02DA                     __end_of_exp:	
  2337                           
  2338                           	psect	text7
  2339  0EEA                     __ptext7:	
  2340 ;; *************** function _ldexp *****************
  2341 ;; Defined at:
  2342 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  value           3   53[BANK0 ] unsigned char 
  2345 ;;  newexp          2   56[BANK0 ] int 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  3   53[BANK0 ] int 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2357 ;;      Params:         0       5       0       0       0
  2358 ;;      Locals:         0       0       0       0       0
  2359 ;;      Temps:          0       2       0       0       0
  2360 ;;      Totals:         0       7       0       0       0
  2361 ;;Total ram usage:        7 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    2
  2364 ;; This function calls:
  2365 ;;		___ftge
  2366 ;; This function is called by:
  2367 ;;		_exp
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           
  2372                           ;psect for function _ldexp
  2373  0EEA                     _ldexp:	
  2374                           
  2375                           ;incstack = 0
  2376                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2377  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  2378  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  2379  0EEC  0857               	movf	ldexp@value+2,w
  2380  0EED  0456               	iorwf	ldexp@value+1,w
  2381  0EEE  0455               	iorwf	ldexp@value,w
  2382  0EEF  1D03               	skipz
  2383  0EF0  2EF8               	goto	l1675
  2384  0EF1  3000               	movlw	0
  2385  0EF2  00D5               	movwf	?_ldexp
  2386  0EF3  3000               	movlw	0
  2387  0EF4  00D6               	movwf	?_ldexp+1
  2388  0EF5  3000               	movlw	0
  2389  0EF6  00D7               	movwf	?_ldexp+2
  2390  0EF7  0008               	return
  2391  0EF8                     l1675:	
  2392  0EF8  0857               	movf	ldexp@value+2,w
  2393  0EF9  397F               	andlw	127
  2394  0EFA  00DA               	movwf	??_ldexp
  2395  0EFB  01DB               	clrf	??_ldexp+1
  2396  0EFC  1003               	clrc
  2397  0EFD  0DDA               	rlf	??_ldexp,f
  2398  0EFE  0DDB               	rlf	??_ldexp+1,f
  2399  0EFF  085A               	movf	??_ldexp,w
  2400  0F00  07D8               	addwf	ldexp@newexp,f
  2401  0F01  1803               	skipnc
  2402  0F02  0AD9               	incf	ldexp@newexp+1,f
  2403  0F03  085B               	movf	??_ldexp+1,w
  2404  0F04  07D9               	addwf	ldexp@newexp+1,f
  2405  0F05  0D56               	rlf	ldexp@value+1,w
  2406  0F06  0D56               	rlf	ldexp@value+1,w
  2407  0F07  3901               	andlw	1
  2408  0F08  00DA               	movwf	??_ldexp
  2409  0F09  01DB               	clrf	??_ldexp+1
  2410  0F0A  085A               	movf	??_ldexp,w
  2411  0F0B  07D8               	addwf	ldexp@newexp,f
  2412  0F0C  1803               	skipnc
  2413  0F0D  0AD9               	incf	ldexp@newexp+1,f
  2414  0F0E  085B               	movf	??_ldexp+1,w
  2415  0F0F  07D9               	addwf	ldexp@newexp+1,f
  2416  0F10  1FD9               	btfss	ldexp@newexp+1,7
  2417  0F11  2F21               	goto	l1685
  2418  0F12  3022               	movlw	34
  2419  0F13  1683               	bsf	3,5	;RP0=1, select bank1
  2420  0F14  1303               	bcf	3,6	;RP1=0, select bank1
  2421  0F15  00B6               	movwf	_errno^(0+128)
  2422  0F16  3000               	movlw	0
  2423  0F17  00B7               	movwf	(_errno^(0+128)+1)
  2424  0F18  3000               	movlw	0
  2425  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0F1B  00D5               	movwf	?_ldexp
  2428  0F1C  3000               	movlw	0
  2429  0F1D  00D6               	movwf	?_ldexp+1
  2430  0F1E  3000               	movlw	0
  2431  0F1F  00D7               	movwf	?_ldexp+2
  2432  0F20  0008               	return
  2433  0F21                     l1685:	
  2434  0F21  0859               	movf	ldexp@newexp+1,w
  2435  0F22  3A80               	xorlw	128
  2436  0F23  00FF               	movwf	127
  2437  0F24  3081               	movlw	129
  2438  0F25  027F               	subwf	127,w
  2439  0F26  1D03               	skipz
  2440  0F27  2F2A               	goto	u2225
  2441  0F28  3000               	movlw	0
  2442  0F29  0258               	subwf	ldexp@newexp,w
  2443  0F2A                     u2225:	
  2444  0F2A  1C03               	skipc
  2445  0F2B  2F59               	goto	l1701
  2446  0F2C  3022               	movlw	34
  2447  0F2D  1683               	bsf	3,5	;RP0=1, select bank1
  2448  0F2E  1303               	bcf	3,6	;RP1=0, select bank1
  2449  0F2F  00B6               	movwf	_errno^(0+128)
  2450  0F30  3000               	movlw	0
  2451  0F31  00B7               	movwf	(_errno^(0+128)+1)
  2452  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  2453  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  2454  0F34  0855               	movf	ldexp@value,w
  2455  0F35  00A0               	movwf	___ftge@ff1
  2456  0F36  0856               	movf	ldexp@value+1,w
  2457  0F37  00A1               	movwf	___ftge@ff1+1
  2458  0F38  0857               	movf	ldexp@value+2,w
  2459  0F39  00A2               	movwf	___ftge@ff1+2
  2460  0F3A  3000               	movlw	0
  2461  0F3B  00A3               	movwf	___ftge@ff2
  2462  0F3C  3000               	movlw	0
  2463  0F3D  00A4               	movwf	___ftge@ff2+1
  2464  0F3E  3000               	movlw	0
  2465  0F3F  00A5               	movwf	___ftge@ff2+2
  2466  0F40  120A  158A  25A4  120A  158A  	fcall	___ftge
  2467  0F45  1803               	btfsc	3,0
  2468  0F46  2F50               	goto	l1697
  2469  0F47  30FF               	movlw	255
  2470  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0F4A  00D5               	movwf	?_ldexp
  2473  0F4B  307F               	movlw	127
  2474  0F4C  00D6               	movwf	?_ldexp+1
  2475  0F4D  30FF               	movlw	255
  2476  0F4E  00D7               	movwf	?_ldexp+2
  2477  0F4F  0008               	return
  2478  0F50                     l1697:	
  2479  0F50  30FF               	movlw	255
  2480  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  2481  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  2482  0F53  00D5               	movwf	?_ldexp
  2483  0F54  307F               	movlw	127
  2484  0F55  00D6               	movwf	?_ldexp+1
  2485  0F56  307F               	movlw	127
  2486  0F57  00D7               	movwf	?_ldexp+2
  2487  0F58  0008               	return
  2488  0F59                     l1701:	
  2489  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  2490  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2491  0F5B  0859               	movf	ldexp@newexp+1,w
  2492  0F5C  00DB               	movwf	??_ldexp+1
  2493  0F5D  0858               	movf	ldexp@newexp,w
  2494  0F5E  00DA               	movwf	??_ldexp
  2495  0F5F  0D5B               	rlf	??_ldexp+1,w
  2496  0F60  0CDB               	rrf	??_ldexp+1,f
  2497  0F61  0CDA               	rrf	??_ldexp,f
  2498  0F62  0857               	movf	ldexp@value+2,w
  2499  0F63  065A               	xorwf	??_ldexp,w
  2500  0F64  3980               	andlw	-128
  2501  0F65  065A               	xorwf	??_ldexp,w
  2502  0F66  00D7               	movwf	ldexp@value+2
  2503  0F67  0858               	movf	ldexp@newexp,w
  2504  0F68  3901               	andlw	1
  2505  0F69  00DA               	movwf	??_ldexp
  2506  0F6A  0CDA               	rrf	??_ldexp,f
  2507  0F6B  0CDA               	rrf	??_ldexp,f
  2508  0F6C  0856               	movf	ldexp@value+1,w
  2509  0F6D  065A               	xorwf	??_ldexp,w
  2510  0F6E  397F               	andlw	-129
  2511  0F6F  065A               	xorwf	??_ldexp,w
  2512  0F70  00D6               	movwf	ldexp@value+1
  2513  0F71  0008               	return
  2514  0F72                     __end_of_ldexp:	
  2515                           
  2516                           	psect	text8
  2517  0718                     __ptext8:	
  2518 ;; *************** function _floor *****************
  2519 ;; Defined at:
  2520 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\floor.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  x               3   43[BANK0 ] int 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  i               3   47[BANK0 ] int 
  2525 ;;  expon           2   50[BANK0 ] int 
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  3   43[BANK0 ] int 
  2528 ;; Registers used:
  2529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2535 ;;      Params:         0       3       0       0       0
  2536 ;;      Locals:         0       5       0       0       0
  2537 ;;      Temps:          0       1       0       0       0
  2538 ;;      Totals:         0       9       0       0       0
  2539 ;;Total ram usage:        9 bytes
  2540 ;; Hardware stack levels used:    1
  2541 ;; Hardware stack levels required when called:    3
  2542 ;; This function calls:
  2543 ;;		___altoft
  2544 ;;		___ftadd
  2545 ;;		___ftge
  2546 ;;		___fttol
  2547 ;;		_frexp
  2548 ;; This function is called by:
  2549 ;;		_exp
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           
  2554                           ;psect for function _floor
  2555  0718                     _floor:	
  2556                           
  2557                           ;incstack = 0
  2558                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2559  0718  1283               	bcf	3,5	;RP0=0, select bank0
  2560  0719  1303               	bcf	3,6	;RP1=0, select bank0
  2561  071A  084B               	movf	floor@x,w
  2562  071B  00A0               	movwf	frexp@value
  2563  071C  084C               	movf	floor@x+1,w
  2564  071D  00A1               	movwf	frexp@value+1
  2565  071E  084D               	movf	floor@x+2,w
  2566  071F  00A2               	movwf	frexp@value+2
  2567  0720  3052               	movlw	(low (floor@expon| 0))& (0+255)
  2568  0721  00CE               	movwf	??_floor
  2569  0722  084E               	movf	??_floor,w
  2570  0723  00A3               	movwf	frexp@eptr
  2571  0724  120A  158A  24D8  120A  118A  	fcall	_frexp
  2572  0729  1283               	bcf	3,5	;RP0=0, select bank0
  2573  072A  1303               	bcf	3,6	;RP1=0, select bank0
  2574  072B  1FD3               	btfss	floor@expon+1,7
  2575  072C  2F52               	goto	l2237
  2576  072D  084B               	movf	floor@x,w
  2577  072E  00A0               	movwf	___ftge@ff1
  2578  072F  084C               	movf	floor@x+1,w
  2579  0730  00A1               	movwf	___ftge@ff1+1
  2580  0731  084D               	movf	floor@x+2,w
  2581  0732  00A2               	movwf	___ftge@ff1+2
  2582  0733  3000               	movlw	0
  2583  0734  00A3               	movwf	___ftge@ff2
  2584  0735  3000               	movlw	0
  2585  0736  00A4               	movwf	___ftge@ff2+1
  2586  0737  3000               	movlw	0
  2587  0738  00A5               	movwf	___ftge@ff2+2
  2588  0739  120A  158A  25A4  120A  118A  	fcall	___ftge
  2589  073E  1803               	btfsc	3,0
  2590  073F  2F49               	goto	l2233
  2591  0740  3000               	movlw	0
  2592  0741  1283               	bcf	3,5	;RP0=0, select bank0
  2593  0742  1303               	bcf	3,6	;RP1=0, select bank0
  2594  0743  00CB               	movwf	?_floor
  2595  0744  3080               	movlw	128
  2596  0745  00CC               	movwf	?_floor+1
  2597  0746  30BF               	movlw	191
  2598  0747  00CD               	movwf	?_floor+2
  2599  0748  0008               	return
  2600  0749                     l2233:	
  2601  0749  3000               	movlw	0
  2602  074A  1283               	bcf	3,5	;RP0=0, select bank0
  2603  074B  1303               	bcf	3,6	;RP1=0, select bank0
  2604  074C  00CB               	movwf	?_floor
  2605  074D  3000               	movlw	0
  2606  074E  00CC               	movwf	?_floor+1
  2607  074F  3000               	movlw	0
  2608  0750  00CD               	movwf	?_floor+2
  2609  0751  0008               	return
  2610  0752                     l2237:	
  2611  0752  3000               	movlw	0
  2612  0753  0253               	subwf	floor@expon+1,w
  2613  0754  3015               	movlw	21
  2614  0755  1903               	skipnz
  2615  0756  0252               	subwf	floor@expon,w
  2616  0757  1803               	btfsc	3,0
  2617  0758  0008               	return
  2618  0759  084B               	movf	floor@x,w
  2619  075A  00AC               	movwf	___fttol@f1
  2620  075B  084C               	movf	floor@x+1,w
  2621  075C  00AD               	movwf	___fttol@f1+1
  2622  075D  084D               	movf	floor@x+2,w
  2623  075E  00AE               	movwf	___fttol@f1+2
  2624  075F  120A  158A  2772  120A  118A  	fcall	___fttol
  2625  0764  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0765  1303               	bcf	3,6	;RP1=0, select bank0
  2627  0766  082F               	movf	?___fttol+3,w
  2628  0767  00BD               	movwf	___altoft@c+3
  2629  0768  082E               	movf	?___fttol+2,w
  2630  0769  00BC               	movwf	___altoft@c+2
  2631  076A  082D               	movf	?___fttol+1,w
  2632  076B  00BB               	movwf	___altoft@c+1
  2633  076C  082C               	movf	?___fttol,w
  2634  076D  00BA               	movwf	___altoft@c
  2635  076E  120A  158A  2496  120A  118A  	fcall	___altoft
  2636  0773  1283               	bcf	3,5	;RP0=0, select bank0
  2637  0774  1303               	bcf	3,6	;RP1=0, select bank0
  2638  0775  083A               	movf	?___altoft,w
  2639  0776  00CF               	movwf	floor@i
  2640  0777  083B               	movf	?___altoft+1,w
  2641  0778  00D0               	movwf	floor@i+1
  2642  0779  083C               	movf	?___altoft+2,w
  2643  077A  00D1               	movwf	floor@i+2
  2644  077B  084B               	movf	floor@x,w
  2645  077C  00A0               	movwf	___ftge@ff1
  2646  077D  084C               	movf	floor@x+1,w
  2647  077E  00A1               	movwf	___ftge@ff1+1
  2648  077F  084D               	movf	floor@x+2,w
  2649  0780  00A2               	movwf	___ftge@ff1+2
  2650  0781  084F               	movf	floor@i,w
  2651  0782  00A3               	movwf	___ftge@ff2
  2652  0783  0850               	movf	floor@i+1,w
  2653  0784  00A4               	movwf	___ftge@ff2+1
  2654  0785  0851               	movf	floor@i+2,w
  2655  0786  00A5               	movwf	___ftge@ff2+2
  2656  0787  120A  158A  25A4  120A  118A  	fcall	___ftge
  2657  078C  1803               	btfsc	3,0
  2658  078D  2FA8               	goto	l2247
  2659  078E  3000               	movlw	0
  2660  078F  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0790  1303               	bcf	3,6	;RP1=0, select bank0
  2662  0791  00BE               	movwf	___ftadd@f1
  2663  0792  3080               	movlw	128
  2664  0793  00BF               	movwf	___ftadd@f1+1
  2665  0794  30BF               	movlw	191
  2666  0795  00C0               	movwf	___ftadd@f1+2
  2667  0796  084F               	movf	floor@i,w
  2668  0797  00C1               	movwf	___ftadd@f2
  2669  0798  0850               	movf	floor@i+1,w
  2670  0799  00C2               	movwf	___ftadd@f2+1
  2671  079A  0851               	movf	floor@i+2,w
  2672  079B  00C3               	movwf	___ftadd@f2+2
  2673  079C  120A  118A  22DA   	fcall	___ftadd
  2674  079F  1283               	bcf	3,5	;RP0=0, select bank0
  2675  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  2676  07A1  083E               	movf	?___ftadd,w
  2677  07A2  00CB               	movwf	?_floor
  2678  07A3  083F               	movf	?___ftadd+1,w
  2679  07A4  00CC               	movwf	?_floor+1
  2680  07A5  0840               	movf	?___ftadd+2,w
  2681  07A6  00CD               	movwf	?_floor+2
  2682  07A7  0008               	return
  2683  07A8                     l2247:	
  2684  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  2685  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  2686  07AA  084F               	movf	floor@i,w
  2687  07AB  00CB               	movwf	?_floor
  2688  07AC  0850               	movf	floor@i+1,w
  2689  07AD  00CC               	movwf	?_floor+1
  2690  07AE  0851               	movf	floor@i+2,w
  2691  07AF  00CD               	movwf	?_floor+2
  2692  07B0  0008               	return
  2693  07B1                     __end_of_floor:	
  2694                           
  2695                           	psect	text9
  2696  0CD8                     __ptext9:	
  2697 ;; *************** function _frexp *****************
  2698 ;; Defined at:
  2699 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  value           3    0[BANK0 ] int 
  2702 ;;  eptr            1    3[BANK0 ] PTR int 
  2703 ;;		 -> log@exponent(2), floor@expon(2), 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  3    0[BANK0 ] PTR int 
  2708 ;; Registers used:
  2709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2715 ;;      Params:         0       4       0       0       0
  2716 ;;      Locals:         0       0       0       0       0
  2717 ;;      Temps:          0       2       0       0       0
  2718 ;;      Totals:         0       6       0       0       0
  2719 ;;Total ram usage:        6 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; Hardware stack levels required when called:    1
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_floor
  2726 ;;		_log
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           
  2731                           ;psect for function _frexp
  2732  0CD8                     _frexp:	
  2733                           
  2734                           ;incstack = 0
  2735                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  2736  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  2737  0CD9  1303               	bcf	3,6	;RP1=0, select bank0
  2738  0CDA  0822               	movf	frexp@value+2,w
  2739  0CDB  0421               	iorwf	frexp@value+1,w
  2740  0CDC  0420               	iorwf	frexp@value,w
  2741  0CDD  1D03               	skipz
  2742  0CDE  2CEC               	goto	l2141
  2743  0CDF  0823               	movf	frexp@eptr,w
  2744  0CE0  0084               	movwf	4
  2745  0CE1  1383               	bcf	3,7	;select IRP bank0
  2746  0CE2  0180               	clrf	0
  2747  0CE3  0A84               	incf	4,f
  2748  0CE4  0180               	clrf	0
  2749  0CE5  3000               	movlw	0
  2750  0CE6  00A0               	movwf	?_frexp
  2751  0CE7  3000               	movlw	0
  2752  0CE8  00A1               	movwf	?_frexp+1
  2753  0CE9  3000               	movlw	0
  2754  0CEA  00A2               	movwf	?_frexp+2
  2755  0CEB  0008               	return
  2756  0CEC                     l2141:	
  2757  0CEC  0822               	movf	frexp@value+2,w
  2758  0CED  397F               	andlw	127
  2759  0CEE  00A4               	movwf	??_frexp
  2760  0CEF  01A5               	clrf	??_frexp+1
  2761  0CF0  1003               	clrc
  2762  0CF1  0DA4               	rlf	??_frexp,f
  2763  0CF2  0DA5               	rlf	??_frexp+1,f
  2764  0CF3  0823               	movf	frexp@eptr,w
  2765  0CF4  0084               	movwf	4
  2766  0CF5  0824               	movf	??_frexp,w
  2767  0CF6  1383               	bcf	3,7	;select IRP bank0
  2768  0CF7  0080               	movwf	0
  2769  0CF8  0A84               	incf	4,f
  2770  0CF9  0825               	movf	??_frexp+1,w
  2771  0CFA  0080               	movwf	0
  2772  0CFB  0D21               	rlf	frexp@value+1,w
  2773  0CFC  0D21               	rlf	frexp@value+1,w
  2774  0CFD  3901               	andlw	1
  2775  0CFE  00A4               	movwf	??_frexp
  2776  0CFF  01A5               	clrf	??_frexp+1
  2777  0D00  0823               	movf	frexp@eptr,w
  2778  0D01  0084               	movwf	4
  2779  0D02  0824               	movf	??_frexp,w
  2780  0D03  0480               	iorwf	0,f
  2781  0D04  0A84               	incf	4,f
  2782  0D05  0825               	movf	??_frexp+1,w
  2783  0D06  0480               	iorwf	0,f
  2784  0D07  0823               	movf	frexp@eptr,w
  2785  0D08  0084               	movwf	4
  2786  0D09  3082               	movlw	130
  2787  0D0A  0780               	addwf	0,f
  2788  0D0B  0F84               	incfsz	4,f
  2789  0D0C  0800               	movf	0,w
  2790  0D0D  1803               	skipnc
  2791  0D0E  0A00               	incf	0,w
  2792  0D0F  00FF               	movwf	127
  2793  0D10  30FF               	movlw	255
  2794  0D11  077F               	addwf	127,w
  2795  0D12  0080               	movwf	0
  2796  0D13  0384               	decf	4,f
  2797  0D14  0822               	movf	frexp@value+2,w
  2798  0D15  3980               	andlw	-128
  2799  0D16  383F               	iorlw	63
  2800  0D17  00A2               	movwf	frexp@value+2
  2801  0D18  13A1               	bcf	frexp@value+1,7
  2802  0D19  0008               	return
  2803  0D1A                     __end_of_frexp:	
  2804                           
  2805                           	psect	text10
  2806  0F72                     __ptext10:	
  2807 ;; *************** function ___fttol *****************
  2808 ;; Defined at:
  2809 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  f1              3   12[BANK0 ] float 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  lval            4   21[BANK0 ] unsigned long 
  2814 ;;  exp1            1   25[BANK0 ] unsigned char 
  2815 ;;  sign1           1   20[BANK0 ] unsigned char 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  4   12[BANK0 ] long 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2825 ;;      Params:         0       4       0       0       0
  2826 ;;      Locals:         0       6       0       0       0
  2827 ;;      Temps:          0       4       0       0       0
  2828 ;;      Totals:         0      14       0       0       0
  2829 ;;Total ram usage:       14 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    1
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_main
  2836 ;;		_pow
  2837 ;;		_exp
  2838 ;;		_floor
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function ___fttol
  2844  0F72                     ___fttol:	
  2845                           
  2846                           ;incstack = 0
  2847                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2848  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  2849  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  2850  0F74  082C               	movf	___fttol@f1,w
  2851  0F75  00B0               	movwf	??___fttol
  2852  0F76  082D               	movf	___fttol@f1+1,w
  2853  0F77  00B1               	movwf	??___fttol+1
  2854  0F78  082E               	movf	___fttol@f1+2,w
  2855  0F79  00B2               	movwf	??___fttol+2
  2856  0F7A  1003               	clrc
  2857  0F7B  0D31               	rlf	??___fttol+1,w
  2858  0F7C  0D32               	rlf	??___fttol+2,w
  2859  0F7D  00B3               	movwf	??___fttol+3
  2860  0F7E  0833               	movf	??___fttol+3,w
  2861  0F7F  00B9               	movwf	___fttol@exp1
  2862  0F80  0839               	movf	___fttol@exp1,w
  2863  0F81  1D03               	btfss	3,2
  2864  0F82  2F8C               	goto	l1505
  2865  0F83  3000               	movlw	0
  2866  0F84  00AF               	movwf	?___fttol+3
  2867  0F85  3000               	movlw	0
  2868  0F86  00AE               	movwf	?___fttol+2
  2869  0F87  3000               	movlw	0
  2870  0F88  00AD               	movwf	?___fttol+1
  2871  0F89  3000               	movlw	0
  2872  0F8A  00AC               	movwf	?___fttol
  2873  0F8B  0008               	return
  2874  0F8C                     l1505:	
  2875  0F8C  082C               	movf	___fttol@f1,w
  2876  0F8D  00B0               	movwf	??___fttol
  2877  0F8E  082D               	movf	___fttol@f1+1,w
  2878  0F8F  00B1               	movwf	??___fttol+1
  2879  0F90  082E               	movf	___fttol@f1+2,w
  2880  0F91  00B2               	movwf	??___fttol+2
  2881  0F92  3017               	movlw	23
  2882  0F93                     u1945:	
  2883  0F93  1003               	clrc
  2884  0F94  0CB2               	rrf	??___fttol+2,f
  2885  0F95  0CB1               	rrf	??___fttol+1,f
  2886  0F96  0CB0               	rrf	??___fttol,f
  2887  0F97  3EFF               	addlw	-1
  2888  0F98  1D03               	skipz
  2889  0F99  2F93               	goto	u1945
  2890  0F9A  0830               	movf	??___fttol,w
  2891  0F9B  00B3               	movwf	??___fttol+3
  2892  0F9C  0833               	movf	??___fttol+3,w
  2893  0F9D  00B4               	movwf	___fttol@sign1
  2894  0F9E  17AD               	bsf	___fttol@f1+1,7
  2895  0F9F  30FF               	movlw	255
  2896  0FA0  05AC               	andwf	___fttol@f1,f
  2897  0FA1  30FF               	movlw	255
  2898  0FA2  05AD               	andwf	___fttol@f1+1,f
  2899  0FA3  3000               	movlw	0
  2900  0FA4  05AE               	andwf	___fttol@f1+2,f
  2901  0FA5  082C               	movf	___fttol@f1,w
  2902  0FA6  00B5               	movwf	___fttol@lval
  2903  0FA7  082D               	movf	___fttol@f1+1,w
  2904  0FA8  00B6               	movwf	___fttol@lval+1
  2905  0FA9  082E               	movf	___fttol@f1+2,w
  2906  0FAA  00B7               	movwf	___fttol@lval+2
  2907  0FAB  01B8               	clrf	___fttol@lval+3
  2908  0FAC  308E               	movlw	142
  2909  0FAD  02B9               	subwf	___fttol@exp1,f
  2910  0FAE  1FB9               	btfss	___fttol@exp1,7
  2911  0FAF  2FCE               	goto	l1525
  2912  0FB0  0839               	movf	___fttol@exp1,w
  2913  0FB1  3A80               	xorlw	128
  2914  0FB2  3E8F               	addlw	143
  2915  0FB3  1803               	skipnc
  2916  0FB4  2FBE               	goto	l1523
  2917  0FB5  3000               	movlw	0
  2918  0FB6  00AF               	movwf	?___fttol+3
  2919  0FB7  3000               	movlw	0
  2920  0FB8  00AE               	movwf	?___fttol+2
  2921  0FB9  3000               	movlw	0
  2922  0FBA  00AD               	movwf	?___fttol+1
  2923  0FBB  3000               	movlw	0
  2924  0FBC  00AC               	movwf	?___fttol
  2925  0FBD  0008               	return
  2926  0FBE                     l1523:	
  2927  0FBE  3001               	movlw	1
  2928  0FBF                     u1975:	
  2929  0FBF  1003               	clrc
  2930  0FC0  0CB8               	rrf	___fttol@lval+3,f
  2931  0FC1  0CB7               	rrf	___fttol@lval+2,f
  2932  0FC2  0CB6               	rrf	___fttol@lval+1,f
  2933  0FC3  0CB5               	rrf	___fttol@lval,f
  2934  0FC4  3EFF               	addlw	-1
  2935  0FC5  1D03               	skipz
  2936  0FC6  2FBF               	goto	u1975
  2937  0FC7  3001               	movlw	1
  2938  0FC8  00B0               	movwf	??___fttol
  2939  0FC9  0830               	movf	??___fttol,w
  2940  0FCA  07B9               	addwf	___fttol@exp1,f
  2941  0FCB  1903               	btfsc	3,2
  2942  0FCC  2FE9               	goto	l1533
  2943  0FCD  2FBE               	goto	l1523
  2944  0FCE                     l1525:	
  2945  0FCE  3018               	movlw	24
  2946  0FCF  0239               	subwf	___fttol@exp1,w
  2947  0FD0  1C03               	skipc
  2948  0FD1  2FE6               	goto	l398
  2949  0FD2  3000               	movlw	0
  2950  0FD3  00AF               	movwf	?___fttol+3
  2951  0FD4  3000               	movlw	0
  2952  0FD5  00AE               	movwf	?___fttol+2
  2953  0FD6  3000               	movlw	0
  2954  0FD7  00AD               	movwf	?___fttol+1
  2955  0FD8  3000               	movlw	0
  2956  0FD9  00AC               	movwf	?___fttol
  2957  0FDA  0008               	return
  2958  0FDB                     l1531:	
  2959  0FDB  3001               	movlw	1
  2960  0FDC  00B0               	movwf	??___fttol
  2961  0FDD                     u2005:	
  2962  0FDD  1003               	clrc
  2963  0FDE  0DB5               	rlf	___fttol@lval,f
  2964  0FDF  0DB6               	rlf	___fttol@lval+1,f
  2965  0FE0  0DB7               	rlf	___fttol@lval+2,f
  2966  0FE1  0DB8               	rlf	___fttol@lval+3,f
  2967  0FE2  0BB0               	decfsz	??___fttol,f
  2968  0FE3  2FDD               	goto	u2005
  2969  0FE4  3001               	movlw	1
  2970  0FE5  02B9               	subwf	___fttol@exp1,f
  2971  0FE6                     l398:	
  2972  0FE6  0839               	movf	___fttol@exp1,w
  2973  0FE7  1D03               	btfss	3,2
  2974  0FE8  2FDB               	goto	l1531
  2975  0FE9                     l1533:	
  2976  0FE9  0834               	movf	___fttol@sign1,w
  2977  0FEA  1903               	btfsc	3,2
  2978  0FEB  2FF7               	goto	l1537
  2979  0FEC  09B5               	comf	___fttol@lval,f
  2980  0FED  09B6               	comf	___fttol@lval+1,f
  2981  0FEE  09B7               	comf	___fttol@lval+2,f
  2982  0FEF  09B8               	comf	___fttol@lval+3,f
  2983  0FF0  0AB5               	incf	___fttol@lval,f
  2984  0FF1  1903               	skipnz
  2985  0FF2  0AB6               	incf	___fttol@lval+1,f
  2986  0FF3  1903               	skipnz
  2987  0FF4  0AB7               	incf	___fttol@lval+2,f
  2988  0FF5  1903               	skipnz
  2989  0FF6  0AB8               	incf	___fttol@lval+3,f
  2990  0FF7                     l1537:	
  2991  0FF7  0838               	movf	___fttol@lval+3,w
  2992  0FF8  00AF               	movwf	?___fttol+3
  2993  0FF9  0837               	movf	___fttol@lval+2,w
  2994  0FFA  00AE               	movwf	?___fttol+2
  2995  0FFB  0836               	movf	___fttol@lval+1,w
  2996  0FFC  00AD               	movwf	?___fttol+1
  2997  0FFD  0835               	movf	___fttol@lval,w
  2998  0FFE  00AC               	movwf	?___fttol
  2999  0FFF  0008               	return
  3000  1000                     __end_of___fttol:	
  3001                           
  3002                           	psect	text11
  3003  0DA4                     __ptext11:	
  3004 ;; *************** function ___ftge *****************
  3005 ;; Defined at:
  3006 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  ff1             3    0[BANK0 ] float 
  3009 ;;  ff2             3    3[BANK0 ] float 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;		None
  3012 ;; Return value:  Size  Location     Type
  3013 ;;		None               void
  3014 ;; Registers used:
  3015 ;;		wreg, status,2, status,0
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3021 ;;      Params:         0       6       0       0       0
  3022 ;;      Locals:         0       0       0       0       0
  3023 ;;      Temps:          0       6       0       0       0
  3024 ;;      Totals:         0      12       0       0       0
  3025 ;;Total ram usage:       12 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:    1
  3028 ;; This function calls:
  3029 ;;		Nothing
  3030 ;; This function is called by:
  3031 ;;		_pow
  3032 ;;		_exp
  3033 ;;		_floor
  3034 ;;		_ldexp
  3035 ;;		_log
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           
  3040                           ;psect for function ___ftge
  3041  0DA4                     ___ftge:	
  3042                           
  3043                           ;incstack = 0
  3044                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3045  0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  3046  0DA5  1303               	bcf	3,6	;RP1=0, select bank0
  3047  0DA6  1FA2               	btfss	___ftge@ff1+2,7
  3048  0DA7  2DCD               	goto	l1433
  3049  0DA8  3000               	movlw	0
  3050  0DA9  00A6               	movwf	??___ftge
  3051  0DAA  3000               	movlw	0
  3052  0DAB  00A7               	movwf	??___ftge+1
  3053  0DAC  3080               	movlw	128
  3054  0DAD  00A8               	movwf	??___ftge+2
  3055  0DAE  0920               	comf	___ftge@ff1,w
  3056  0DAF  00A9               	movwf	??___ftge+3
  3057  0DB0  0921               	comf	___ftge@ff1+1,w
  3058  0DB1  00AA               	movwf	??___ftge+4
  3059  0DB2  0922               	comf	___ftge@ff1+2,w
  3060  0DB3  00AB               	movwf	??___ftge+5
  3061  0DB4  0AA9               	incf	??___ftge+3,f
  3062  0DB5  1903               	skipnz
  3063  0DB6  0AAA               	incf	??___ftge+4,f
  3064  0DB7  1903               	skipnz
  3065  0DB8  0AAB               	incf	??___ftge+5,f
  3066  0DB9  0829               	movf	??___ftge+3,w
  3067  0DBA  07A6               	addwf	??___ftge,f
  3068  0DBB  082A               	movf	??___ftge+4,w
  3069  0DBC  1803               	skipnc
  3070  0DBD  0F2A               	incfsz	??___ftge+4,w
  3071  0DBE  2DC0               	goto	u1751
  3072  0DBF  2DC1               	goto	u1752
  3073  0DC0                     u1751:	
  3074  0DC0  07A7               	addwf	??___ftge+1,f
  3075  0DC1                     u1752:	
  3076  0DC1  082B               	movf	??___ftge+5,w
  3077  0DC2  1803               	skipnc
  3078  0DC3  0F2B               	incfsz	??___ftge+5,w
  3079  0DC4  2DC6               	goto	u1753
  3080  0DC5  2DC7               	goto	u1754
  3081  0DC6                     u1753:	
  3082  0DC6  07A8               	addwf	??___ftge+2,f
  3083  0DC7                     u1754:	
  3084  0DC7  0826               	movf	??___ftge,w
  3085  0DC8  00A0               	movwf	___ftge@ff1
  3086  0DC9  0827               	movf	??___ftge+1,w
  3087  0DCA  00A1               	movwf	___ftge@ff1+1
  3088  0DCB  0828               	movf	??___ftge+2,w
  3089  0DCC  00A2               	movwf	___ftge@ff1+2
  3090  0DCD                     l1433:	
  3091  0DCD  1FA5               	btfss	___ftge@ff2+2,7
  3092  0DCE  2DF4               	goto	l1437
  3093  0DCF  3000               	movlw	0
  3094  0DD0  00A6               	movwf	??___ftge
  3095  0DD1  3000               	movlw	0
  3096  0DD2  00A7               	movwf	??___ftge+1
  3097  0DD3  3080               	movlw	128
  3098  0DD4  00A8               	movwf	??___ftge+2
  3099  0DD5  0923               	comf	___ftge@ff2,w
  3100  0DD6  00A9               	movwf	??___ftge+3
  3101  0DD7  0924               	comf	___ftge@ff2+1,w
  3102  0DD8  00AA               	movwf	??___ftge+4
  3103  0DD9  0925               	comf	___ftge@ff2+2,w
  3104  0DDA  00AB               	movwf	??___ftge+5
  3105  0DDB  0AA9               	incf	??___ftge+3,f
  3106  0DDC  1903               	skipnz
  3107  0DDD  0AAA               	incf	??___ftge+4,f
  3108  0DDE  1903               	skipnz
  3109  0DDF  0AAB               	incf	??___ftge+5,f
  3110  0DE0  0829               	movf	??___ftge+3,w
  3111  0DE1  07A6               	addwf	??___ftge,f
  3112  0DE2  082A               	movf	??___ftge+4,w
  3113  0DE3  1803               	skipnc
  3114  0DE4  0F2A               	incfsz	??___ftge+4,w
  3115  0DE5  2DE7               	goto	u1771
  3116  0DE6  2DE8               	goto	u1772
  3117  0DE7                     u1771:	
  3118  0DE7  07A7               	addwf	??___ftge+1,f
  3119  0DE8                     u1772:	
  3120  0DE8  082B               	movf	??___ftge+5,w
  3121  0DE9  1803               	skipnc
  3122  0DEA  0F2B               	incfsz	??___ftge+5,w
  3123  0DEB  2DED               	goto	u1773
  3124  0DEC  2DEE               	goto	u1774
  3125  0DED                     u1773:	
  3126  0DED  07A8               	addwf	??___ftge+2,f
  3127  0DEE                     u1774:	
  3128  0DEE  0826               	movf	??___ftge,w
  3129  0DEF  00A3               	movwf	___ftge@ff2
  3130  0DF0  0827               	movf	??___ftge+1,w
  3131  0DF1  00A4               	movwf	___ftge@ff2+1
  3132  0DF2  0828               	movf	??___ftge+2,w
  3133  0DF3  00A5               	movwf	___ftge@ff2+2
  3134  0DF4                     l1437:	
  3135  0DF4  3080               	movlw	128
  3136  0DF5  06A2               	xorwf	___ftge@ff1+2,f
  3137  0DF6  3080               	movlw	128
  3138  0DF7  06A5               	xorwf	___ftge@ff2+2,f
  3139  0DF8  0825               	movf	___ftge@ff2+2,w
  3140  0DF9  0222               	subwf	___ftge@ff1+2,w
  3141  0DFA  1D03               	skipz
  3142  0DFB  0008               	return
  3143  0DFC  0824               	movf	___ftge@ff2+1,w
  3144  0DFD  0221               	subwf	___ftge@ff1+1,w
  3145  0DFE  1D03               	skipz
  3146  0DFF  0008               	return
  3147  0E00  0823               	movf	___ftge@ff2,w
  3148  0E01  0220               	subwf	___ftge@ff1,w
  3149  0E02  0008               	return
  3150  0E03                     __end_of___ftge:	
  3151                           
  3152                           	psect	text12
  3153  0C96                     __ptext12:	
  3154 ;; *************** function ___altoft *****************
  3155 ;; Defined at:
  3156 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\altoft.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  c               4   26[BANK0 ] long 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;  sign            1   33[BANK0 ] unsigned char 
  3161 ;;  exp             1   32[BANK0 ] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  3   26[BANK0 ] float 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0, pclath, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3171 ;;      Params:         0       4       0       0       0
  3172 ;;      Locals:         0       2       0       0       0
  3173 ;;      Temps:          0       2       0       0       0
  3174 ;;      Totals:         0       8       0       0       0
  3175 ;;Total ram usage:        8 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    2
  3178 ;; This function calls:
  3179 ;;		___ftpack
  3180 ;; This function is called by:
  3181 ;;		_floor
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           
  3186                           ;psect for function ___altoft
  3187  0C96                     ___altoft:	
  3188                           
  3189                           ;incstack = 0
  3190                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  3191  0C96  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0C97  1303               	bcf	3,6	;RP1=0, select bank0
  3193  0C98  01C1               	clrf	___altoft@sign
  3194  0C99  308E               	movlw	142
  3195  0C9A  00BE               	movwf	??___altoft
  3196  0C9B  083E               	movf	??___altoft,w
  3197  0C9C  00C0               	movwf	___altoft@exp
  3198  0C9D  1FBD               	btfss	___altoft@c+3,7
  3199  0C9E  2CAC               	goto	l2007
  3200  0C9F  09BA               	comf	___altoft@c,f
  3201  0CA0  09BB               	comf	___altoft@c+1,f
  3202  0CA1  09BC               	comf	___altoft@c+2,f
  3203  0CA2  09BD               	comf	___altoft@c+3,f
  3204  0CA3  0ABA               	incf	___altoft@c,f
  3205  0CA4  1903               	skipnz
  3206  0CA5  0ABB               	incf	___altoft@c+1,f
  3207  0CA6  1903               	skipnz
  3208  0CA7  0ABC               	incf	___altoft@c+2,f
  3209  0CA8  1903               	skipnz
  3210  0CA9  0ABD               	incf	___altoft@c+3,f
  3211  0CAA  01C1               	clrf	___altoft@sign
  3212  0CAB  0AC1               	incf	___altoft@sign,f
  3213  0CAC                     l2007:	
  3214  0CAC  30FF               	movlw	255
  3215  0CAD  053D               	andwf	___altoft@c+3,w
  3216  0CAE  1903               	btfsc	3,2
  3217  0CAF  2CBE               	goto	l2009
  3218  0CB0  3001               	movlw	1
  3219  0CB1                     u2805:	
  3220  0CB1  1003               	clrc
  3221  0CB2  0CBD               	rrf	___altoft@c+3,f
  3222  0CB3  0CBC               	rrf	___altoft@c+2,f
  3223  0CB4  0CBB               	rrf	___altoft@c+1,f
  3224  0CB5  0CBA               	rrf	___altoft@c,f
  3225  0CB6  3EFF               	addlw	-1
  3226  0CB7  1D03               	skipz
  3227  0CB8  2CB1               	goto	u2805
  3228  0CB9  3001               	movlw	1
  3229  0CBA  00BE               	movwf	??___altoft
  3230  0CBB  083E               	movf	??___altoft,w
  3231  0CBC  07C0               	addwf	___altoft@exp,f
  3232  0CBD  2CAC               	goto	l2007
  3233  0CBE                     l2009:	
  3234  0CBE  083A               	movf	___altoft@c,w
  3235  0CBF  00A0               	movwf	___ftpack@arg
  3236  0CC0  083B               	movf	___altoft@c+1,w
  3237  0CC1  00A1               	movwf	___ftpack@arg+1
  3238  0CC2  083C               	movf	___altoft@c+2,w
  3239  0CC3  00A2               	movwf	___ftpack@arg+2
  3240  0CC4  0840               	movf	___altoft@exp,w
  3241  0CC5  00BE               	movwf	??___altoft
  3242  0CC6  083E               	movf	??___altoft,w
  3243  0CC7  00A3               	movwf	___ftpack@exp
  3244  0CC8  0841               	movf	___altoft@sign,w
  3245  0CC9  00BF               	movwf	??___altoft+1
  3246  0CCA  083F               	movf	??___altoft+1,w
  3247  0CCB  00A4               	movwf	___ftpack@sign
  3248  0CCC  120A  158A  2603   	fcall	___ftpack
  3249  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  3250  0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  3251  0CD1  0820               	movf	?___ftpack,w
  3252  0CD2  00BA               	movwf	?___altoft
  3253  0CD3  0821               	movf	?___ftpack+1,w
  3254  0CD4  00BB               	movwf	?___altoft+1
  3255  0CD5  0822               	movf	?___ftpack+2,w
  3256  0CD6  00BC               	movwf	?___altoft+2
  3257  0CD7  0008               	return
  3258  0CD8                     __end_of___altoft:	
  3259                           
  3260                           	psect	text13
  3261  0E71                     __ptext13:	
  3262 ;; *************** function _eval_poly *****************
  3263 ;; Defined at:
  3264 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\evalpoly.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  x               3   43[BANK0 ] float 
  3267 ;;  d               1   46[BANK0 ] PTR const 
  3268 ;;		 -> log@coeff(27), exp@coeff(30), 
  3269 ;;  n               2   47[BANK0 ] int 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  res             3   50[BANK0 ] int 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  3   43[BANK0 ] int 
  3274 ;; Registers used:
  3275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3281 ;;      Params:         0       6       0       0       0
  3282 ;;      Locals:         0       3       0       0       0
  3283 ;;      Temps:          0       1       0       0       0
  3284 ;;      Totals:         0      10       0       0       0
  3285 ;;Total ram usage:       10 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    3
  3288 ;; This function calls:
  3289 ;;		___bmul
  3290 ;;		___ftadd
  3291 ;;		___ftmul
  3292 ;; This function is called by:
  3293 ;;		_exp
  3294 ;;		_log
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           
  3299                           ;psect for function _eval_poly
  3300  0E71                     _eval_poly:	
  3301                           
  3302                           ;incstack = 0
  3303                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3304  0E71  3003               	movlw	3
  3305  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  3306  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  3307  0E74  00D1               	movwf	??_eval_poly
  3308  0E75  0851               	movf	??_eval_poly,w
  3309  0E76  00A0               	movwf	___bmul@multiplicand
  3310  0E77  084F               	movf	eval_poly@n,w
  3311  0E78  120A  158A  2391  120A  158A  	fcall	___bmul
  3312  0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  3314  0E7F  074E               	addwf	eval_poly@d,w
  3315  0E80  0084               	movwf	4
  3316  0E81  120A  158A  2000  120A  158A  	fcall	stringdir
  3317  0E86  00D2               	movwf	eval_poly@res
  3318  0E87  120A  158A  2000  120A  158A  	fcall	stringdir
  3319  0E8C  00D3               	movwf	eval_poly@res+1
  3320  0E8D  120A  158A  2000  120A  158A  	fcall	stringdir
  3321  0E92                     L2:	
  3322  0E92  00D4               	movwf	eval_poly@res+2
  3323  0E93  084F               	movf	eval_poly@n,w
  3324  0E94  0450               	iorwf	eval_poly@n+1,w
  3325  0E95  1903               	btfsc	3,2
  3326  0E96  2EE3               	goto	l2257
  3327  0E97  3003               	movlw	3
  3328  0E98  00D1               	movwf	??_eval_poly
  3329  0E99  0851               	movf	??_eval_poly,w
  3330  0E9A  00A0               	movwf	___bmul@multiplicand
  3331  0E9B  30FF               	movlw	255
  3332  0E9C  07CF               	addwf	eval_poly@n,f
  3333  0E9D  1803               	skipnc
  3334  0E9E  0AD0               	incf	eval_poly@n+1,f
  3335  0E9F  30FF               	movlw	255
  3336  0EA0  07D0               	addwf	eval_poly@n+1,f
  3337  0EA1  084F               	movf	eval_poly@n,w
  3338  0EA2  120A  158A  2391  120A  158A  	fcall	___bmul
  3339  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  3340  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  3341  0EA9  074E               	addwf	eval_poly@d,w
  3342  0EAA  0084               	movwf	4
  3343  0EAB  120A  158A  2000  120A  158A  	fcall	stringdir
  3344  0EB0  00BE               	movwf	___ftadd@f1
  3345  0EB1  120A  158A  2000  120A  158A  	fcall	stringdir
  3346  0EB6  00BF               	movwf	___ftadd@f1+1
  3347  0EB7  120A  158A  2000  120A  158A  	fcall	stringdir
  3348  0EBC  00C0               	movwf	___ftadd@f1+2
  3349  0EBD  0852               	movf	eval_poly@res,w
  3350  0EBE  00AE               	movwf	___ftmul@f1
  3351  0EBF  0853               	movf	eval_poly@res+1,w
  3352  0EC0  00AF               	movwf	___ftmul@f1+1
  3353  0EC1  0854               	movf	eval_poly@res+2,w
  3354  0EC2  00B0               	movwf	___ftmul@f1+2
  3355  0EC3  084B               	movf	eval_poly@x,w
  3356  0EC4  00B1               	movwf	___ftmul@f2
  3357  0EC5  084C               	movf	eval_poly@x+1,w
  3358  0EC6  00B2               	movwf	___ftmul@f2+1
  3359  0EC7  084D               	movf	eval_poly@x+2,w
  3360  0EC8  00B3               	movwf	___ftmul@f2+2
  3361  0EC9  120A  118A  24BF  120A  158A  	fcall	___ftmul
  3362  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  3363  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  3364  0ED0  082E               	movf	?___ftmul,w
  3365  0ED1  00C1               	movwf	___ftadd@f2
  3366  0ED2  082F               	movf	?___ftmul+1,w
  3367  0ED3  00C2               	movwf	___ftadd@f2+1
  3368  0ED4  0830               	movf	?___ftmul+2,w
  3369  0ED5  00C3               	movwf	___ftadd@f2+2
  3370  0ED6  120A  118A  22DA  120A  158A  	fcall	___ftadd
  3371  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  3372  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  3373  0EDD  083E               	movf	?___ftadd,w
  3374  0EDE  00D2               	movwf	eval_poly@res
  3375  0EDF  083F               	movf	?___ftadd+1,w
  3376  0EE0  00D3               	movwf	eval_poly@res+1
  3377  0EE1  0840               	movf	?___ftadd+2,w
  3378  0EE2  2E92               	goto	L2
  3379  0EE3                     l2257:	
  3380  0EE3  0852               	movf	eval_poly@res,w
  3381  0EE4  00CB               	movwf	?_eval_poly
  3382  0EE5  0853               	movf	eval_poly@res+1,w
  3383  0EE6  00CC               	movwf	?_eval_poly+1
  3384  0EE7  0854               	movf	eval_poly@res+2,w
  3385  0EE8  00CD               	movwf	?_eval_poly+2
  3386  0EE9  0008               	return
  3387  0EEA                     __end_of_eval_poly:	
  3388                           
  3389                           	psect	text14
  3390  04BF                     __ptext14:	
  3391 ;; *************** function ___ftmul *****************
  3392 ;; Defined at:
  3393 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  f1              3   14[BANK0 ] float 
  3396 ;;  f2              3   17[BANK0 ] float 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  3399 ;;  sign            1   29[BANK0 ] unsigned char 
  3400 ;;  cntr            1   28[BANK0 ] unsigned char 
  3401 ;;  exp             1   24[BANK0 ] unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  3   14[BANK0 ] float 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0, pclath, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3411 ;;      Params:         0       6       0       0       0
  3412 ;;      Locals:         0       6       0       0       0
  3413 ;;      Temps:          0       4       0       0       0
  3414 ;;      Totals:         0      16       0       0       0
  3415 ;;Total ram usage:       16 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    2
  3418 ;; This function calls:
  3419 ;;		___ftpack
  3420 ;; This function is called by:
  3421 ;;		_pow
  3422 ;;		_exp
  3423 ;;		_log
  3424 ;;		_eval_poly
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           
  3429                           ;psect for function ___ftmul
  3430  04BF                     ___ftmul:	
  3431                           
  3432                           ;incstack = 0
  3433                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3434  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  3435  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  3436  04C1  082E               	movf	___ftmul@f1,w
  3437  04C2  00B4               	movwf	??___ftmul
  3438  04C3  082F               	movf	___ftmul@f1+1,w
  3439  04C4  00B5               	movwf	??___ftmul+1
  3440  04C5  0830               	movf	___ftmul@f1+2,w
  3441  04C6  00B6               	movwf	??___ftmul+2
  3442  04C7  1003               	clrc
  3443  04C8  0D35               	rlf	??___ftmul+1,w
  3444  04C9  0D36               	rlf	??___ftmul+2,w
  3445  04CA  00B7               	movwf	??___ftmul+3
  3446  04CB  0837               	movf	??___ftmul+3,w
  3447  04CC  00B8               	movwf	___ftmul@exp
  3448  04CD  0838               	movf	___ftmul@exp,w
  3449  04CE  1D03               	btfss	3,2
  3450  04CF  2CD7               	goto	l2089
  3451  04D0  3000               	movlw	0
  3452  04D1  00AE               	movwf	?___ftmul
  3453  04D2  3000               	movlw	0
  3454  04D3  00AF               	movwf	?___ftmul+1
  3455  04D4  3000               	movlw	0
  3456  04D5  00B0               	movwf	?___ftmul+2
  3457  04D6  0008               	return
  3458  04D7                     l2089:	
  3459  04D7  0831               	movf	___ftmul@f2,w
  3460  04D8  00B4               	movwf	??___ftmul
  3461  04D9  0832               	movf	___ftmul@f2+1,w
  3462  04DA  00B5               	movwf	??___ftmul+1
  3463  04DB  0833               	movf	___ftmul@f2+2,w
  3464  04DC  00B6               	movwf	??___ftmul+2
  3465  04DD  1003               	clrc
  3466  04DE  0D35               	rlf	??___ftmul+1,w
  3467  04DF  0D36               	rlf	??___ftmul+2,w
  3468  04E0  00B7               	movwf	??___ftmul+3
  3469  04E1  0837               	movf	??___ftmul+3,w
  3470  04E2  00BD               	movwf	___ftmul@sign
  3471  04E3  083D               	movf	___ftmul@sign,w
  3472  04E4  1D03               	btfss	3,2
  3473  04E5  2CED               	goto	l2095
  3474  04E6  3000               	movlw	0
  3475  04E7  00AE               	movwf	?___ftmul
  3476  04E8  3000               	movlw	0
  3477  04E9  00AF               	movwf	?___ftmul+1
  3478  04EA  3000               	movlw	0
  3479  04EB  00B0               	movwf	?___ftmul+2
  3480  04EC  0008               	return
  3481  04ED                     l2095:	
  3482  04ED  083D               	movf	___ftmul@sign,w
  3483  04EE  3E7B               	addlw	123
  3484  04EF  00B4               	movwf	??___ftmul
  3485  04F0  0834               	movf	??___ftmul,w
  3486  04F1  07B8               	addwf	___ftmul@exp,f
  3487  04F2  082E               	movf	___ftmul@f1,w
  3488  04F3  00B4               	movwf	??___ftmul
  3489  04F4  082F               	movf	___ftmul@f1+1,w
  3490  04F5  00B5               	movwf	??___ftmul+1
  3491  04F6  0830               	movf	___ftmul@f1+2,w
  3492  04F7  00B6               	movwf	??___ftmul+2
  3493  04F8  3010               	movlw	16
  3494  04F9                     u3085:	
  3495  04F9  1003               	clrc
  3496  04FA  0CB6               	rrf	??___ftmul+2,f
  3497  04FB  0CB5               	rrf	??___ftmul+1,f
  3498  04FC  0CB4               	rrf	??___ftmul,f
  3499  04FD  3EFF               	addlw	-1
  3500  04FE  1D03               	skipz
  3501  04FF  2CF9               	goto	u3085
  3502  0500  0834               	movf	??___ftmul,w
  3503  0501  00B7               	movwf	??___ftmul+3
  3504  0502  0837               	movf	??___ftmul+3,w
  3505  0503  00BD               	movwf	___ftmul@sign
  3506  0504  0831               	movf	___ftmul@f2,w
  3507  0505  00B4               	movwf	??___ftmul
  3508  0506  0832               	movf	___ftmul@f2+1,w
  3509  0507  00B5               	movwf	??___ftmul+1
  3510  0508  0833               	movf	___ftmul@f2+2,w
  3511  0509  00B6               	movwf	??___ftmul+2
  3512  050A  3010               	movlw	16
  3513  050B                     u3095:	
  3514  050B  1003               	clrc
  3515  050C  0CB6               	rrf	??___ftmul+2,f
  3516  050D  0CB5               	rrf	??___ftmul+1,f
  3517  050E  0CB4               	rrf	??___ftmul,f
  3518  050F  3EFF               	addlw	-1
  3519  0510  1D03               	skipz
  3520  0511  2D0B               	goto	u3095
  3521  0512  0834               	movf	??___ftmul,w
  3522  0513  00B7               	movwf	??___ftmul+3
  3523  0514  0837               	movf	??___ftmul+3,w
  3524  0515  06BD               	xorwf	___ftmul@sign,f
  3525  0516  3080               	movlw	128
  3526  0517  00B4               	movwf	??___ftmul
  3527  0518  0834               	movf	??___ftmul,w
  3528  0519  05BD               	andwf	___ftmul@sign,f
  3529  051A  17AF               	bsf	___ftmul@f1+1,7
  3530  051B  17B2               	bsf	___ftmul@f2+1,7
  3531  051C  30FF               	movlw	255
  3532  051D  05B1               	andwf	___ftmul@f2,f
  3533  051E  30FF               	movlw	255
  3534  051F  05B2               	andwf	___ftmul@f2+1,f
  3535  0520  3000               	movlw	0
  3536  0521  05B3               	andwf	___ftmul@f2+2,f
  3537  0522  3000               	movlw	0
  3538  0523  00B9               	movwf	___ftmul@f3_as_product
  3539  0524  3000               	movlw	0
  3540  0525  00BA               	movwf	___ftmul@f3_as_product+1
  3541  0526  3000               	movlw	0
  3542  0527  00BB               	movwf	___ftmul@f3_as_product+2
  3543  0528  3007               	movlw	7
  3544  0529  00B4               	movwf	??___ftmul
  3545  052A  0834               	movf	??___ftmul,w
  3546  052B  00BC               	movwf	___ftmul@cntr
  3547  052C                     l2107:	
  3548  052C  1C2E               	btfss	___ftmul@f1,0
  3549  052D  2D3C               	goto	l2111
  3550  052E  0831               	movf	___ftmul@f2,w
  3551  052F  07B9               	addwf	___ftmul@f3_as_product,f
  3552  0530  0832               	movf	___ftmul@f2+1,w
  3553  0531  1103               	clrz
  3554  0532  1803               	skipnc
  3555  0533  0A32               	incf	___ftmul@f2+1,w
  3556  0534  1D03               	btfss	3,2
  3557  0535  07BA               	addwf	___ftmul@f3_as_product+1,f
  3558  0536  0833               	movf	___ftmul@f2+2,w
  3559  0537  1103               	clrz
  3560  0538  1803               	skipnc
  3561  0539  0A33               	incf	___ftmul@f2+2,w
  3562  053A  1D03               	btfss	3,2
  3563  053B  07BB               	addwf	___ftmul@f3_as_product+2,f
  3564  053C                     l2111:	
  3565  053C  3001               	movlw	1
  3566  053D                     u3125:	
  3567  053D  1003               	clrc
  3568  053E  0CB0               	rrf	___ftmul@f1+2,f
  3569  053F  0CAF               	rrf	___ftmul@f1+1,f
  3570  0540  0CAE               	rrf	___ftmul@f1,f
  3571  0541  3EFF               	addlw	-1
  3572  0542  1D03               	skipz
  3573  0543  2D3D               	goto	u3125
  3574  0544  3001               	movlw	1
  3575  0545                     u3135:	
  3576  0545  1003               	clrc
  3577  0546  0DB1               	rlf	___ftmul@f2,f
  3578  0547  0DB2               	rlf	___ftmul@f2+1,f
  3579  0548  0DB3               	rlf	___ftmul@f2+2,f
  3580  0549  3EFF               	addlw	-1
  3581  054A  1D03               	skipz
  3582  054B  2D45               	goto	u3135
  3583  054C  3001               	movlw	1
  3584  054D  02BC               	subwf	___ftmul@cntr,f
  3585  054E  1D03               	btfss	3,2
  3586  054F  2D2C               	goto	l2107
  3587  0550  3009               	movlw	9
  3588  0551  00B4               	movwf	??___ftmul
  3589  0552  0834               	movf	??___ftmul,w
  3590  0553  00BC               	movwf	___ftmul@cntr
  3591  0554                     l2119:	
  3592  0554  1C2E               	btfss	___ftmul@f1,0
  3593  0555  2D64               	goto	l2123
  3594  0556  0831               	movf	___ftmul@f2,w
  3595  0557  07B9               	addwf	___ftmul@f3_as_product,f
  3596  0558  0832               	movf	___ftmul@f2+1,w
  3597  0559  1103               	clrz
  3598  055A  1803               	skipnc
  3599  055B  0A32               	incf	___ftmul@f2+1,w
  3600  055C  1D03               	btfss	3,2
  3601  055D  07BA               	addwf	___ftmul@f3_as_product+1,f
  3602  055E  0833               	movf	___ftmul@f2+2,w
  3603  055F  1103               	clrz
  3604  0560  1803               	skipnc
  3605  0561  0A33               	incf	___ftmul@f2+2,w
  3606  0562  1D03               	btfss	3,2
  3607  0563  07BB               	addwf	___ftmul@f3_as_product+2,f
  3608  0564                     l2123:	
  3609  0564  3001               	movlw	1
  3610  0565                     u3175:	
  3611  0565  1003               	clrc
  3612  0566  0CB0               	rrf	___ftmul@f1+2,f
  3613  0567  0CAF               	rrf	___ftmul@f1+1,f
  3614  0568  0CAE               	rrf	___ftmul@f1,f
  3615  0569  3EFF               	addlw	-1
  3616  056A  1D03               	skipz
  3617  056B  2D65               	goto	u3175
  3618  056C  3001               	movlw	1
  3619  056D                     u3185:	
  3620  056D  1003               	clrc
  3621  056E  0CBB               	rrf	___ftmul@f3_as_product+2,f
  3622  056F  0CBA               	rrf	___ftmul@f3_as_product+1,f
  3623  0570  0CB9               	rrf	___ftmul@f3_as_product,f
  3624  0571  3EFF               	addlw	-1
  3625  0572  1D03               	skipz
  3626  0573  2D6D               	goto	u3185
  3627  0574  3001               	movlw	1
  3628  0575  02BC               	subwf	___ftmul@cntr,f
  3629  0576  1D03               	btfss	3,2
  3630  0577  2D54               	goto	l2119
  3631  0578  0839               	movf	___ftmul@f3_as_product,w
  3632  0579  00A0               	movwf	___ftpack@arg
  3633  057A  083A               	movf	___ftmul@f3_as_product+1,w
  3634  057B  00A1               	movwf	___ftpack@arg+1
  3635  057C  083B               	movf	___ftmul@f3_as_product+2,w
  3636  057D  00A2               	movwf	___ftpack@arg+2
  3637  057E  0838               	movf	___ftmul@exp,w
  3638  057F  00B4               	movwf	??___ftmul
  3639  0580  0834               	movf	??___ftmul,w
  3640  0581  00A3               	movwf	___ftpack@exp
  3641  0582  083D               	movf	___ftmul@sign,w
  3642  0583  00B5               	movwf	??___ftmul+1
  3643  0584  0835               	movf	??___ftmul+1,w
  3644  0585  00A4               	movwf	___ftpack@sign
  3645  0586  120A  158A  2603   	fcall	___ftpack
  3646  0589  1283               	bcf	3,5	;RP0=0, select bank0
  3647  058A  1303               	bcf	3,6	;RP1=0, select bank0
  3648  058B  0820               	movf	?___ftpack,w
  3649  058C  00AE               	movwf	?___ftmul
  3650  058D  0821               	movf	?___ftpack+1,w
  3651  058E  00AF               	movwf	?___ftmul+1
  3652  058F  0822               	movf	?___ftpack+2,w
  3653  0590  00B0               	movwf	?___ftmul+2
  3654  0591  0008               	return
  3655  0592                     __end_of___ftmul:	
  3656                           
  3657                           	psect	text15
  3658  0B91                     __ptext15:	
  3659 ;; *************** function ___bmul *****************
  3660 ;; Defined at:
  3661 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul8.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  multiplier      1    wreg     unsigned char 
  3664 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3667 ;;  product         1    2[BANK0 ] unsigned char 
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      unsigned char 
  3670 ;; Registers used:
  3671 ;;		wreg, status,2, status,0
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3677 ;;      Params:         0       1       0       0       0
  3678 ;;      Locals:         0       2       0       0       0
  3679 ;;      Temps:          0       1       0       0       0
  3680 ;;      Totals:         0       4       0       0       0
  3681 ;;Total ram usage:        4 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    1
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_eval_poly
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           
  3692                           ;psect for function ___bmul
  3693  0B91                     ___bmul:	
  3694                           
  3695                           ;incstack = 0
  3696                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3697                           ;___bmul@multiplier stored from wreg
  3698  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  3699  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  3700  0B93  00A3               	movwf	___bmul@multiplier
  3701  0B94  01A2               	clrf	___bmul@product
  3702  0B95                     l1985:	
  3703  0B95  1C23               	btfss	___bmul@multiplier,0
  3704  0B96  2B9B               	goto	l1989
  3705  0B97  0820               	movf	___bmul@multiplicand,w
  3706  0B98  00A1               	movwf	??___bmul
  3707  0B99  0821               	movf	??___bmul,w
  3708  0B9A  07A2               	addwf	___bmul@product,f
  3709  0B9B                     l1989:	
  3710  0B9B  1003               	clrc
  3711  0B9C  0DA0               	rlf	___bmul@multiplicand,f
  3712  0B9D  1003               	clrc
  3713  0B9E  0CA3               	rrf	___bmul@multiplier,f
  3714  0B9F  0823               	movf	___bmul@multiplier,w
  3715  0BA0  1D03               	btfss	3,2
  3716  0BA1  2B95               	goto	l1985
  3717  0BA2  0822               	movf	___bmul@product,w
  3718  0BA3  0008               	return
  3719  0BA4                     __end_of___bmul:	
  3720                           
  3721                           	psect	text16
  3722  0BBC                     __ptext16:	
  3723 ;; *************** function ___ftsub *****************
  3724 ;; Defined at:
  3725 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftsub.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  f2              3   43[BANK0 ] float 
  3728 ;;  f1              3   46[BANK0 ] float 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  3   43[BANK0 ] float 
  3733 ;; Registers used:
  3734 ;;		wreg, status,2, status,0, pclath, cstack
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3740 ;;      Params:         0       6       0       0       0
  3741 ;;      Locals:         0       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0
  3743 ;;      Totals:         0       6       0       0       0
  3744 ;;Total ram usage:        6 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    3
  3747 ;; This function calls:
  3748 ;;		___ftadd
  3749 ;; This function is called by:
  3750 ;;		_exp
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           
  3755                           ;psect for function ___ftsub
  3756  0BBC                     ___ftsub:	
  3757                           
  3758                           ;incstack = 0
  3759                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3760  0BBC  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0BBD  1303               	bcf	3,6	;RP1=0, select bank0
  3762  0BBE  084D               	movf	___ftsub@f2+2,w
  3763  0BBF  044C               	iorwf	___ftsub@f2+1,w
  3764  0BC0  044B               	iorwf	___ftsub@f2,w
  3765  0BC1  1903               	skipnz
  3766  0BC2  2BC5               	goto	l2219
  3767  0BC3  3080               	movlw	128
  3768  0BC4  06CD               	xorwf	___ftsub@f2+2,f
  3769  0BC5                     l2219:	
  3770  0BC5  084E               	movf	___ftsub@f1,w
  3771  0BC6  00BE               	movwf	___ftadd@f1
  3772  0BC7  084F               	movf	___ftsub@f1+1,w
  3773  0BC8  00BF               	movwf	___ftadd@f1+1
  3774  0BC9  0850               	movf	___ftsub@f1+2,w
  3775  0BCA  00C0               	movwf	___ftadd@f1+2
  3776  0BCB  084B               	movf	___ftsub@f2,w
  3777  0BCC  00C1               	movwf	___ftadd@f2
  3778  0BCD  084C               	movf	___ftsub@f2+1,w
  3779  0BCE  00C2               	movwf	___ftadd@f2+1
  3780  0BCF  084D               	movf	___ftsub@f2+2,w
  3781  0BD0  00C3               	movwf	___ftadd@f2+2
  3782  0BD1  120A  118A  22DA   	fcall	___ftadd
  3783  0BD4  1283               	bcf	3,5	;RP0=0, select bank0
  3784  0BD5  1303               	bcf	3,6	;RP1=0, select bank0
  3785  0BD6  083E               	movf	?___ftadd,w
  3786  0BD7  00CB               	movwf	?___ftsub
  3787  0BD8  083F               	movf	?___ftadd+1,w
  3788  0BD9  00CC               	movwf	?___ftsub+1
  3789  0BDA  0840               	movf	?___ftadd+2,w
  3790  0BDB  00CD               	movwf	?___ftsub+2
  3791  0BDC  0008               	return
  3792  0BDD                     __end_of___ftsub:	
  3793                           
  3794                           	psect	text17
  3795  02DA                     __ptext17:	
  3796 ;; *************** function ___ftadd *****************
  3797 ;; Defined at:
  3798 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  f1              3   30[BANK0 ] float 
  3801 ;;  f2              3   33[BANK0 ] float 
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;  exp1            1   42[BANK0 ] unsigned char 
  3804 ;;  exp2            1   41[BANK0 ] unsigned char 
  3805 ;;  sign            1   40[BANK0 ] unsigned char 
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  3   30[BANK0 ] float 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2, status,0, pclath, cstack
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3815 ;;      Params:         0       6       0       0       0
  3816 ;;      Locals:         0       3       0       0       0
  3817 ;;      Temps:          0       4       0       0       0
  3818 ;;      Totals:         0      13       0       0       0
  3819 ;;Total ram usage:       13 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; Hardware stack levels required when called:    2
  3822 ;; This function calls:
  3823 ;;		___ftpack
  3824 ;; This function is called by:
  3825 ;;		___ftsub
  3826 ;;		_floor
  3827 ;;		_log
  3828 ;;		_eval_poly
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           
  3833                           ;psect for function ___ftadd
  3834  02DA                     ___ftadd:	
  3835                           
  3836                           ;incstack = 0
  3837                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3838  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  3839  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  3840  02DC  083E               	movf	___ftadd@f1,w
  3841  02DD  00C4               	movwf	??___ftadd
  3842  02DE  083F               	movf	___ftadd@f1+1,w
  3843  02DF  00C5               	movwf	??___ftadd+1
  3844  02E0  0840               	movf	___ftadd@f1+2,w
  3845  02E1  00C6               	movwf	??___ftadd+2
  3846  02E2  1003               	clrc
  3847  02E3  0D45               	rlf	??___ftadd+1,w
  3848  02E4  0D46               	rlf	??___ftadd+2,w
  3849  02E5  00C7               	movwf	??___ftadd+3
  3850  02E6  0847               	movf	??___ftadd+3,w
  3851  02E7  00CA               	movwf	___ftadd@exp1
  3852  02E8  0841               	movf	___ftadd@f2,w
  3853  02E9  00C4               	movwf	??___ftadd
  3854  02EA  0842               	movf	___ftadd@f2+1,w
  3855  02EB  00C5               	movwf	??___ftadd+1
  3856  02EC  0843               	movf	___ftadd@f2+2,w
  3857  02ED  00C6               	movwf	??___ftadd+2
  3858  02EE  1003               	clrc
  3859  02EF  0D45               	rlf	??___ftadd+1,w
  3860  02F0  0D46               	rlf	??___ftadd+2,w
  3861  02F1  00C7               	movwf	??___ftadd+3
  3862  02F2  0847               	movf	??___ftadd+3,w
  3863  02F3  00C9               	movwf	___ftadd@exp2
  3864  02F4  084A               	movf	___ftadd@exp1,w
  3865  02F5  1903               	btfsc	3,2
  3866  02F6  2B03               	goto	l2019
  3867  02F7  0849               	movf	___ftadd@exp2,w
  3868  02F8  024A               	subwf	___ftadd@exp1,w
  3869  02F9  1803               	skipnc
  3870  02FA  2B0A               	goto	l2023
  3871  02FB  034A               	decf	___ftadd@exp1,w
  3872  02FC  3AFF               	xorlw	255
  3873  02FD  0749               	addwf	___ftadd@exp2,w
  3874  02FE  00C4               	movwf	??___ftadd
  3875  02FF  3019               	movlw	25
  3876  0300  0244               	subwf	??___ftadd,w
  3877  0301  1C03               	skipc
  3878  0302  2B0A               	goto	l2023
  3879  0303                     l2019:	
  3880  0303  0841               	movf	___ftadd@f2,w
  3881  0304  00BE               	movwf	?___ftadd
  3882  0305  0842               	movf	___ftadd@f2+1,w
  3883  0306  00BF               	movwf	?___ftadd+1
  3884  0307  0843               	movf	___ftadd@f2+2,w
  3885  0308  00C0               	movwf	?___ftadd+2
  3886  0309  0008               	return
  3887  030A                     l2023:	
  3888  030A  0849               	movf	___ftadd@exp2,w
  3889  030B  1903               	btfsc	3,2
  3890  030C  0008               	return
  3891  030D  084A               	movf	___ftadd@exp1,w
  3892  030E  0249               	subwf	___ftadd@exp2,w
  3893  030F  1803               	skipnc
  3894  0310  2B19               	goto	l2029
  3895  0311  0349               	decf	___ftadd@exp2,w
  3896  0312  3AFF               	xorlw	255
  3897  0313  074A               	addwf	___ftadd@exp1,w
  3898  0314  00C4               	movwf	??___ftadd
  3899  0315  3019               	movlw	25
  3900  0316  0244               	subwf	??___ftadd,w
  3901  0317  1803               	btfsc	3,0
  3902  0318  0008               	return
  3903  0319                     l2029:	
  3904  0319  3006               	movlw	6
  3905  031A  00C4               	movwf	??___ftadd
  3906  031B  0844               	movf	??___ftadd,w
  3907  031C  00C8               	movwf	___ftadd@sign
  3908  031D  1BC0               	btfsc	___ftadd@f1+2,7
  3909  031E  17C8               	bsf	___ftadd@sign,7
  3910  031F  1BC3               	btfsc	___ftadd@f2+2,7
  3911  0320  1748               	bsf	___ftadd@sign,6
  3912  0321  17BF               	bsf	___ftadd@f1+1,7
  3913  0322  30FF               	movlw	255
  3914  0323  05BE               	andwf	___ftadd@f1,f
  3915  0324  30FF               	movlw	255
  3916  0325  05BF               	andwf	___ftadd@f1+1,f
  3917  0326  3000               	movlw	0
  3918  0327  05C0               	andwf	___ftadd@f1+2,f
  3919  0328  17C2               	bsf	___ftadd@f2+1,7
  3920  0329  30FF               	movlw	255
  3921  032A  05C1               	andwf	___ftadd@f2,f
  3922  032B  30FF               	movlw	255
  3923  032C  05C2               	andwf	___ftadd@f2+1,f
  3924  032D  3000               	movlw	0
  3925  032E  05C3               	andwf	___ftadd@f2+2,f
  3926  032F  0849               	movf	___ftadd@exp2,w
  3927  0330  024A               	subwf	___ftadd@exp1,w
  3928  0331  1803               	skipnc
  3929  0332  2B59               	goto	l2051
  3930  0333                     l2041:	
  3931  0333  3001               	movlw	1
  3932  0334                     u2915:	
  3933  0334  1003               	clrc
  3934  0335  0DC1               	rlf	___ftadd@f2,f
  3935  0336  0DC2               	rlf	___ftadd@f2+1,f
  3936  0337  0DC3               	rlf	___ftadd@f2+2,f
  3937  0338  3EFF               	addlw	-1
  3938  0339  1D03               	skipz
  3939  033A  2B34               	goto	u2915
  3940  033B  3001               	movlw	1
  3941  033C  02C9               	subwf	___ftadd@exp2,f
  3942  033D  0849               	movf	___ftadd@exp2,w
  3943  033E  064A               	xorwf	___ftadd@exp1,w
  3944  033F  1903               	skipnz
  3945  0340  2B54               	goto	l2049
  3946  0341  3001               	movlw	1
  3947  0342  02C8               	subwf	___ftadd@sign,f
  3948  0343  0848               	movf	___ftadd@sign,w
  3949  0344  3907               	andlw	7
  3950  0345  1903               	btfsc	3,2
  3951  0346  2B54               	goto	l2049
  3952  0347  2B33               	goto	l2041
  3953  0348                     l2047:	
  3954  0348  3001               	movlw	1
  3955  0349                     u2945:	
  3956  0349  1003               	clrc
  3957  034A  0CC0               	rrf	___ftadd@f1+2,f
  3958  034B  0CBF               	rrf	___ftadd@f1+1,f
  3959  034C  0CBE               	rrf	___ftadd@f1,f
  3960  034D  3EFF               	addlw	-1
  3961  034E  1D03               	skipz
  3962  034F  2B49               	goto	u2945
  3963  0350  3001               	movlw	1
  3964  0351  00C4               	movwf	??___ftadd
  3965  0352  0844               	movf	??___ftadd,w
  3966  0353  07CA               	addwf	___ftadd@exp1,f
  3967  0354                     l2049:	
  3968  0354  084A               	movf	___ftadd@exp1,w
  3969  0355  0649               	xorwf	___ftadd@exp2,w
  3970  0356  1903               	btfsc	3,2
  3971  0357  2B82               	goto	l338
  3972  0358  2B48               	goto	l2047
  3973  0359                     l2051:	
  3974  0359  084A               	movf	___ftadd@exp1,w
  3975  035A  0249               	subwf	___ftadd@exp2,w
  3976  035B  1803               	skipnc
  3977  035C  2B82               	goto	l338
  3978  035D                     l2053:	
  3979  035D  3001               	movlw	1
  3980  035E                     u2975:	
  3981  035E  1003               	clrc
  3982  035F  0DBE               	rlf	___ftadd@f1,f
  3983  0360  0DBF               	rlf	___ftadd@f1+1,f
  3984  0361  0DC0               	rlf	___ftadd@f1+2,f
  3985  0362  3EFF               	addlw	-1
  3986  0363  1D03               	skipz
  3987  0364  2B5E               	goto	u2975
  3988  0365  3001               	movlw	1
  3989  0366  02CA               	subwf	___ftadd@exp1,f
  3990  0367  0849               	movf	___ftadd@exp2,w
  3991  0368  064A               	xorwf	___ftadd@exp1,w
  3992  0369  1903               	skipnz
  3993  036A  2B7E               	goto	l2061
  3994  036B  3001               	movlw	1
  3995  036C  02C8               	subwf	___ftadd@sign,f
  3996  036D  0848               	movf	___ftadd@sign,w
  3997  036E  3907               	andlw	7
  3998  036F  1903               	btfsc	3,2
  3999  0370  2B7E               	goto	l2061
  4000  0371  2B5D               	goto	l2053
  4001  0372                     l2059:	
  4002  0372  3001               	movlw	1
  4003  0373                     u3005:	
  4004  0373  1003               	clrc
  4005  0374  0CC3               	rrf	___ftadd@f2+2,f
  4006  0375  0CC2               	rrf	___ftadd@f2+1,f
  4007  0376  0CC1               	rrf	___ftadd@f2,f
  4008  0377  3EFF               	addlw	-1
  4009  0378  1D03               	skipz
  4010  0379  2B73               	goto	u3005
  4011  037A  3001               	movlw	1
  4012  037B  00C4               	movwf	??___ftadd
  4013  037C  0844               	movf	??___ftadd,w
  4014  037D  07C9               	addwf	___ftadd@exp2,f
  4015  037E                     l2061:	
  4016  037E  084A               	movf	___ftadd@exp1,w
  4017  037F  0649               	xorwf	___ftadd@exp2,w
  4018  0380  1D03               	skipz
  4019  0381  2B72               	goto	l2059
  4020  0382                     l338:	
  4021  0382  1FC8               	btfss	___ftadd@sign,7
  4022  0383  2B94               	goto	l2065
  4023  0384  30FF               	movlw	255
  4024  0385  06BE               	xorwf	___ftadd@f1,f
  4025  0386  30FF               	movlw	255
  4026  0387  06BF               	xorwf	___ftadd@f1+1,f
  4027  0388  30FF               	movlw	255
  4028  0389  06C0               	xorwf	___ftadd@f1+2,f
  4029  038A  3001               	movlw	1
  4030  038B  07BE               	addwf	___ftadd@f1,f
  4031  038C  3000               	movlw	0
  4032  038D  1803               	skipnc
  4033  038E  3001               	movlw	1
  4034  038F  07BF               	addwf	___ftadd@f1+1,f
  4035  0390  3000               	movlw	0
  4036  0391  1803               	skipnc
  4037  0392  3001               	movlw	1
  4038  0393  07C0               	addwf	___ftadd@f1+2,f
  4039  0394                     l2065:	
  4040  0394  1F48               	btfss	___ftadd@sign,6
  4041  0395  2BA6               	goto	l2069
  4042  0396  30FF               	movlw	255
  4043  0397  06C1               	xorwf	___ftadd@f2,f
  4044  0398  30FF               	movlw	255
  4045  0399  06C2               	xorwf	___ftadd@f2+1,f
  4046  039A  30FF               	movlw	255
  4047  039B  06C3               	xorwf	___ftadd@f2+2,f
  4048  039C  3001               	movlw	1
  4049  039D  07C1               	addwf	___ftadd@f2,f
  4050  039E  3000               	movlw	0
  4051  039F  1803               	skipnc
  4052  03A0  3001               	movlw	1
  4053  03A1  07C2               	addwf	___ftadd@f2+1,f
  4054  03A2  3000               	movlw	0
  4055  03A3  1803               	skipnc
  4056  03A4  3001               	movlw	1
  4057  03A5  07C3               	addwf	___ftadd@f2+2,f
  4058  03A6                     l2069:	
  4059  03A6  01C8               	clrf	___ftadd@sign
  4060  03A7  083E               	movf	___ftadd@f1,w
  4061  03A8  07C1               	addwf	___ftadd@f2,f
  4062  03A9  083F               	movf	___ftadd@f1+1,w
  4063  03AA  1103               	clrz
  4064  03AB  1803               	skipnc
  4065  03AC  0A3F               	incf	___ftadd@f1+1,w
  4066  03AD  1D03               	btfss	3,2
  4067  03AE  07C2               	addwf	___ftadd@f2+1,f
  4068  03AF  0840               	movf	___ftadd@f1+2,w
  4069  03B0  1103               	clrz
  4070  03B1  1803               	skipnc
  4071  03B2  0A40               	incf	___ftadd@f1+2,w
  4072  03B3  1D03               	btfss	3,2
  4073  03B4  07C3               	addwf	___ftadd@f2+2,f
  4074  03B5  1FC3               	btfss	___ftadd@f2+2,7
  4075  03B6  2BC9               	goto	l2079
  4076  03B7  30FF               	movlw	255
  4077  03B8  06C1               	xorwf	___ftadd@f2,f
  4078  03B9  30FF               	movlw	255
  4079  03BA  06C2               	xorwf	___ftadd@f2+1,f
  4080  03BB  30FF               	movlw	255
  4081  03BC  06C3               	xorwf	___ftadd@f2+2,f
  4082  03BD  3001               	movlw	1
  4083  03BE  07C1               	addwf	___ftadd@f2,f
  4084  03BF  3000               	movlw	0
  4085  03C0  1803               	skipnc
  4086  03C1  3001               	movlw	1
  4087  03C2  07C2               	addwf	___ftadd@f2+1,f
  4088  03C3  3000               	movlw	0
  4089  03C4  1803               	skipnc
  4090  03C5  3001               	movlw	1
  4091  03C6  07C3               	addwf	___ftadd@f2+2,f
  4092  03C7  01C8               	clrf	___ftadd@sign
  4093  03C8  0AC8               	incf	___ftadd@sign,f
  4094  03C9                     l2079:	
  4095  03C9  0841               	movf	___ftadd@f2,w
  4096  03CA  00A0               	movwf	___ftpack@arg
  4097  03CB  0842               	movf	___ftadd@f2+1,w
  4098  03CC  00A1               	movwf	___ftpack@arg+1
  4099  03CD  0843               	movf	___ftadd@f2+2,w
  4100  03CE  00A2               	movwf	___ftpack@arg+2
  4101  03CF  084A               	movf	___ftadd@exp1,w
  4102  03D0  00C4               	movwf	??___ftadd
  4103  03D1  0844               	movf	??___ftadd,w
  4104  03D2  00A3               	movwf	___ftpack@exp
  4105  03D3  0848               	movf	___ftadd@sign,w
  4106  03D4  00C5               	movwf	??___ftadd+1
  4107  03D5  0845               	movf	??___ftadd+1,w
  4108  03D6  00A4               	movwf	___ftpack@sign
  4109  03D7  120A  158A  2603   	fcall	___ftpack
  4110  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  4111  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  4112  03DC  0820               	movf	?___ftpack,w
  4113  03DD  00BE               	movwf	?___ftadd
  4114  03DE  0821               	movf	?___ftpack+1,w
  4115  03DF  00BF               	movwf	?___ftadd+1
  4116  03E0  0822               	movf	?___ftpack+2,w
  4117  03E1  00C0               	movwf	?___ftadd+2
  4118  03E2  0008               	return
  4119  03E3                     __end_of___ftadd:	
  4120                           
  4121                           	psect	text18
  4122  0B87                     __ptext18:	
  4123 ;; *************** function ___ftneg *****************
  4124 ;; Defined at:
  4125 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftneg.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;  f1              3    0[BANK0 ] float 
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;		None
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  3    0[BANK0 ] float 
  4132 ;; Registers used:
  4133 ;;		wreg
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4139 ;;      Params:         0       3       0       0       0
  4140 ;;      Locals:         0       0       0       0       0
  4141 ;;      Temps:          0       0       0       0       0
  4142 ;;      Totals:         0       3       0       0       0
  4143 ;;Total ram usage:        3 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    1
  4146 ;; This function calls:
  4147 ;;		Nothing
  4148 ;; This function is called by:
  4149 ;;		_pow
  4150 ;;		_exp
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           
  4155                           ;psect for function ___ftneg
  4156  0B87                     ___ftneg:	
  4157                           
  4158                           ;incstack = 0
  4159                           ; Regs used in ___ftneg: [wreg]
  4160  0B87  1283               	bcf	3,5	;RP0=0, select bank0
  4161  0B88  1303               	bcf	3,6	;RP1=0, select bank0
  4162  0B89  0822               	movf	___ftneg@f1+2,w
  4163  0B8A  0421               	iorwf	___ftneg@f1+1,w
  4164  0B8B  0420               	iorwf	___ftneg@f1,w
  4165  0B8C  1903               	skipnz
  4166  0B8D  0008               	return
  4167  0B8E  3080               	movlw	128
  4168  0B8F  06A2               	xorwf	___ftneg@f1+2,f
  4169  0B90  0008               	return
  4170  0B91                     __end_of___ftneg:	
  4171                           
  4172                           	psect	text19
  4173  0660                     __ptext19:	
  4174 ;; *************** function ___ftdiv *****************
  4175 ;; Defined at:
  4176 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  f2              3    8[BANK0 ] float 
  4179 ;;  f1              3   11[BANK0 ] float 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  f3              3   19[BANK0 ] float 
  4182 ;;  sign            1   23[BANK0 ] unsigned char 
  4183 ;;  exp             1   22[BANK0 ] unsigned char 
  4184 ;;  cntr            1   18[BANK0 ] unsigned char 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  3    8[BANK0 ] float 
  4187 ;; Registers used:
  4188 ;;		wreg, status,2, status,0, pclath, cstack
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4194 ;;      Params:         0       6       0       0       0
  4195 ;;      Locals:         0       6       0       0       0
  4196 ;;      Temps:          0       4       0       0       0
  4197 ;;      Totals:         0      16       0       0       0
  4198 ;;Total ram usage:       16 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    2
  4201 ;; This function calls:
  4202 ;;		___ftpack
  4203 ;; This function is called by:
  4204 ;;		_exp
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function ___ftdiv
  4210  0660                     ___ftdiv:	
  4211                           
  4212                           ;incstack = 0
  4213                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4214  0660  1283               	bcf	3,5	;RP0=0, select bank0
  4215  0661  1303               	bcf	3,6	;RP1=0, select bank0
  4216  0662  082B               	movf	___ftdiv@f1,w
  4217  0663  00AE               	movwf	??___ftdiv
  4218  0664  082C               	movf	___ftdiv@f1+1,w
  4219  0665  00AF               	movwf	??___ftdiv+1
  4220  0666  082D               	movf	___ftdiv@f1+2,w
  4221  0667  00B0               	movwf	??___ftdiv+2
  4222  0668  1003               	clrc
  4223  0669  0D2F               	rlf	??___ftdiv+1,w
  4224  066A  0D30               	rlf	??___ftdiv+2,w
  4225  066B  00B1               	movwf	??___ftdiv+3
  4226  066C  0831               	movf	??___ftdiv+3,w
  4227  066D  00B6               	movwf	___ftdiv@exp
  4228  066E  0836               	movf	___ftdiv@exp,w
  4229  066F  1D03               	btfss	3,2
  4230  0670  2E78               	goto	l2171
  4231  0671  3000               	movlw	0
  4232  0672  00A8               	movwf	?___ftdiv
  4233  0673  3000               	movlw	0
  4234  0674  00A9               	movwf	?___ftdiv+1
  4235  0675  3000               	movlw	0
  4236  0676  00AA               	movwf	?___ftdiv+2
  4237  0677  0008               	return
  4238  0678                     l2171:	
  4239  0678  0828               	movf	___ftdiv@f2,w
  4240  0679  00AE               	movwf	??___ftdiv
  4241  067A  0829               	movf	___ftdiv@f2+1,w
  4242  067B  00AF               	movwf	??___ftdiv+1
  4243  067C  082A               	movf	___ftdiv@f2+2,w
  4244  067D  00B0               	movwf	??___ftdiv+2
  4245  067E  1003               	clrc
  4246  067F  0D2F               	rlf	??___ftdiv+1,w
  4247  0680  0D30               	rlf	??___ftdiv+2,w
  4248  0681  00B1               	movwf	??___ftdiv+3
  4249  0682  0831               	movf	??___ftdiv+3,w
  4250  0683  00B7               	movwf	___ftdiv@sign
  4251  0684  0837               	movf	___ftdiv@sign,w
  4252  0685  1D03               	btfss	3,2
  4253  0686  2E8E               	goto	l2177
  4254  0687  3000               	movlw	0
  4255  0688  00A8               	movwf	?___ftdiv
  4256  0689  3000               	movlw	0
  4257  068A  00A9               	movwf	?___ftdiv+1
  4258  068B  3000               	movlw	0
  4259  068C  00AA               	movwf	?___ftdiv+2
  4260  068D  0008               	return
  4261  068E                     l2177:	
  4262  068E  3000               	movlw	0
  4263  068F  00B3               	movwf	___ftdiv@f3
  4264  0690  3000               	movlw	0
  4265  0691  00B4               	movwf	___ftdiv@f3+1
  4266  0692  3000               	movlw	0
  4267  0693  00B5               	movwf	___ftdiv@f3+2
  4268  0694  3089               	movlw	137
  4269  0695  0737               	addwf	___ftdiv@sign,w
  4270  0696  00AE               	movwf	??___ftdiv
  4271  0697  082E               	movf	??___ftdiv,w
  4272  0698  02B6               	subwf	___ftdiv@exp,f
  4273  0699  082B               	movf	___ftdiv@f1,w
  4274  069A  00AE               	movwf	??___ftdiv
  4275  069B  082C               	movf	___ftdiv@f1+1,w
  4276  069C  00AF               	movwf	??___ftdiv+1
  4277  069D  082D               	movf	___ftdiv@f1+2,w
  4278  069E  00B0               	movwf	??___ftdiv+2
  4279  069F  3010               	movlw	16
  4280  06A0                     u3245:	
  4281  06A0  1003               	clrc
  4282  06A1  0CB0               	rrf	??___ftdiv+2,f
  4283  06A2  0CAF               	rrf	??___ftdiv+1,f
  4284  06A3  0CAE               	rrf	??___ftdiv,f
  4285  06A4  3EFF               	addlw	-1
  4286  06A5  1D03               	skipz
  4287  06A6  2EA0               	goto	u3245
  4288  06A7  082E               	movf	??___ftdiv,w
  4289  06A8  00B1               	movwf	??___ftdiv+3
  4290  06A9  0831               	movf	??___ftdiv+3,w
  4291  06AA  00B7               	movwf	___ftdiv@sign
  4292  06AB  0828               	movf	___ftdiv@f2,w
  4293  06AC  00AE               	movwf	??___ftdiv
  4294  06AD  0829               	movf	___ftdiv@f2+1,w
  4295  06AE  00AF               	movwf	??___ftdiv+1
  4296  06AF  082A               	movf	___ftdiv@f2+2,w
  4297  06B0  00B0               	movwf	??___ftdiv+2
  4298  06B1  3010               	movlw	16
  4299  06B2                     u3255:	
  4300  06B2  1003               	clrc
  4301  06B3  0CB0               	rrf	??___ftdiv+2,f
  4302  06B4  0CAF               	rrf	??___ftdiv+1,f
  4303  06B5  0CAE               	rrf	??___ftdiv,f
  4304  06B6  3EFF               	addlw	-1
  4305  06B7  1D03               	skipz
  4306  06B8  2EB2               	goto	u3255
  4307  06B9  082E               	movf	??___ftdiv,w
  4308  06BA  00B1               	movwf	??___ftdiv+3
  4309  06BB  0831               	movf	??___ftdiv+3,w
  4310  06BC  06B7               	xorwf	___ftdiv@sign,f
  4311  06BD  3080               	movlw	128
  4312  06BE  00AE               	movwf	??___ftdiv
  4313  06BF  082E               	movf	??___ftdiv,w
  4314  06C0  05B7               	andwf	___ftdiv@sign,f
  4315  06C1  17AC               	bsf	___ftdiv@f1+1,7
  4316  06C2  30FF               	movlw	255
  4317  06C3  05AB               	andwf	___ftdiv@f1,f
  4318  06C4  30FF               	movlw	255
  4319  06C5  05AC               	andwf	___ftdiv@f1+1,f
  4320  06C6  3000               	movlw	0
  4321  06C7  05AD               	andwf	___ftdiv@f1+2,f
  4322  06C8  17A9               	bsf	___ftdiv@f2+1,7
  4323  06C9  30FF               	movlw	255
  4324  06CA  05A8               	andwf	___ftdiv@f2,f
  4325  06CB  30FF               	movlw	255
  4326  06CC  05A9               	andwf	___ftdiv@f2+1,f
  4327  06CD  3000               	movlw	0
  4328  06CE  05AA               	andwf	___ftdiv@f2+2,f
  4329  06CF  3018               	movlw	24
  4330  06D0  00AE               	movwf	??___ftdiv
  4331  06D1  082E               	movf	??___ftdiv,w
  4332  06D2  00B2               	movwf	___ftdiv@cntr
  4333  06D3                     l2191:	
  4334  06D3  3001               	movlw	1
  4335  06D4                     u3265:	
  4336  06D4  1003               	clrc
  4337  06D5  0DB3               	rlf	___ftdiv@f3,f
  4338  06D6  0DB4               	rlf	___ftdiv@f3+1,f
  4339  06D7  0DB5               	rlf	___ftdiv@f3+2,f
  4340  06D8  3EFF               	addlw	-1
  4341  06D9  1D03               	skipz
  4342  06DA  2ED4               	goto	u3265
  4343  06DB  082A               	movf	___ftdiv@f2+2,w
  4344  06DC  022D               	subwf	___ftdiv@f1+2,w
  4345  06DD  1D03               	skipz
  4346  06DE  2EE5               	goto	u3275
  4347  06DF  0829               	movf	___ftdiv@f2+1,w
  4348  06E0  022C               	subwf	___ftdiv@f1+1,w
  4349  06E1  1D03               	skipz
  4350  06E2  2EE5               	goto	u3275
  4351  06E3  0828               	movf	___ftdiv@f2,w
  4352  06E4  022B               	subwf	___ftdiv@f1,w
  4353  06E5                     u3275:	
  4354  06E5  1C03               	skipc
  4355  06E6  2EF2               	goto	l2199
  4356  06E7  0828               	movf	___ftdiv@f2,w
  4357  06E8  02AB               	subwf	___ftdiv@f1,f
  4358  06E9  0829               	movf	___ftdiv@f2+1,w
  4359  06EA  1C03               	skipc
  4360  06EB  0F29               	incfsz	___ftdiv@f2+1,w
  4361  06EC  02AC               	subwf	___ftdiv@f1+1,f
  4362  06ED  082A               	movf	___ftdiv@f2+2,w
  4363  06EE  1C03               	skipc
  4364  06EF  0A2A               	incf	___ftdiv@f2+2,w
  4365  06F0  02AD               	subwf	___ftdiv@f1+2,f
  4366  06F1  1433               	bsf	___ftdiv@f3,0
  4367  06F2                     l2199:	
  4368  06F2  3001               	movlw	1
  4369  06F3                     u3285:	
  4370  06F3  1003               	clrc
  4371  06F4  0DAB               	rlf	___ftdiv@f1,f
  4372  06F5  0DAC               	rlf	___ftdiv@f1+1,f
  4373  06F6  0DAD               	rlf	___ftdiv@f1+2,f
  4374  06F7  3EFF               	addlw	-1
  4375  06F8  1D03               	skipz
  4376  06F9  2EF3               	goto	u3285
  4377  06FA  3001               	movlw	1
  4378  06FB  02B2               	subwf	___ftdiv@cntr,f
  4379  06FC  1D03               	btfss	3,2
  4380  06FD  2ED3               	goto	l2191
  4381  06FE  0833               	movf	___ftdiv@f3,w
  4382  06FF  00A0               	movwf	___ftpack@arg
  4383  0700  0834               	movf	___ftdiv@f3+1,w
  4384  0701  00A1               	movwf	___ftpack@arg+1
  4385  0702  0835               	movf	___ftdiv@f3+2,w
  4386  0703  00A2               	movwf	___ftpack@arg+2
  4387  0704  0836               	movf	___ftdiv@exp,w
  4388  0705  00AE               	movwf	??___ftdiv
  4389  0706  082E               	movf	??___ftdiv,w
  4390  0707  00A3               	movwf	___ftpack@exp
  4391  0708  0837               	movf	___ftdiv@sign,w
  4392  0709  00AF               	movwf	??___ftdiv+1
  4393  070A  082F               	movf	??___ftdiv+1,w
  4394  070B  00A4               	movwf	___ftpack@sign
  4395  070C  120A  158A  2603   	fcall	___ftpack
  4396  070F  1283               	bcf	3,5	;RP0=0, select bank0
  4397  0710  1303               	bcf	3,6	;RP1=0, select bank0
  4398  0711  0820               	movf	?___ftpack,w
  4399  0712  00A8               	movwf	?___ftdiv
  4400  0713  0821               	movf	?___ftpack+1,w
  4401  0714  00A9               	movwf	?___ftdiv+1
  4402  0715  0822               	movf	?___ftpack+2,w
  4403  0716  00AA               	movwf	?___ftdiv+2
  4404  0717  0008               	return
  4405  0718                     __end_of___ftdiv:	
  4406                           
  4407                           	psect	text20
  4408  0C01                     __ptext20:	
  4409 ;; *************** function ___awtoft *****************
  4410 ;; Defined at:
  4411 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  c               2    8[BANK0 ] int 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  sign            1   13[BANK0 ] unsigned char 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  3    8[BANK0 ] float 
  4418 ;; Registers used:
  4419 ;;		wreg, status,2, status,0, pclath, cstack
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4425 ;;      Params:         0       3       0       0       0
  4426 ;;      Locals:         0       1       0       0       0
  4427 ;;      Temps:          0       2       0       0       0
  4428 ;;      Totals:         0       6       0       0       0
  4429 ;;Total ram usage:        6 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; Hardware stack levels required when called:    2
  4432 ;; This function calls:
  4433 ;;		___ftpack
  4434 ;; This function is called by:
  4435 ;;		_exp
  4436 ;;		_log
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           
  4441                           ;psect for function ___awtoft
  4442  0C01                     ___awtoft:	
  4443                           
  4444                           ;incstack = 0
  4445                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  4446  0C01  1283               	bcf	3,5	;RP0=0, select bank0
  4447  0C02  1303               	bcf	3,6	;RP1=0, select bank0
  4448  0C03  01AD               	clrf	___awtoft@sign
  4449  0C04  1FA9               	btfss	___awtoft@c+1,7
  4450  0C05  2C0D               	goto	l2161
  4451  0C06  09A8               	comf	___awtoft@c,f
  4452  0C07  09A9               	comf	___awtoft@c+1,f
  4453  0C08  0AA8               	incf	___awtoft@c,f
  4454  0C09  1903               	skipnz
  4455  0C0A  0AA9               	incf	___awtoft@c+1,f
  4456  0C0B  01AD               	clrf	___awtoft@sign
  4457  0C0C  0AAD               	incf	___awtoft@sign,f
  4458  0C0D                     l2161:	
  4459  0C0D  0828               	movf	___awtoft@c,w
  4460  0C0E  00A0               	movwf	___ftpack@arg
  4461  0C0F  0829               	movf	___awtoft@c+1,w
  4462  0C10  00A1               	movwf	___ftpack@arg+1
  4463  0C11  01A2               	clrf	___ftpack@arg+2
  4464  0C12  308E               	movlw	142
  4465  0C13  00AB               	movwf	??___awtoft
  4466  0C14  082B               	movf	??___awtoft,w
  4467  0C15  00A3               	movwf	___ftpack@exp
  4468  0C16  082D               	movf	___awtoft@sign,w
  4469  0C17  00AC               	movwf	??___awtoft+1
  4470  0C18  082C               	movf	??___awtoft+1,w
  4471  0C19  00A4               	movwf	___ftpack@sign
  4472  0C1A  120A  158A  2603   	fcall	___ftpack
  4473  0C1D  1283               	bcf	3,5	;RP0=0, select bank0
  4474  0C1E  1303               	bcf	3,6	;RP1=0, select bank0
  4475  0C1F  0820               	movf	?___ftpack,w
  4476  0C20  00A8               	movwf	?___awtoft
  4477  0C21  0821               	movf	?___ftpack+1,w
  4478  0C22  00A9               	movwf	?___awtoft+1
  4479  0C23  0822               	movf	?___ftpack+2,w
  4480  0C24  00AA               	movwf	?___awtoft+2
  4481  0C25  0008               	return
  4482  0C26                     __end_of___awtoft:	
  4483                           
  4484                           	psect	text21
  4485  0C26                     __ptext21:	
  4486 ;; *************** function ___lltoft *****************
  4487 ;; Defined at:
  4488 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lltoft.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  c               4    8[BANK0 ] unsigned long 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  exp             1   13[BANK0 ] unsigned char 
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  3    8[BANK0 ] float 
  4495 ;; Registers used:
  4496 ;;		wreg, status,2, status,0, pclath, cstack
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4502 ;;      Params:         0       4       0       0       0
  4503 ;;      Locals:         0       1       0       0       0
  4504 ;;      Temps:          0       1       0       0       0
  4505 ;;      Totals:         0       6       0       0       0
  4506 ;;Total ram usage:        6 bytes
  4507 ;; Hardware stack levels used:    1
  4508 ;; Hardware stack levels required when called:    2
  4509 ;; This function calls:
  4510 ;;		___ftpack
  4511 ;; This function is called by:
  4512 ;;		_pow
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           
  4517                           ;psect for function ___lltoft
  4518  0C26                     ___lltoft:	
  4519                           
  4520                           ;incstack = 0
  4521                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4522  0C26  308E               	movlw	142
  4523  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  4524  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  4525  0C29  00AC               	movwf	??___lltoft
  4526  0C2A  082C               	movf	??___lltoft,w
  4527  0C2B  00AD               	movwf	___lltoft@exp
  4528  0C2C                     l2279:	
  4529  0C2C  30FF               	movlw	255
  4530  0C2D  052B               	andwf	___lltoft@c+3,w
  4531  0C2E  1903               	btfsc	3,2
  4532  0C2F  2C3E               	goto	l2281
  4533  0C30  3001               	movlw	1
  4534  0C31                     u3425:	
  4535  0C31  1003               	clrc
  4536  0C32  0CAB               	rrf	___lltoft@c+3,f
  4537  0C33  0CAA               	rrf	___lltoft@c+2,f
  4538  0C34  0CA9               	rrf	___lltoft@c+1,f
  4539  0C35  0CA8               	rrf	___lltoft@c,f
  4540  0C36  3EFF               	addlw	-1
  4541  0C37  1D03               	skipz
  4542  0C38  2C31               	goto	u3425
  4543  0C39  3001               	movlw	1
  4544  0C3A  00AC               	movwf	??___lltoft
  4545  0C3B  082C               	movf	??___lltoft,w
  4546  0C3C  07AD               	addwf	___lltoft@exp,f
  4547  0C3D  2C2C               	goto	l2279
  4548  0C3E                     l2281:	
  4549  0C3E  0828               	movf	___lltoft@c,w
  4550  0C3F  00A0               	movwf	___ftpack@arg
  4551  0C40  0829               	movf	___lltoft@c+1,w
  4552  0C41  00A1               	movwf	___ftpack@arg+1
  4553  0C42  082A               	movf	___lltoft@c+2,w
  4554  0C43  00A2               	movwf	___ftpack@arg+2
  4555  0C44  082D               	movf	___lltoft@exp,w
  4556  0C45  00AC               	movwf	??___lltoft
  4557  0C46  082C               	movf	??___lltoft,w
  4558  0C47  00A3               	movwf	___ftpack@exp
  4559  0C48  01A4               	clrf	___ftpack@sign
  4560  0C49  120A  158A  2603   	fcall	___ftpack
  4561  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  4562  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  4563  0C4E  0820               	movf	?___ftpack,w
  4564  0C4F  00A8               	movwf	?___lltoft
  4565  0C50  0821               	movf	?___ftpack+1,w
  4566  0C51  00A9               	movwf	?___lltoft+1
  4567  0C52  0822               	movf	?___ftpack+2,w
  4568  0C53  00AA               	movwf	?___lltoft+2
  4569  0C54  0008               	return
  4570  0C55                     __end_of___lltoft:	
  4571                           
  4572                           	psect	text22
  4573  0BA4                     __ptext22:	
  4574 ;; *************** function ___lwtoft *****************
  4575 ;; Defined at:
  4576 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwtoft.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  c               2    8[BANK0 ] unsigned int 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  3    8[BANK0 ] float 
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0, pclath, cstack
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4590 ;;      Params:         0       3       0       0       0
  4591 ;;      Locals:         0       0       0       0       0
  4592 ;;      Temps:          0       1       0       0       0
  4593 ;;      Totals:         0       4       0       0       0
  4594 ;;Total ram usage:        4 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    2
  4597 ;; This function calls:
  4598 ;;		___ftpack
  4599 ;; This function is called by:
  4600 ;;		_main
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           
  4605                           ;psect for function ___lwtoft
  4606  0BA4                     ___lwtoft:	
  4607                           
  4608                           ;incstack = 0
  4609                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  4610  0BA4  1283               	bcf	3,5	;RP0=0, select bank0
  4611  0BA5  1303               	bcf	3,6	;RP1=0, select bank0
  4612  0BA6  0828               	movf	___lwtoft@c,w
  4613  0BA7  00A0               	movwf	___ftpack@arg
  4614  0BA8  0829               	movf	___lwtoft@c+1,w
  4615  0BA9  00A1               	movwf	___ftpack@arg+1
  4616  0BAA  01A2               	clrf	___ftpack@arg+2
  4617  0BAB  308E               	movlw	142
  4618  0BAC  00AB               	movwf	??___lwtoft
  4619  0BAD  082B               	movf	??___lwtoft,w
  4620  0BAE  00A3               	movwf	___ftpack@exp
  4621  0BAF  01A4               	clrf	___ftpack@sign
  4622  0BB0  120A  158A  2603   	fcall	___ftpack
  4623  0BB3  1283               	bcf	3,5	;RP0=0, select bank0
  4624  0BB4  1303               	bcf	3,6	;RP1=0, select bank0
  4625  0BB5  0820               	movf	?___ftpack,w
  4626  0BB6  00A8               	movwf	?___lwtoft
  4627  0BB7  0821               	movf	?___ftpack+1,w
  4628  0BB8  00A9               	movwf	?___lwtoft+1
  4629  0BB9  0822               	movf	?___ftpack+2,w
  4630  0BBA  00AA               	movwf	?___lwtoft+2
  4631  0BBB  0008               	return
  4632  0BBC                     __end_of___lwtoft:	
  4633                           
  4634                           	psect	text23
  4635  0E03                     __ptext23:	
  4636 ;; *************** function ___ftpack *****************
  4637 ;; Defined at:
  4638 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;  arg             3    0[BANK0 ] unsigned um
  4641 ;;  exp             1    3[BANK0 ] unsigned char 
  4642 ;;  sign            1    4[BANK0 ] unsigned char 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;		None
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  3    0[BANK0 ] float 
  4647 ;; Registers used:
  4648 ;;		wreg, status,2, status,0
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4654 ;;      Params:         0       5       0       0       0
  4655 ;;      Locals:         0       0       0       0       0
  4656 ;;      Temps:          0       3       0       0       0
  4657 ;;      Totals:         0       8       0       0       0
  4658 ;;Total ram usage:        8 bytes
  4659 ;; Hardware stack levels used:    1
  4660 ;; Hardware stack levels required when called:    1
  4661 ;; This function calls:
  4662 ;;		Nothing
  4663 ;; This function is called by:
  4664 ;;		___altoft
  4665 ;;		___awtoft
  4666 ;;		___ftadd
  4667 ;;		___ftdiv
  4668 ;;		___ftmul
  4669 ;;		___lltoft
  4670 ;;		___lwtoft
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           
  4675                           ;psect for function ___ftpack
  4676  0E03                     ___ftpack:	
  4677                           
  4678                           ;incstack = 0
  4679                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4680  0E03  1283               	bcf	3,5	;RP0=0, select bank0
  4681  0E04  1303               	bcf	3,6	;RP1=0, select bank0
  4682  0E05  0823               	movf	___ftpack@exp,w
  4683  0E06  1903               	btfsc	3,2
  4684  0E07  2E0D               	goto	l1955
  4685  0E08  0822               	movf	___ftpack@arg+2,w
  4686  0E09  0421               	iorwf	___ftpack@arg+1,w
  4687  0E0A  0420               	iorwf	___ftpack@arg,w
  4688  0E0B  1D03               	skipz
  4689  0E0C  2E20               	goto	l1961
  4690  0E0D                     l1955:	
  4691  0E0D  3000               	movlw	0
  4692  0E0E  00A0               	movwf	?___ftpack
  4693  0E0F  3000               	movlw	0
  4694  0E10  00A1               	movwf	?___ftpack+1
  4695  0E11  3000               	movlw	0
  4696  0E12  00A2               	movwf	?___ftpack+2
  4697  0E13  0008               	return
  4698  0E14                     l1959:	
  4699  0E14  3001               	movlw	1
  4700  0E15  00A5               	movwf	??___ftpack
  4701  0E16  0825               	movf	??___ftpack,w
  4702  0E17  07A3               	addwf	___ftpack@exp,f
  4703  0E18  3001               	movlw	1
  4704  0E19                     u2675:	
  4705  0E19  1003               	clrc
  4706  0E1A  0CA2               	rrf	___ftpack@arg+2,f
  4707  0E1B  0CA1               	rrf	___ftpack@arg+1,f
  4708  0E1C  0CA0               	rrf	___ftpack@arg,f
  4709  0E1D  3EFF               	addlw	-1
  4710  0E1E  1D03               	skipz
  4711  0E1F  2E19               	goto	u2675
  4712  0E20                     l1961:	
  4713  0E20  30FE               	movlw	254
  4714  0E21  0522               	andwf	___ftpack@arg+2,w
  4715  0E22  1903               	btfsc	3,2
  4716  0E23  2E3B               	goto	l307
  4717  0E24  2E14               	goto	l1959
  4718  0E25                     l1963:	
  4719  0E25  3001               	movlw	1
  4720  0E26  00A5               	movwf	??___ftpack
  4721  0E27  0825               	movf	??___ftpack,w
  4722  0E28  07A3               	addwf	___ftpack@exp,f
  4723  0E29  3001               	movlw	1
  4724  0E2A  07A0               	addwf	___ftpack@arg,f
  4725  0E2B  3000               	movlw	0
  4726  0E2C  1803               	skipnc
  4727  0E2D  3001               	movlw	1
  4728  0E2E  07A1               	addwf	___ftpack@arg+1,f
  4729  0E2F  3000               	movlw	0
  4730  0E30  1803               	skipnc
  4731  0E31  3001               	movlw	1
  4732  0E32  07A2               	addwf	___ftpack@arg+2,f
  4733  0E33  3001               	movlw	1
  4734  0E34                     u2695:	
  4735  0E34  1003               	clrc
  4736  0E35  0CA2               	rrf	___ftpack@arg+2,f
  4737  0E36  0CA1               	rrf	___ftpack@arg+1,f
  4738  0E37  0CA0               	rrf	___ftpack@arg,f
  4739  0E38  3EFF               	addlw	-1
  4740  0E39  1D03               	skipz
  4741  0E3A  2E34               	goto	u2695
  4742  0E3B                     l307:	
  4743  0E3B  30FF               	movlw	255
  4744  0E3C  0522               	andwf	___ftpack@arg+2,w
  4745  0E3D  1903               	btfsc	3,2
  4746  0E3E  2E4A               	goto	l1971
  4747  0E3F  2E25               	goto	l1963
  4748  0E40                     l1969:	
  4749  0E40  3001               	movlw	1
  4750  0E41  02A3               	subwf	___ftpack@exp,f
  4751  0E42  3001               	movlw	1
  4752  0E43                     u2715:	
  4753  0E43  1003               	clrc
  4754  0E44  0DA0               	rlf	___ftpack@arg,f
  4755  0E45  0DA1               	rlf	___ftpack@arg+1,f
  4756  0E46  0DA2               	rlf	___ftpack@arg+2,f
  4757  0E47  3EFF               	addlw	-1
  4758  0E48  1D03               	skipz
  4759  0E49  2E43               	goto	u2715
  4760  0E4A                     l1971:	
  4761  0E4A  1BA1               	btfsc	___ftpack@arg+1,7
  4762  0E4B  2E50               	goto	l314
  4763  0E4C  3002               	movlw	2
  4764  0E4D  0223               	subwf	___ftpack@exp,w
  4765  0E4E  1803               	skipnc
  4766  0E4F  2E40               	goto	l1969
  4767  0E50                     l314:	
  4768  0E50  1823               	btfsc	___ftpack@exp,0
  4769  0E51  2E58               	goto	l315
  4770  0E52  30FF               	movlw	255
  4771  0E53  05A0               	andwf	___ftpack@arg,f
  4772  0E54  307F               	movlw	127
  4773  0E55  05A1               	andwf	___ftpack@arg+1,f
  4774  0E56  30FF               	movlw	255
  4775  0E57  05A2               	andwf	___ftpack@arg+2,f
  4776  0E58                     l315:	
  4777  0E58  1003               	clrc
  4778  0E59  0CA3               	rrf	___ftpack@exp,f
  4779  0E5A  0823               	movf	___ftpack@exp,w
  4780  0E5B  00A5               	movwf	??___ftpack
  4781  0E5C  01A6               	clrf	??___ftpack+1
  4782  0E5D  01A7               	clrf	??___ftpack+2
  4783  0E5E  3010               	movlw	16
  4784  0E5F                     u2755:	
  4785  0E5F  1003               	clrc
  4786  0E60  0DA5               	rlf	??___ftpack,f
  4787  0E61  0DA6               	rlf	??___ftpack+1,f
  4788  0E62  0DA7               	rlf	??___ftpack+2,f
  4789  0E63  3EFF               	addlw	-1
  4790  0E64  1D03               	skipz
  4791  0E65  2E5F               	goto	u2755
  4792  0E66  0825               	movf	??___ftpack,w
  4793  0E67  04A0               	iorwf	___ftpack@arg,f
  4794  0E68  0826               	movf	??___ftpack+1,w
  4795  0E69  04A1               	iorwf	___ftpack@arg+1,f
  4796  0E6A  0827               	movf	??___ftpack+2,w
  4797  0E6B  04A2               	iorwf	___ftpack@arg+2,f
  4798  0E6C  0824               	movf	___ftpack@sign,w
  4799  0E6D  1903               	btfsc	3,2
  4800  0E6E  0008               	return
  4801  0E6F  17A2               	bsf	___ftpack@arg+2,7
  4802  0E70  0008               	return
  4803  0E71                     __end_of___ftpack:	
  4804                           
  4805                           	psect	text24
  4806  07B1                     __ptext24:	
  4807 ;; *************** function ___awmod *****************
  4808 ;; Defined at:
  4809 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awmod.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  divisor         2   20[BANK0 ] int 
  4812 ;;  dividend        2   22[BANK0 ] int 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  sign            1   26[BANK0 ] unsigned char 
  4815 ;;  counter         1   25[BANK0 ] unsigned char 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  2   20[BANK0 ] int 
  4818 ;; Registers used:
  4819 ;;		wreg, status,2, status,0
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4825 ;;      Params:         0       4       0       0       0
  4826 ;;      Locals:         0       2       0       0       0
  4827 ;;      Temps:          0       1       0       0       0
  4828 ;;      Totals:         0       7       0       0       0
  4829 ;;Total ram usage:        7 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; Hardware stack levels required when called:    1
  4832 ;; This function calls:
  4833 ;;		Nothing
  4834 ;; This function is called by:
  4835 ;;		_main
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           
  4840                           ;psect for function ___awmod
  4841  07B1                     ___awmod:	
  4842                           
  4843                           ;incstack = 0
  4844                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4845  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  4846  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  4847  07B3  01BA               	clrf	___awmod@sign
  4848  07B4  1FB7               	btfss	___awmod@dividend+1,7
  4849  07B5  2FBD               	goto	l2409
  4850  07B6  09B6               	comf	___awmod@dividend,f
  4851  07B7  09B7               	comf	___awmod@dividend+1,f
  4852  07B8  0AB6               	incf	___awmod@dividend,f
  4853  07B9  1903               	skipnz
  4854  07BA  0AB7               	incf	___awmod@dividend+1,f
  4855  07BB  01BA               	clrf	___awmod@sign
  4856  07BC  0ABA               	incf	___awmod@sign,f
  4857  07BD                     l2409:	
  4858  07BD  1FB5               	btfss	___awmod@divisor+1,7
  4859  07BE  2FC4               	goto	l2413
  4860  07BF  09B4               	comf	___awmod@divisor,f
  4861  07C0  09B5               	comf	___awmod@divisor+1,f
  4862  07C1  0AB4               	incf	___awmod@divisor,f
  4863  07C2  1903               	skipnz
  4864  07C3  0AB5               	incf	___awmod@divisor+1,f
  4865  07C4                     l2413:	
  4866  07C4  0834               	movf	___awmod@divisor,w
  4867  07C5  0435               	iorwf	___awmod@divisor+1,w
  4868  07C6  1903               	btfsc	3,2
  4869  07C7  2FF1               	goto	l2431
  4870  07C8  01B9               	clrf	___awmod@counter
  4871  07C9  0AB9               	incf	___awmod@counter,f
  4872  07CA                     l2421:	
  4873  07CA  1BB5               	btfsc	___awmod@divisor+1,7
  4874  07CB  2FD8               	goto	l2423
  4875  07CC  3001               	movlw	1
  4876  07CD                     u3645:	
  4877  07CD  1003               	clrc
  4878  07CE  0DB4               	rlf	___awmod@divisor,f
  4879  07CF  0DB5               	rlf	___awmod@divisor+1,f
  4880  07D0  3EFF               	addlw	-1
  4881  07D1  1D03               	skipz
  4882  07D2  2FCD               	goto	u3645
  4883  07D3  3001               	movlw	1
  4884  07D4  00B8               	movwf	??___awmod
  4885  07D5  0838               	movf	??___awmod,w
  4886  07D6  07B9               	addwf	___awmod@counter,f
  4887  07D7  2FCA               	goto	l2421
  4888  07D8                     l2423:	
  4889  07D8  0835               	movf	___awmod@divisor+1,w
  4890  07D9  0237               	subwf	___awmod@dividend+1,w
  4891  07DA  1D03               	skipz
  4892  07DB  2FDE               	goto	u3665
  4893  07DC  0834               	movf	___awmod@divisor,w
  4894  07DD  0236               	subwf	___awmod@dividend,w
  4895  07DE                     u3665:	
  4896  07DE  1C03               	skipc
  4897  07DF  2FE6               	goto	l2427
  4898  07E0  0834               	movf	___awmod@divisor,w
  4899  07E1  02B6               	subwf	___awmod@dividend,f
  4900  07E2  0835               	movf	___awmod@divisor+1,w
  4901  07E3  1C03               	skipc
  4902  07E4  03B7               	decf	___awmod@dividend+1,f
  4903  07E5  02B7               	subwf	___awmod@dividend+1,f
  4904  07E6                     l2427:	
  4905  07E6  3001               	movlw	1
  4906  07E7                     u3675:	
  4907  07E7  1003               	clrc
  4908  07E8  0CB5               	rrf	___awmod@divisor+1,f
  4909  07E9  0CB4               	rrf	___awmod@divisor,f
  4910  07EA  3EFF               	addlw	-1
  4911  07EB  1D03               	skipz
  4912  07EC  2FE7               	goto	u3675
  4913  07ED  3001               	movlw	1
  4914  07EE  02B9               	subwf	___awmod@counter,f
  4915  07EF  1D03               	btfss	3,2
  4916  07F0  2FD8               	goto	l2423
  4917  07F1                     l2431:	
  4918  07F1  083A               	movf	___awmod@sign,w
  4919  07F2  1903               	btfsc	3,2
  4920  07F3  2FF9               	goto	l2435
  4921  07F4  09B6               	comf	___awmod@dividend,f
  4922  07F5  09B7               	comf	___awmod@dividend+1,f
  4923  07F6  0AB6               	incf	___awmod@dividend,f
  4924  07F7  1903               	skipnz
  4925  07F8  0AB7               	incf	___awmod@dividend+1,f
  4926  07F9                     l2435:	
  4927  07F9  0837               	movf	___awmod@dividend+1,w
  4928  07FA  00B5               	movwf	?___awmod+1
  4929  07FB  0836               	movf	___awmod@dividend,w
  4930  07FC  00B4               	movwf	?___awmod
  4931  07FD  0008               	return
  4932  07FE                     __end_of___awmod:	
  4933                           
  4934                           	psect	text25
  4935  0BDD                     __ptext25:	
  4936 ;; *************** function _isr *****************
  4937 ;; Defined at:
  4938 ;;		line 21 in file "jgatoraton1.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;		None
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;		None
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  1    wreg      void 
  4945 ;; Registers used:
  4946 ;;		wreg, status,2, status,0
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4952 ;;      Params:         0       0       0       0       0
  4953 ;;      Locals:         0       0       0       0       0
  4954 ;;      Temps:          6       0       0       0       0
  4955 ;;      Totals:         6       0       0       0       0
  4956 ;;Total ram usage:        6 bytes
  4957 ;; Hardware stack levels used:    1
  4958 ;; This function calls:
  4959 ;;		Nothing
  4960 ;; This function is called by:
  4961 ;;		Interrupt level 1
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           
  4966                           ;psect for function _isr
  4967  0BDD                     _isr:	
  4968                           
  4969                           ;jgatoraton1.c: 31: if(INTCONbits.INTF == 1)
  4970  0BDD  1C8B               	btfss	11,1	;volatile
  4971  0BDE  2BF5               	goto	i1l39
  4972                           
  4973                           ;jgatoraton1.c: 32: {
  4974                           ;jgatoraton1.c: 33: if(GATO!=1)
  4975  0BDF  1683               	bsf	3,5	;RP0=1, select bank1
  4976  0BE0  1303               	bcf	3,6	;RP1=0, select bank1
  4977  0BE1  0332               	decf	_GATO^(0+128),w
  4978  0BE2  0433               	iorwf	(_GATO+1)^(0+128),w
  4979  0BE3  1903               	btfsc	3,2
  4980  0BE4  2BF0               	goto	i1l1909
  4981                           
  4982                           ;jgatoraton1.c: 34: GATO = GATO/2;
  4983  0BE5  0833               	movf	(_GATO+1)^(0+128),w
  4984  0BE6  00F1               	movwf	??_isr+1
  4985  0BE7  0832               	movf	_GATO^(0+128),w
  4986  0BE8  00F0               	movwf	??_isr
  4987  0BE9  1003               	clrc
  4988  0BEA  0CF1               	rrf	??_isr+1,f
  4989  0BEB  0CF0               	rrf	??_isr,f
  4990  0BEC  0870               	movf	??_isr,w
  4991  0BED  00B2               	movwf	_GATO^(0+128)
  4992  0BEE  0871               	movf	??_isr+1,w
  4993  0BEF  00B3               	movwf	(_GATO+1)^(0+128)
  4994  0BF0                     i1l1909:	
  4995                           
  4996                           ;jgatoraton1.c: 35: x = 1;
  4997  0BF0  3001               	movlw	1
  4998  0BF1  00FA               	movwf	_x
  4999  0BF2  3000               	movlw	0
  5000  0BF3  00FB               	movwf	_x+1
  5001                           
  5002                           ;jgatoraton1.c: 36: INTCONbits.INTF = 0;
  5003  0BF4  108B               	bcf	11,1	;volatile
  5004  0BF5                     i1l39:	
  5005  0BF5  0875               	movf	??_isr+5,w
  5006  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  5007  0BF7  00FF               	movwf	127
  5008  0BF8  0874               	movf	??_isr+4,w
  5009  0BF9  008A               	movwf	10
  5010  0BFA  0873               	movf	??_isr+3,w
  5011  0BFB  0084               	movwf	4
  5012  0BFC  0E72               	swapf	(??_isr+2)^(0+-128),w
  5013  0BFD  0083               	movwf	3
  5014  0BFE  0EFE               	swapf	126,f
  5015  0BFF  0E7E               	swapf	126,w
  5016  0C00  0009               	retfie
  5017  0C01                     __end_of_isr:	
  5018  007E                     btemp	set	126	;btemp
  5019  007E                     wtemp0	set	126
  5020                           
  5021                           	psect	intentry
  5022  0004                     __pintentry:	
  5023                           ;incstack = 0
  5024                           ; Regs used in _isr: [wreg+status,2+status,0]
  5025                           
  5026  0004                     interrupt_function:	
  5027  007E                     saved_w	set	btemp
  5028  0004  00FE               	movwf	btemp
  5029  0005  0E03               	swapf	3,w
  5030  0006  00F2               	movwf	??_isr+2
  5031  0007  0804               	movf	4,w
  5032  0008  00F3               	movwf	??_isr+3
  5033  0009  080A               	movf	10,w
  5034  000A  00F4               	movwf	??_isr+4
  5035  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5036  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5037  000D  087F               	movf	btemp+1,w
  5038  000E  00F5               	movwf	??_isr+5
  5039  000F  120A  158A  2BDD   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    57
    Data        8
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     79      79
    BANK1            80     18      24
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(1) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_pow
    _rand->___lmul
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___ftadd
    ___fttol->___lwtoft
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lwtoft->___ftpack
    ___awmod->_rand

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_pow

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   67387
                                             77 BANK0      2     2      0
                                             11 BANK1      7     7      0
                            ___awmod
                            ___fttol
                           ___lwtoft
                                _pow
                               _rand
                            _validar
 ---------------------------------------------------------------------------------
 (1) _validar                                              3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     266
                                             13 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     266
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _pow                                                 18    12      6   63642
                                             70 BANK0      7     1      6
                                              0 BANK1     11    11      0
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                           ___lwtoft (ARG)
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   20609
                                             53 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _exp                                                 10     7      3   34681
                                             60 BANK0     10     7      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (3) _ldexp                                                7     2      5    1444
                                             53 BANK0      7     2      5
                             ___ftge
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                                9     6      3    9209
                                             43 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     582
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     464
                                             12 BANK0     14    10      4
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                              12     6      6    1090
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    2517
                                             26 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     4      6    8467
                                             43 BANK0     10     4      6
                             ___bmul
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    3476
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     224
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    4349
                                             43 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    4123
                                             30 BANK0     13     7      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     260
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2798
                                              8 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2511
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2415
                                              8 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2344
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2248
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     563
                                             20 BANK0      7     3      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   ___fttol
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _pow
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
     ___fttol
       ___lwtoft (ARG)
         ___ftpack
     ___lltoft
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     _exp (ARG)
       ___awtoft
         ___ftpack
       ___ftdiv
         ___ftpack
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       ___fttol
         ___lwtoft (ARG)
           ___ftpack
       _eval_poly
         ___bmul
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftge
         ___fttol
           ___lwtoft (ARG)
             ___ftpack
         _frexp
       _ldexp
         ___ftge
         _eval_poly (ARG)
           ___bmul
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___bmul
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         _frexp
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___bmul
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       _frexp
   _rand
     ___lmul
   _validar

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     12      18       7       30.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      73      12        0.0%
ABS                  0      0      73       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue Oct 03 01:32:30 2017

            ___altoft@exp 0040                         _x 007A                         pc 0002  
          ___bmul@product 0022               __CFG_CP$OFF 0000             ___altoft@sign 0041  
                      l42 0D3B                        l43 0D55                        l45 0D3F  
                      fsr 0004              ___ftadd@exp1 004A              ___ftadd@exp2 0049  
            ___ftadd@sign 0048                       l314 0E50                       l315 0E58  
                     l307 0E3B                       l510 0070                       l338 0382  
                     l398 0FE6              __CFG_CPD$OFF 0000                       _exp 019B  
                     _log 0592                       _isr 0BDD                       _pow 004D  
                     fsr0 0004                       indf 0000              ___awmod@sign 003A  
            __CFG_LVP$OFF 0000              ___ftdiv@cntr 0032              ___ftdiv@sign 0037  
                    l2023 030A                      l2111 053C                      l2007 0CAC  
                    l2041 0333                      l2009 0CBE                      l2051 0359  
                    l2019 0303                      l2123 0564                      l2107 052C  
                    l2061 037E                      l2053 035D                      l2029 0319  
                    l2141 0CEC                      l2047 0348                      l2119 0554  
                    l2161 0C0D                      l2065 0394                      l2049 0354  
                    l1433 0DCD                      l1505 0F8C                      l2233 0749  
                    l2313 01A9                      l2171 0678                      l2059 0372  
                    l2219 0BC5                      l1531 0FDB                      l1523 0FBE  
                    l2331 0222                      l2421 07CA                      l2413 07C4  
                    l2069 03A6                      l1437 0DF4                      l1533 0FE9  
                    l1525 0FCE                      l2237 0752                      l1701 0F59  
                    l2325 01EF                      l2423 07D8                      l2431 07F1  
                    l2191 06D3                      l2079 03C9                      l2095 04ED  
                    l2247 07A8                      l2319 01CB                      l2263 0C5F  
                    l2409 07BD                      l2281 0C3E                      l2177 068E  
                    l2089 04D7                      l2257 0EE3                      l1537 0FF7  
                    l2435 07F9                      l2427 07E6                      l2291 05B6  
                    l2371 0079                      l2267 0C75                      l1811 0D4E  
                    l2349 02C2                      l2453 03FE                      l2279 0C2C  
                    l2199 06F2                      l2297 05CC                      l2385 00F5  
                    l2377 0085                      l1675 0EF8                      l1685 0F21  
                    l2389 0115                      l2479 047F                      l1961 0E20  
                    l1697 0F50                      l1971 0E4A                      l1963 0E25  
                    l1955 0E0D                      l1959 0E14                      l1969 0E40  
                    l1985 0B95                      l1989 0B9B                      ?_exp 005C  
                    ?_log 0055                      ?_isr 0070                      ?_pow 0066  
            __CFG_WDTE$ON 0000                      _GATO 00B2                      u2005 0FDD  
                    u3005 0373                      u2225 0F2A                      u3125 053D  
                    u3135 0545                      u2415 0D22                      u3500 0207  
                    u3245 06A0                      u3085 04F9                      u3405 0C7F  
                    u3255 06B2                      u3175 0565                      u3095 050B  
                    u1751 0DC0                      u1752 0DC1                      u3425 0C31  
                    u3265 06D4                      u3185 056D                      u1753 0DC6  
                    u1754 0DC7                      u2715 0E43                      u3275 06E5  
                    u1771 0DE7                      u1772 0DE8                      u3285 06F3  
                    u2805 0CB1                      u1773 0DED                      u1774 0DEE  
                    u1945 0F93                      u3545 0D96                      u3705 047B  
                    u3490 0206                      u2755 0E5F                      u2675 0E19  
                    u2915 0334                      u3395 0C77                      u3715 0488  
                    u3645 07CD                      u2695 0E34                      u1975 0FBF  
                    u3727 0495                      u3665 07DE                      u2945 0349  
                    u3737 04AD                      u3675 07E7                      u3595 00E4  
                    u3747 0D31                      i1l39 0BF5                      u2975 035E  
            __CFG_WRT$OFF 0000                      _main 03E3              ___ftpack@arg 0020  
                    _rand 0D5D              ___ftpack@exp 0023                      btemp 007E  
                    exp@x 005C                      log@x 0055                      pow@x 0066  
                    pow@y 0069                      start 0012             __CFG_IESO$OFF 0000  
       ___bmul@multiplier 0023             __CFG_MCLRE$ON 0000              ___ftmul@cntr 003C  
            ___ftmul@sign 003D              ___fttol@exp1 0039                     ??_exp 005F  
                   ??_log 0058              ___fttol@lval 0035                     ??_isr 0070  
                   ??_pow 006C                     ?_main 0070                     ?_rand 002D  
         __end_of___ftadd 03E3           __end_of___awmod 07FE           __end_of___ftdiv 0718  
         __end_of___ftneg 0B91                     _ANSEL 0188           __end_of___ftmul 0592  
         __end_of___ftsub 0BDD           __end_of___fttol 1000                     _RATON 00B4  
                   _PORTC 0007                     _PORTD 0008                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088       ___lmul@multiplicand 0024  
            ___lltoft@exp 002D            __CFG_FCMEN$OFF 0000             ___awtoft@sign 002D  
                   _floor 0718                     _ldexp 0EEA                     _frexp 0CD8  
                   _errno 00B6                     _randx 0076             ___ftpack@sign 0024  
          __CFG_BOREN$OFF 0000           __end_of_validar 0D5D                     pclath 000A  
                   pow@yi 00A7                     status 0003                     wtemp0 007E  
             exp@exponent 0063               ldexp@newexp 0058           __initialization 0015  
             log@exponent 0059              __end_of_main 04BF              __end_of_rand 0DA4  
                  ??_main 006D             ___fttol@sign1 0034                    ??_rand 002F  
                  ?_floor 004B                    ?_ldexp 0055                    ?_frexp 0020  
        __end_of___altoft 0CD8          __end_of___awtoft 0C26          __end_of___ftpack 0E71  
                  _ANSELH 0189          __end_of___lltoft 0C55                    i1l1909 0BF0  
        __end_of___lwtoft 0BBC            __CFG_PWRTE$OFF 0000                    ___bmul 0B91  
                  ___ftge 0DA4                    ___lmul 0C55                 ??___ftadd 0044  
               ??___awmod 0038                 ??___ftdiv 002E                 ??___ftneg 0023  
               ??___ftmul 0034                 ??___ftsub 0051                 ??___fttol 0030  
         ___awmod@divisor 0034           ___awmod@counter 0039                    floor@i 004F  
                  floor@x 004B     ___ftmul@f3_as_product 0039              __pdataCOMMON 0076  
                  saved_w 007E                 ??_validar 0020          __end_ofexp@coeff 0824  
        __end_oflog@coeff 083F   __end_of__initialization 0049                ___altoft@c 003A  
              ___ftadd@f1 003E                ___ftadd@f2 0041                ___ftge@ff1 0020  
              ___ftge@ff2 0023              eval_poly@res 0052                ___ftdiv@f1 002B  
              ___ftdiv@f2 0028                ___ftdiv@f3 0033                ___ftneg@f1 0020  
              ___awtoft@c 0028       ___bmul@multiplicand 0020                ___ftmul@f1 002E  
              ___ftmul@f2 0031                ___ftsub@f1 004E                ___ftsub@f2 004B  
              ___fttol@f1 002C            __pcstackCOMMON 0070              __pidataBANK1 0B7F  
              ___lltoft@c 0028             __end_of_floor 07B1             __end_of_ldexp 0F72  
           __end_of_frexp 0D1A                ___lwtoft@c 0028                   ??_floor 004E  
                 ??_ldexp 005A                   ??_frexp 0024                __pbssBANK1 00B6  
      __size_of_eval_poly 0079                __pmaintext 03E3                   ?___bmul 0020  
                 ?___ftge 0020                   ?___lmul 0020                __pintentry 0004  
               ?___altoft 003A            ___lmul@product 0029                 ?___awtoft 0028  
               ?___ftpack 0020                 ?___lltoft 0028                 ?___lwtoft 0028  
              __stringtab 0800           __size_of___bmul 0013           __size_of___ftge 005F  
         __size_of___lmul 0041                   ___ftadd 02DA                   ___awmod 07B1  
                 ___ftdiv 0660                   ___ftneg 0B87                   ___ftmul 04BF  
                 ___ftsub 0BBC                   ___fttol 0F72                ??___altoft 003E  
                 _exp$647 0060                ??___awtoft 002B                ??___ftpack 0025  
       __end_of_eval_poly 0EEA                ??___lltoft 002C                   __ptext1 0D1A  
                 __ptext2 0D5D                   __ptext3 0C55                   __ptext4 004D  
                 __ptext5 0592                   __ptext6 019B                   __ptext7 0EEA  
                 __ptext8 0718                   __ptext9 0CD8                ??___lwtoft 002B  
                 _pow$645 00A0                   _pow$646 00A3              __size_of_exp 013F  
            __size_of_log 00CE              __size_of_isr 0024              __size_of_pow 014E  
        ___awmod@dividend 0036                   _validar 0D1A                   main@aux 00AE  
    end_of_initialization 0049                   exp@sign 0065                   pow@sign 00A6  
               _PORTBbits 0006                 _PORTDbits 0008               ___ftdiv@exp 0036  
             ___ftmul@exp 0038            __end_of___bmul 0BA4            __end_of___ftge 0E03  
          __end_of___lmul 0C96             __pidataCOMMON 0B83                floor@expon 0052  
     start_initialization 0015                eval_poly@d 004E                eval_poly@n 004F  
              eval_poly@x 004B                ldexp@value 0055               __end_of_exp 02DA  
             __end_of_log 0660               __end_of_isr 0C01               __end_of_pow 019B  
              frexp@value 0020  __CFG_FOSC$INTRC_NOCLKOUT 0000                  ??___bmul 0021  
                ??___ftge 0026                  ??___lmul 0028               __pdataBANK1 00B2  
       __size_of___altoft 0042         __size_of___awtoft 0025         __size_of___ftpack 006E  
       __size_of___lltoft 002F               __pbssCOMMON 007A                 ___latbits 0002  
       __size_of___lwtoft 0018             __pcstackBANK0 0020             __pcstackBANK1 00A0  
                ?___ftadd 003E                  ?___awmod 0034                  ?___ftdiv 0028  
                ?___ftneg 0020                  ?___ftmul 002E                  ?___ftsub 004B  
                ?___fttol 002C                 __pstrings 0800                 _eval_poly 0E71  
                ?_validar 0070            __size_of_floor 0099            __size_of_ldexp 0088  
          __size_of_frexp 0042         interrupt_function 0004               __stringbase 0805  
              ?_eval_poly 004B         ___lmul@multiplier 0020                 frexp@eptr 0023  
        __size_of___ftadd 0109          __size_of___awmod 004D          __size_of___ftdiv 00B8  
        __size_of___ftneg 000A                  ___altoft 0C96          __size_of___ftmul 00D3  
        __size_of___ftsub 0021          __size_of___fttol 008E                  ___awtoft 0C01  
                ___ftpack 0E03        __end_of__stringtab 0806                  ___lltoft 0C26  
                ___lwtoft 0BA4                  _main$644 00AB                  __ptext10 0F72  
                __ptext11 0DA4                  __ptext20 0C01                  __ptext12 0C96  
                __ptext21 0C26                  __ptext13 0E71                  __ptext22 0BA4  
                __ptext14 04BF                  __ptext23 0E03                  __ptext15 0B91  
                __ptext24 07B1                  __ptext16 0BBC                  __ptext25 0BDD  
                __ptext17 02DA                  __ptext18 0B87                  __ptext19 0660  
        __size_of_validar 0043         __CFG_BOR4V$BOR40V 0000             __size_of_main 00DC  
           __size_of_rand 0047                  main@aux2 00B0                  exp@coeff 0806  
                log@coeff 0824                _INTCONbits 000B               ??_eval_poly 0051  
                intlevel1 0000                 stringcode 0800                  stringdir 0800  
                stringtab 0800  
